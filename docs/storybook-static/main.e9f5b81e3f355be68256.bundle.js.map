{"version":3,"file":"main.e9f5b81e3f355be68256.bundle.js","sources":["webpack:///./.storybook/generated-entry.js","webpack:///./.storybook/preview.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///\\.)(","webpack:///./stories/action-sheet/action-sheet.stories.tsx","webpack:///./stories/ad-banners/ad-banners.stories.tsx","webpack:///./stories/app-banner/app-banner.stories.tsx","webpack:///./stories/app-installation-cta/app-installation-cta.stories.tsx","webpack:///./stories/author/author.stories.tsx","webpack:///./stories/booking-completion/booking-completion.stories.mdx","webpack:///./stories/color-palette/color-box.js","webpack:///./stories/color-palette/color-palette.stories.mdx","webpack:///./stories/content-sharing/content-sharing.stories.tsx","webpack:///./stories/core-elements/accordion.stories.js","webpack:///./stories/core-elements/button.stories.js","webpack:///./stories/core-elements/drawer.stories.js","webpack:///./stories/core-elements/flex-box.stories.tsx","webpack:///./stories/core-elements/form.stories.mdx","webpack:///./stories/core-elements/image.stories.tsx","webpack:///./stories/core-elements/label.stories.js","webpack:///./stories/core-elements/list.stories.mdx","webpack:///./stories/core-elements/long-clickable.stories.tsx","webpack:///./stories/core-elements/navbar.stories.js","webpack:///./stories/core-elements/numeric-spinner.stories.js","webpack:///./stories/core-elements/radio-wrapper.js","webpack:///./stories/core-elements/rating.stories.js","webpack:///./stories/core-elements/section.stories.js","webpack:///./stories/core-elements/segment.stories.mdx","webpack:///./stories/core-elements/skeleton.stories.tsx","webpack:///./stories/core-elements/spinner.stories.tsx","webpack:///./stories/core-elements/table.stories.js","webpack:///./stories/core-elements/tabs.stories.js","webpack:///./stories/core-elements/text.stories.mdx","webpack:///./stories/core-elements/tooltip.stories.js","webpack:///./stories/core-elements/video.stories.mdx","webpack:///./stories/date-picker/date-picker.stories.tsx","webpack:///./stories/date-picker/date-styles.stories.tsx","webpack:///./stories/directions-finder/directions-finder.stories.tsx","webpack:///./stories/drawer-button/drawer-button.stories.tsx","webpack:///./stories/footer/footer.stories.tsx","webpack:///./stories/form/components/checkbox.tsx","webpack:///./stories/form/components/radio.tsx","webpack:///./stories/form/components/select-action-sheet.tsx","webpack:///./stories/form/form.stories.mdx","webpack:///./stories/hub-form/hub-form.stories.tsx","webpack:///./stories/i18n/i18n.stories.tsx","webpack:///./stories/image-carousel/image-carousel.stories.tsx","webpack:///./stories/listing-filter/listing-filter.stories.tsx","webpack:///./stories/location-properties/location-properties.stories.tsx","webpack:///./stories/modals/modals.stories.tsx","webpack:///./stories/modals/modals.transition-modal.stories.tsx","webpack:///./stories/nearby-pois/nearby-pois.stories.tsx","webpack:///./stories/poi-detail/actions.stories.tsx","webpack:///./stories/poi-detail/detail-header.stories.tsx","webpack:///./stories/poi-detail/image-carousel.stories.tsx","webpack:///./stories/poi-detail/recommended-articles.stories.tsx","webpack:///./stories/poi-list-elements/poi.stories.tsx","webpack:///./stories/popup/popup.stories.js","webpack:///./stories/pricing/pricing.stories.js","webpack:///./stories/public-header/public-header.stories.js","webpack:///./stories/react-contexts/images-context.stories.js","webpack:///./stories/react-hooks/hooks.stories.tsx","webpack:///./stories/recommended-contents/recommended-contents.stories.js","webpack:///./stories/resource-list-element/resource-list-element.stories.tsx","webpack:///./stories/reviews/reviews-placeholder.stories.js","webpack:///./stories/reviews/reviews.stories.js","webpack:///./stories/scrap-button/index.stories.tsx","webpack:///./stories/search/search.stories.js","webpack:///./stories/slider/slider.stories.tsx","webpack:///./stories/social-reviews/social-reviews.stories.tsx","webpack:///./stories/static-map/static-map.stories.js","webpack:///./stories/style-box/atom.stories.mdx","webpack:///./stories/style-box/molecular.stories.mdx","webpack:///./stories/triple-document/triple-document.embedded.stories.js","webpack:///./stories/triple-document/triple-document.images.stories.js","webpack:///./stories/triple-document/triple-document.links.stories.js","webpack:///./stories/triple-document/triple-document.list.stories.js","webpack:///./stories/triple-document/triple-document.pois.stories.js","webpack:///./stories/triple-document/triple-document.regions.stories.js","webpack:///./stories/triple-document/triple-document.stories.js","webpack:///./stories/user-verification/verification-request.stories.tsx","webpack:///./util.inspect (ignored)"],"sourcesContent":["\n              import { configure } from '@storybook/react';\n              module._StorybookPreserveDecorators = true;\n\n              configure([require.context('../stories', true, /^\\.\\/(?:(?:|\\/|(?:(?:(?!(?:|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^\\/]*?\\.stories\\.(js|mdx|tsx))$/)\n              ], module);\n            ","import React from 'react'\nimport { addDecorator } from '@storybook/react'\nimport { withKnobs } from '@storybook/addon-knobs'\nimport { GlobalStyle } from '@titicaca/core-elements'\n\naddDecorator(withKnobs)\naddDecorator((stories) => (\n  <>\n    <GlobalStyle />\n    {stories()}\n  </>\n))\n","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","var map = {\n\t\"./action-sheet/action-sheet.stories.tsx\": \"./stories/action-sheet/action-sheet.stories.tsx\",\n\t\"./ad-banners/ad-banners.stories.tsx\": \"./stories/ad-banners/ad-banners.stories.tsx\",\n\t\"./app-banner/app-banner.stories.tsx\": \"./stories/app-banner/app-banner.stories.tsx\",\n\t\"./app-installation-cta/app-installation-cta.stories.tsx\": \"./stories/app-installation-cta/app-installation-cta.stories.tsx\",\n\t\"./author/author.stories.tsx\": \"./stories/author/author.stories.tsx\",\n\t\"./booking-completion/booking-completion.stories.mdx\": \"./stories/booking-completion/booking-completion.stories.mdx\",\n\t\"./color-palette/color-palette.stories.mdx\": \"./stories/color-palette/color-palette.stories.mdx\",\n\t\"./content-sharing/content-sharing.stories.tsx\": \"./stories/content-sharing/content-sharing.stories.tsx\",\n\t\"./core-elements/accordion.stories.js\": \"./stories/core-elements/accordion.stories.js\",\n\t\"./core-elements/button.stories.js\": \"./stories/core-elements/button.stories.js\",\n\t\"./core-elements/drawer.stories.js\": \"./stories/core-elements/drawer.stories.js\",\n\t\"./core-elements/flex-box.stories.tsx\": \"./stories/core-elements/flex-box.stories.tsx\",\n\t\"./core-elements/form.stories.mdx\": \"./stories/core-elements/form.stories.mdx\",\n\t\"./core-elements/image.stories.tsx\": \"./stories/core-elements/image.stories.tsx\",\n\t\"./core-elements/label.stories.js\": \"./stories/core-elements/label.stories.js\",\n\t\"./core-elements/list.stories.mdx\": \"./stories/core-elements/list.stories.mdx\",\n\t\"./core-elements/long-clickable.stories.tsx\": \"./stories/core-elements/long-clickable.stories.tsx\",\n\t\"./core-elements/navbar.stories.js\": \"./stories/core-elements/navbar.stories.js\",\n\t\"./core-elements/numeric-spinner.stories.js\": \"./stories/core-elements/numeric-spinner.stories.js\",\n\t\"./core-elements/rating.stories.js\": \"./stories/core-elements/rating.stories.js\",\n\t\"./core-elements/section.stories.js\": \"./stories/core-elements/section.stories.js\",\n\t\"./core-elements/segment.stories.mdx\": \"./stories/core-elements/segment.stories.mdx\",\n\t\"./core-elements/skeleton.stories.tsx\": \"./stories/core-elements/skeleton.stories.tsx\",\n\t\"./core-elements/spinner.stories.tsx\": \"./stories/core-elements/spinner.stories.tsx\",\n\t\"./core-elements/table.stories.js\": \"./stories/core-elements/table.stories.js\",\n\t\"./core-elements/tabs.stories.js\": \"./stories/core-elements/tabs.stories.js\",\n\t\"./core-elements/text.stories.mdx\": \"./stories/core-elements/text.stories.mdx\",\n\t\"./core-elements/tooltip.stories.js\": \"./stories/core-elements/tooltip.stories.js\",\n\t\"./core-elements/video.stories.mdx\": \"./stories/core-elements/video.stories.mdx\",\n\t\"./date-picker/date-picker.stories.tsx\": \"./stories/date-picker/date-picker.stories.tsx\",\n\t\"./date-picker/date-styles.stories.tsx\": \"./stories/date-picker/date-styles.stories.tsx\",\n\t\"./directions-finder/directions-finder.stories.tsx\": \"./stories/directions-finder/directions-finder.stories.tsx\",\n\t\"./drawer-button/drawer-button.stories.tsx\": \"./stories/drawer-button/drawer-button.stories.tsx\",\n\t\"./footer/footer.stories.tsx\": \"./stories/footer/footer.stories.tsx\",\n\t\"./form/form.stories.mdx\": \"./stories/form/form.stories.mdx\",\n\t\"./hub-form/hub-form.stories.tsx\": \"./stories/hub-form/hub-form.stories.tsx\",\n\t\"./i18n/i18n.stories.tsx\": \"./stories/i18n/i18n.stories.tsx\",\n\t\"./image-carousel/image-carousel.stories.tsx\": \"./stories/image-carousel/image-carousel.stories.tsx\",\n\t\"./listing-filter/listing-filter.stories.tsx\": \"./stories/listing-filter/listing-filter.stories.tsx\",\n\t\"./location-properties/location-properties.stories.tsx\": \"./stories/location-properties/location-properties.stories.tsx\",\n\t\"./modals/modals.stories.tsx\": \"./stories/modals/modals.stories.tsx\",\n\t\"./modals/modals.transition-modal.stories.tsx\": \"./stories/modals/modals.transition-modal.stories.tsx\",\n\t\"./nearby-pois/nearby-pois.stories.tsx\": \"./stories/nearby-pois/nearby-pois.stories.tsx\",\n\t\"./poi-detail/actions.stories.tsx\": \"./stories/poi-detail/actions.stories.tsx\",\n\t\"./poi-detail/detail-header.stories.tsx\": \"./stories/poi-detail/detail-header.stories.tsx\",\n\t\"./poi-detail/image-carousel.stories.tsx\": \"./stories/poi-detail/image-carousel.stories.tsx\",\n\t\"./poi-detail/recommended-articles.stories.tsx\": \"./stories/poi-detail/recommended-articles.stories.tsx\",\n\t\"./poi-list-elements/poi.stories.tsx\": \"./stories/poi-list-elements/poi.stories.tsx\",\n\t\"./popup/popup.stories.js\": \"./stories/popup/popup.stories.js\",\n\t\"./pricing/pricing.stories.js\": \"./stories/pricing/pricing.stories.js\",\n\t\"./public-header/public-header.stories.js\": \"./stories/public-header/public-header.stories.js\",\n\t\"./react-contexts/images-context.stories.js\": \"./stories/react-contexts/images-context.stories.js\",\n\t\"./react-hooks/hooks.stories.tsx\": \"./stories/react-hooks/hooks.stories.tsx\",\n\t\"./recommended-contents/recommended-contents.stories.js\": \"./stories/recommended-contents/recommended-contents.stories.js\",\n\t\"./resource-list-element/resource-list-element.stories.tsx\": \"./stories/resource-list-element/resource-list-element.stories.tsx\",\n\t\"./reviews/reviews-placeholder.stories.js\": \"./stories/reviews/reviews-placeholder.stories.js\",\n\t\"./reviews/reviews.stories.js\": \"./stories/reviews/reviews.stories.js\",\n\t\"./scrap-button/index.stories.tsx\": \"./stories/scrap-button/index.stories.tsx\",\n\t\"./search/search.stories.js\": \"./stories/search/search.stories.js\",\n\t\"./slider/slider.stories.tsx\": \"./stories/slider/slider.stories.tsx\",\n\t\"./social-reviews/social-reviews.stories.tsx\": \"./stories/social-reviews/social-reviews.stories.tsx\",\n\t\"./static-map/static-map.stories.js\": \"./stories/static-map/static-map.stories.js\",\n\t\"./style-box/atom.stories.mdx\": \"./stories/style-box/atom.stories.mdx\",\n\t\"./style-box/molecular.stories.mdx\": \"./stories/style-box/molecular.stories.mdx\",\n\t\"./triple-document/triple-document.embedded.stories.js\": \"./stories/triple-document/triple-document.embedded.stories.js\",\n\t\"./triple-document/triple-document.images.stories.js\": \"./stories/triple-document/triple-document.images.stories.js\",\n\t\"./triple-document/triple-document.links.stories.js\": \"./stories/triple-document/triple-document.links.stories.js\",\n\t\"./triple-document/triple-document.list.stories.js\": \"./stories/triple-document/triple-document.list.stories.js\",\n\t\"./triple-document/triple-document.pois.stories.js\": \"./stories/triple-document/triple-document.pois.stories.js\",\n\t\"./triple-document/triple-document.regions.stories.js\": \"./stories/triple-document/triple-document.regions.stories.js\",\n\t\"./triple-document/triple-document.stories.js\": \"./stories/triple-document/triple-document.stories.js\",\n\t\"./user-verification/verification-request.stories.tsx\": \"./stories/user-verification/verification-request.stories.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./stories sync recursive ^\\\\.\\\\/(?:(?:|\\\\/|(?:(?:(?!(?:|\\\\/)\\\\.).)*?)\\\\/)(?!\\\\.)(?=.)[^\\\\/]*?\\\\.stories\\\\.(js|mdx|tsx))$\";","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/action-sheet\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport styled from 'styled-components'\\nimport { text, boolean, number, select, object } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport ActionSheet from '@titicaca/action-sheet'\\nimport { RangePicker } from '@titicaca/date-picker'\\n\\nexport default {\\n  title: 'action-sheet | action-sheet',\\n}\\n\\nexport function BaseActionSheet() {\\n  return (\\n    <ActionSheet\\n      open={boolean('열림', false)}\\n      title={text('제목', '샘플 액션 시트')}\\n      onClose={action('onClose')}\\n    >\\n      <ActionSheet.Item>메뉴 1</ActionSheet.Item>\\n      <ActionSheet.Item>메뉴 2</ActionSheet.Item>\\n    </ActionSheet>\\n  )\\n}\\n\\nBaseActionSheet.story = {\\n  name: '기본 액션시트',\\n}\\n\\nexport function ActionSheetWithTextMenu() {\\n  return (\\n    <ActionSheet\\n      open={boolean('열림', true)}\\n      title={text('제목', '샘플 액션 시트')}\\n    >\\n      <ActionSheet.Item checked={boolean('메뉴 1 선택', true)}>\\n        메뉴 1\\n      </ActionSheet.Item>\\n      <ActionSheet.Item checked={boolean('메뉴 2 선택', false)}>\\n        메뉴 2\\n      </ActionSheet.Item>\\n      <ActionSheet.Item\\n        icon={select(\\n          '아이콘 종류',\\n          [\\n            'save',\\n            'schedule',\\n            'share',\\n            'suggest',\\n            'review',\\n            'report',\\n            'delete',\\n          ],\\n          'save',\\n        )}\\n      >\\n        {text('메뉴 텍스트', '샘플 메뉴')}\\n      </ActionSheet.Item>\\n      <ActionSheet.Item buttonLabel={text('버튼 레이블', '액션')}>\\n        {text('메뉴 텍스트', '샘플 메뉴')}\\n      </ActionSheet.Item>\\n    </ActionSheet>\\n  )\\n}\\n\\nActionSheetWithTextMenu.story = {\\n  name: '텍스트 메뉴',\\n}\\n\\nexport function ActionSheetWithIconMenu() {\\n  return (\\n    <ActionSheet\\n      open={boolean('열림', true)}\\n      title={text('제목', '샘플 액션 시트')}\\n    >\\n      <ActionSheet.Item\\n        icon={select(\\n          '아이콘 종류',\\n          [\\n            'save',\\n            'schedule',\\n            'share',\\n            'suggest',\\n            'review',\\n            'report',\\n            'delete',\\n          ],\\n          'save',\\n        )}\\n      >\\n        {text('메뉴 텍스트', '샘플 메뉴')}\\n      </ActionSheet.Item>\\n      <ActionSheet.Item buttonLabel={text('버튼 레이블', '액션')}>\\n        {text('메뉴 텍스트', '샘플 메뉴')}\\n      </ActionSheet.Item>\\n    </ActionSheet>\\n  )\\n}\\n\\nActionSheetWithIconMenu.story = {\\n  name: '아이콘 메뉴',\\n}\\n\\nexport function ActionSheetWithForm() {\\n  return (\\n    <ActionSheet\\n      open={boolean('열림', true)}\\n      title={text('제목', '샘플 액션 시트')}\\n      borderRadius={number('시트 모서리의 radius 값', 0)}\\n      from={select('시트가 나오는 위치', ['bottom', 'top'], 'top')}\\n      maxContentHeight={number('컨텐츠 영역의 최대 높이', 100)}\\n      padding={object(\\n        'padding',\\n        {\\n          top: 20,\\n          left: 25,\\n          bottom: 30,\\n          right: 25,\\n        },\\n        'padding 옵션',\\n      )}\\n    >\\n      <ActionSheet.Item\\n        icon={select(\\n          '아이콘 종류',\\n          [\\n            'save',\\n            'schedule',\\n            'share',\\n            'suggest',\\n            'review',\\n            'report',\\n            'delete',\\n          ],\\n          'save',\\n        )}\\n      >\\n        {text('메뉴 텍스트', '샘플 메뉴')}\\n      </ActionSheet.Item>\\n      <ActionSheet.Item buttonLabel={text('버튼 레이블', '액션')}>\\n        {text('메뉴 텍스트', '샘플 메뉴')}\\n      </ActionSheet.Item>\\n    </ActionSheet>\\n  )\\n}\\n\\nActionSheetWithForm.story = {\\n  name: '액션시트 방향 조절',\\n}\\n\\nexport function ActionSheetWithCustomHeader() {\\n  const Title = styled.h1`\\n    padding: 10px 20px;\\n    font-size: 24px;\\n    font-weight: bold;\\n  `\\n  const Help = styled.small`\\n    padding: 0 20px;\\n    color: gray;\\n    font-size: 13px;\\n  `\\n  const CustomHeader = ({ title, help }: { title: string; help: string }) => (\\n    <>\\n      <Title>{title}</Title>\\n      <Help>{help}</Help>\\n    </>\\n  )\\n\\n  return (\\n    <ActionSheet\\n      open={boolean('열림', true)}\\n      title={\\n        <CustomHeader title=\\\"여행일정\\\" help=\\\"출발일-도착일을 선택해주세요.\\\" />\\n      }\\n      onClose={action('onClose')}\\n    >\\n      <ActionSheet.Item>메뉴 1</ActionSheet.Item>\\n      <ActionSheet.Item>메뉴 2</ActionSheet.Item>\\n    </ActionSheet>\\n  )\\n}\\n\\nActionSheetWithCustomHeader.story = {\\n  name: '커스텀 헤더',\\n}\\n\\nexport function ActionSheetWithExtendStyle() {\\n  const NewStyledActionSheet = styled(ActionSheet)`\\n    > div:last-child {\\n      /* padding: 0; */\\n    }\\n  `\\n\\n  return (\\n    <>\\n      <a onClick={action('clicked')}>Click me</a>\\n      <NewStyledActionSheet\\n        open={boolean('열림', true)}\\n        title={text('제목', '샘플 액션 시트')}\\n        onClose={action('onClose')}\\n      >\\n        <RangePicker startDate={null} endDate={null} onDatesChange={() => {}} />\\n      </NewStyledActionSheet>\\n    </>\\n  )\\n}\\n\\nActionSheetWithExtendStyle.story = {\\n  name: '스타일 확장',\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"action-sheet-action-sheet--base-action-sheet\":{\"startLoc\":{\"col\":7,\"line\":12},\"endLoc\":{\"col\":1,\"line\":23},\"startBody\":{\"col\":7,\"line\":12},\"endBody\":{\"col\":1,\"line\":23}},\"action-sheet-action-sheet--action-sheet-with-text-menu\":{\"startLoc\":{\"col\":7,\"line\":29},\"endLoc\":{\"col\":1,\"line\":63},\"startBody\":{\"col\":7,\"line\":29},\"endBody\":{\"col\":1,\"line\":63}},\"action-sheet-action-sheet--action-sheet-with-icon-menu\":{\"startLoc\":{\"col\":7,\"line\":69},\"endLoc\":{\"col\":1,\"line\":97},\"startBody\":{\"col\":7,\"line\":69},\"endBody\":{\"col\":1,\"line\":97}},\"action-sheet-action-sheet--action-sheet-with-form\":{\"startLoc\":{\"col\":7,\"line\":103},\"endLoc\":{\"col\":1,\"line\":144},\"startBody\":{\"col\":7,\"line\":103},\"endBody\":{\"col\":1,\"line\":144}},\"action-sheet-action-sheet--action-sheet-with-custom-header\":{\"startLoc\":{\"col\":7,\"line\":150},\"endLoc\":{\"col\":1,\"line\":180},\"startBody\":{\"col\":7,\"line\":150},\"endBody\":{\"col\":1,\"line\":180}},\"action-sheet-action-sheet--action-sheet-with-extend-style\":{\"startLoc\":{\"col\":7,\"line\":186},\"endLoc\":{\"col\":1,\"line\":205},\"startBody\":{\"col\":7,\"line\":186},\"endBody\":{\"col\":1,\"line\":205}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/action-sheet.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport styled from 'styled-components'\nimport { text, boolean, number, select, object } from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\nimport ActionSheet from '@titicaca/action-sheet'\nimport { RangePicker } from '@titicaca/date-picker'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport styled from 'styled-components'\\nimport { text, boolean, number, select, object } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport ActionSheet from '@titicaca/action-sheet'\\nimport { RangePicker } from '@titicaca/date-picker'\\n\\nexport default {\\n  title: 'action-sheet | action-sheet',\\n}\\n\\nexport function BaseActionSheet() {\\n  return (\\n    <ActionSheet\\n      open={boolean('열림', false)}\\n      title={text('제목', '샘플 액션 시트')}\\n      onClose={action('onClose')}\\n    >\\n      <ActionSheet.Item>메뉴 1</ActionSheet.Item>\\n      <ActionSheet.Item>메뉴 2</ActionSheet.Item>\\n    </ActionSheet>\\n  )\\n}\\n\\nBaseActionSheet.story = {\\n  name: '기본 액션시트',\\n}\\n\\nexport function ActionSheetWithTextMenu() {\\n  return (\\n    <ActionSheet\\n      open={boolean('열림', true)}\\n      title={text('제목', '샘플 액션 시트')}\\n    >\\n      <ActionSheet.Item checked={boolean('메뉴 1 선택', true)}>\\n        메뉴 1\\n      </ActionSheet.Item>\\n      <ActionSheet.Item checked={boolean('메뉴 2 선택', false)}>\\n        메뉴 2\\n      </ActionSheet.Item>\\n      <ActionSheet.Item\\n        icon={select(\\n          '아이콘 종류',\\n          [\\n            'save',\\n            'schedule',\\n            'share',\\n            'suggest',\\n            'review',\\n            'report',\\n            'delete',\\n          ],\\n          'save',\\n        )}\\n      >\\n        {text('메뉴 텍스트', '샘플 메뉴')}\\n      </ActionSheet.Item>\\n      <ActionSheet.Item buttonLabel={text('버튼 레이블', '액션')}>\\n        {text('메뉴 텍스트', '샘플 메뉴')}\\n      </ActionSheet.Item>\\n    </ActionSheet>\\n  )\\n}\\n\\nActionSheetWithTextMenu.story = {\\n  name: '텍스트 메뉴',\\n}\\n\\nexport function ActionSheetWithIconMenu() {\\n  return (\\n    <ActionSheet\\n      open={boolean('열림', true)}\\n      title={text('제목', '샘플 액션 시트')}\\n    >\\n      <ActionSheet.Item\\n        icon={select(\\n          '아이콘 종류',\\n          [\\n            'save',\\n            'schedule',\\n            'share',\\n            'suggest',\\n            'review',\\n            'report',\\n            'delete',\\n          ],\\n          'save',\\n        )}\\n      >\\n        {text('메뉴 텍스트', '샘플 메뉴')}\\n      </ActionSheet.Item>\\n      <ActionSheet.Item buttonLabel={text('버튼 레이블', '액션')}>\\n        {text('메뉴 텍스트', '샘플 메뉴')}\\n      </ActionSheet.Item>\\n    </ActionSheet>\\n  )\\n}\\n\\nActionSheetWithIconMenu.story = {\\n  name: '아이콘 메뉴',\\n}\\n\\nexport function ActionSheetWithForm() {\\n  return (\\n    <ActionSheet\\n      open={boolean('열림', true)}\\n      title={text('제목', '샘플 액션 시트')}\\n      borderRadius={number('시트 모서리의 radius 값', 0)}\\n      from={select('시트가 나오는 위치', ['bottom', 'top'], 'top')}\\n      maxContentHeight={number('컨텐츠 영역의 최대 높이', 100)}\\n      padding={object(\\n        'padding',\\n        {\\n          top: 20,\\n          left: 25,\\n          bottom: 30,\\n          right: 25,\\n        },\\n        'padding 옵션',\\n      )}\\n    >\\n      <ActionSheet.Item\\n        icon={select(\\n          '아이콘 종류',\\n          [\\n            'save',\\n            'schedule',\\n            'share',\\n            'suggest',\\n            'review',\\n            'report',\\n            'delete',\\n          ],\\n          'save',\\n        )}\\n      >\\n        {text('메뉴 텍스트', '샘플 메뉴')}\\n      </ActionSheet.Item>\\n      <ActionSheet.Item buttonLabel={text('버튼 레이블', '액션')}>\\n        {text('메뉴 텍스트', '샘플 메뉴')}\\n      </ActionSheet.Item>\\n    </ActionSheet>\\n  )\\n}\\n\\nActionSheetWithForm.story = {\\n  name: '액션시트 방향 조절',\\n}\\n\\nexport function ActionSheetWithCustomHeader() {\\n  const Title = styled.h1`\\n    padding: 10px 20px;\\n    font-size: 24px;\\n    font-weight: bold;\\n  `\\n  const Help = styled.small`\\n    padding: 0 20px;\\n    color: gray;\\n    font-size: 13px;\\n  `\\n  const CustomHeader = ({ title, help }: { title: string; help: string }) => (\\n    <>\\n      <Title>{title}</Title>\\n      <Help>{help}</Help>\\n    </>\\n  )\\n\\n  return (\\n    <ActionSheet\\n      open={boolean('열림', true)}\\n      title={\\n        <CustomHeader title=\\\"여행일정\\\" help=\\\"출발일-도착일을 선택해주세요.\\\" />\\n      }\\n      onClose={action('onClose')}\\n    >\\n      <ActionSheet.Item>메뉴 1</ActionSheet.Item>\\n      <ActionSheet.Item>메뉴 2</ActionSheet.Item>\\n    </ActionSheet>\\n  )\\n}\\n\\nActionSheetWithCustomHeader.story = {\\n  name: '커스텀 헤더',\\n}\\n\\nexport function ActionSheetWithExtendStyle() {\\n  const NewStyledActionSheet = styled(ActionSheet)`\\n    > div:last-child {\\n      /* padding: 0; */\\n    }\\n  `\\n\\n  return (\\n    <>\\n      <a onClick={action('clicked')}>Click me</a>\\n      <NewStyledActionSheet\\n        open={boolean('열림', true)}\\n        title={text('제목', '샘플 액션 시트')}\\n        onClose={action('onClose')}\\n      >\\n        <RangePicker startDate={null} endDate={null} onDatesChange={() => {}} />\\n      </NewStyledActionSheet>\\n    </>\\n  )\\n}\\n\\nActionSheetWithExtendStyle.story = {\\n  name: '스타일 확장',\\n}\\n\",\"locationsMap\":{\"action-sheet-action-sheet--base-action-sheet\":{\"startLoc\":{\"col\":7,\"line\":12},\"endLoc\":{\"col\":1,\"line\":23},\"startBody\":{\"col\":7,\"line\":12},\"endBody\":{\"col\":1,\"line\":23}},\"action-sheet-action-sheet--action-sheet-with-text-menu\":{\"startLoc\":{\"col\":7,\"line\":29},\"endLoc\":{\"col\":1,\"line\":63},\"startBody\":{\"col\":7,\"line\":29},\"endBody\":{\"col\":1,\"line\":63}},\"action-sheet-action-sheet--action-sheet-with-icon-menu\":{\"startLoc\":{\"col\":7,\"line\":69},\"endLoc\":{\"col\":1,\"line\":97},\"startBody\":{\"col\":7,\"line\":69},\"endBody\":{\"col\":1,\"line\":97}},\"action-sheet-action-sheet--action-sheet-with-form\":{\"startLoc\":{\"col\":7,\"line\":103},\"endLoc\":{\"col\":1,\"line\":144},\"startBody\":{\"col\":7,\"line\":103},\"endBody\":{\"col\":1,\"line\":144}},\"action-sheet-action-sheet--action-sheet-with-custom-header\":{\"startLoc\":{\"col\":7,\"line\":150},\"endLoc\":{\"col\":1,\"line\":180},\"startBody\":{\"col\":7,\"line\":150},\"endBody\":{\"col\":1,\"line\":180}},\"action-sheet-action-sheet--action-sheet-with-extend-style\":{\"startLoc\":{\"col\":7,\"line\":186},\"endLoc\":{\"col\":1,\"line\":205},\"startBody\":{\"col\":7,\"line\":186},\"endBody\":{\"col\":1,\"line\":205}}}},},\n  title: 'action-sheet | action-sheet',\n}\n\nexport const BaseActionSheet = addSourceDecorator(function BaseActionSheet() {\n  return (\n    <ActionSheet\n      open={boolean('열림', false)}\n      title={text('제목', '샘플 액션 시트')}\n      onClose={action('onClose')}\n    >\n      <ActionSheet.Item>메뉴 1</ActionSheet.Item>\n      <ActionSheet.Item>메뉴 2</ActionSheet.Item>\n    </ActionSheet>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nBaseActionSheet.story = {\n  name: '기본 액션시트',\n}\n\nexport const ActionSheetWithTextMenu = addSourceDecorator(function ActionSheetWithTextMenu() {\n  return (\n    <ActionSheet\n      open={boolean('열림', true)}\n      title={text('제목', '샘플 액션 시트')}\n    >\n      <ActionSheet.Item checked={boolean('메뉴 1 선택', true)}>\n        메뉴 1\n      </ActionSheet.Item>\n      <ActionSheet.Item checked={boolean('메뉴 2 선택', false)}>\n        메뉴 2\n      </ActionSheet.Item>\n      <ActionSheet.Item\n        icon={select(\n          '아이콘 종류',\n          [\n            'save',\n            'schedule',\n            'share',\n            'suggest',\n            'review',\n            'report',\n            'delete',\n          ],\n          'save',\n        )}\n      >\n        {text('메뉴 텍스트', '샘플 메뉴')}\n      </ActionSheet.Item>\n      <ActionSheet.Item buttonLabel={text('버튼 레이블', '액션')}>\n        {text('메뉴 텍스트', '샘플 메뉴')}\n      </ActionSheet.Item>\n    </ActionSheet>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nActionSheetWithTextMenu.story = {\n  name: '텍스트 메뉴',\n}\n\nexport const ActionSheetWithIconMenu = addSourceDecorator(function ActionSheetWithIconMenu() {\n  return (\n    <ActionSheet\n      open={boolean('열림', true)}\n      title={text('제목', '샘플 액션 시트')}\n    >\n      <ActionSheet.Item\n        icon={select(\n          '아이콘 종류',\n          [\n            'save',\n            'schedule',\n            'share',\n            'suggest',\n            'review',\n            'report',\n            'delete',\n          ],\n          'save',\n        )}\n      >\n        {text('메뉴 텍스트', '샘플 메뉴')}\n      </ActionSheet.Item>\n      <ActionSheet.Item buttonLabel={text('버튼 레이블', '액션')}>\n        {text('메뉴 텍스트', '샘플 메뉴')}\n      </ActionSheet.Item>\n    </ActionSheet>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nActionSheetWithIconMenu.story = {\n  name: '아이콘 메뉴',\n}\n\nexport const ActionSheetWithForm = addSourceDecorator(function ActionSheetWithForm() {\n  return (\n    <ActionSheet\n      open={boolean('열림', true)}\n      title={text('제목', '샘플 액션 시트')}\n      borderRadius={number('시트 모서리의 radius 값', 0)}\n      from={select('시트가 나오는 위치', ['bottom', 'top'], 'top')}\n      maxContentHeight={number('컨텐츠 영역의 최대 높이', 100)}\n      padding={object(\n        'padding',\n        {\n          top: 20,\n          left: 25,\n          bottom: 30,\n          right: 25,\n        },\n        'padding 옵션',\n      )}\n    >\n      <ActionSheet.Item\n        icon={select(\n          '아이콘 종류',\n          [\n            'save',\n            'schedule',\n            'share',\n            'suggest',\n            'review',\n            'report',\n            'delete',\n          ],\n          'save',\n        )}\n      >\n        {text('메뉴 텍스트', '샘플 메뉴')}\n      </ActionSheet.Item>\n      <ActionSheet.Item buttonLabel={text('버튼 레이블', '액션')}>\n        {text('메뉴 텍스트', '샘플 메뉴')}\n      </ActionSheet.Item>\n    </ActionSheet>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nActionSheetWithForm.story = {\n  name: '액션시트 방향 조절',\n}\n\nexport const ActionSheetWithCustomHeader = addSourceDecorator(function ActionSheetWithCustomHeader() {\n  const Title = styled.h1`\n    padding: 10px 20px;\n    font-size: 24px;\n    font-weight: bold;\n  `\n  const Help = styled.small`\n    padding: 0 20px;\n    color: gray;\n    font-size: 13px;\n  `\n  const CustomHeader = ({ title, help }: { title: string; help: string }) => (\n    <>\n      <Title>{title}</Title>\n      <Help>{help}</Help>\n    </>\n  )\n\n  return (\n    <ActionSheet\n      open={boolean('열림', true)}\n      title={\n        <CustomHeader title=\"여행일정\" help=\"출발일-도착일을 선택해주세요.\" />\n      }\n      onClose={action('onClose')}\n    >\n      <ActionSheet.Item>메뉴 1</ActionSheet.Item>\n      <ActionSheet.Item>메뉴 2</ActionSheet.Item>\n    </ActionSheet>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nActionSheetWithCustomHeader.story = {\n  name: '커스텀 헤더',\n}\n\nexport const ActionSheetWithExtendStyle = addSourceDecorator(function ActionSheetWithExtendStyle() {\n  const NewStyledActionSheet = styled(ActionSheet)`\n    > div:last-child {\n      /* padding: 0; */\n    }\n  `\n\n  return (\n    <>\n      <a onClick={action('clicked')}>Click me</a>\n      <NewStyledActionSheet\n        open={boolean('열림', true)}\n        title={text('제목', '샘플 액션 시트')}\n        onClose={action('onClose')}\n      >\n        <RangePicker startDate={null} endDate={null} onDatesChange={() => {}} />\n      </NewStyledActionSheet>\n    </>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nActionSheetWithExtendStyle.story = {\n  name: '스타일 확장',\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/ad-banners\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { number, text, select, boolean } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport { StoryFn } from '@storybook/addons'\\nimport {\\n  HistoryProvider,\\n  EventTrackingProvider,\\n  DeviceProvider,\\n} from '@titicaca/react-contexts'\\nimport AdBanners, { ListDirection } from '@titicaca/ad-banners'\\nimport styled from 'styled-components'\\n\\nconst CONTENT_TYPE_SET = {\\n  article: 'article',\\n  attraction: 'attraction',\\n  hotel: 'hotel',\\n  restaurant: 'restaurant',\\n}\\n\\nconst LongContent = styled.div`\\n  height: 1000px;\\n`\\n\\nexport default {\\n  title: 'ad-banners | AdBanners',\\n}\\n\\nfunction ProviderWrapper({ children }: { children: React.ReactNode }) {\\n  return (\\n    <DeviceProvider\\n      value={{\\n        inRegion: boolean('inRegion', true),\\n        latitude: number('위도', 13.471778),\\n        longitude: number('경도', 144.812304),\\n      }}\\n    >\\n      <EventTrackingProvider\\n        pageLabel=\\\"광고 배너 테스트\\\"\\n        trackEvent={action('이벤트 트래킹')}\\n        trackScreen={action('스크린 트래킹')}\\n        viewItem={action('viewItem')}\\n      >\\n        <HistoryProvider\\n          appUrlScheme=\\\"\\\"\\n          webUrlBase=\\\"\\\"\\n          isPublic={false}\\n          isAndroid={false}\\n          transitionModalHash=\\\"transition.general\\\"\\n        >\\n          <div>{children}</div>\\n        </HistoryProvider>\\n      </EventTrackingProvider>\\n    </DeviceProvider>\\n  )\\n}\\n\\nexport function BaseAdBanners() {\\n  return (\\n    <AdBanners\\n      contentType={select(\\n        '콘텐츠 타입',\\n        CONTENT_TYPE_SET,\\n        CONTENT_TYPE_SET['attraction'] as any,\\n      )}\\n      contentId={text('콘텐츠 ID', '81977f84-ddd0-4112-8057-6cc9dab9aa70')}\\n      regionId={text('리전 ID', 'ea2b52ff-9cdb-4028-9442-7a8defd13af9')}\\n      padding={{\\n        left: number('섹션 왼쪽 패딩', 0),\\n        right: number('섹션 오른쪽 패딩', 0),\\n      }}\\n      eventAttributes={{ title: '콘텐츠 제목' }}\\n    />\\n  )\\n}\\n\\nBaseAdBanners.story = {\\n  name: '기본 광고 배너',\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <ProviderWrapper>\\n        <div>{storyFn()}</div>\\n      </ProviderWrapper>\\n    ),\\n  ],\\n}\\n\\nexport function HorizontalAdBanners() {\\n  return (\\n    <>\\n      {boolean('스크롤 테스트', false) ? (\\n        <LongContent>스크롤을 내려보세요...</LongContent>\\n      ) : null}\\n      <AdBanners\\n        contentType={select(\\n          '콘텐츠 타입',\\n          CONTENT_TYPE_SET,\\n          CONTENT_TYPE_SET['attraction'] as any,\\n        )}\\n        contentId={text('콘텐츠 ID', '81977f84-ddd0-4112-8057-6cc9dab9aa70')}\\n        regionId={text('리전 ID', 'ea2b52ff-9cdb-4028-9442-7a8defd13af9')}\\n        direction={ListDirection.HORIZONTAL}\\n        padding={{\\n          top: number('위 패딩', 0),\\n          bottom: number('아래 패딩', 0),\\n          left: number('좌우 패딩', 25),\\n        }}\\n        eventAttributes={{ title: '콘텐츠 제목' }}\\n      />\\n    </>\\n  )\\n}\\n\\nHorizontalAdBanners.story = {\\n  name: '가로형 광고 배너',\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <ProviderWrapper>\\n        <div>{storyFn()}</div>\\n      </ProviderWrapper>\\n    ),\\n  ],\\n}\\n\\nexport function HotelListAdBanners() {\\n  return (\\n    <AdBanners\\n      direction={ListDirection.HORIZONTAL}\\n      padding={{\\n        left: number('섹션 왼쪽 패딩', 0),\\n        right: number('섹션 오른쪽 패딩', 0),\\n      }}\\n      onBannersFetch={async () => {\\n        const response = await fetch('/api/inventories/v1/hotels/items')\\n        const { items = [] } = await response.json()\\n        return items\\n      }}\\n      onBannerIntersect={action('배너 노출')}\\n      onBannerClick={action('배너 클릭')}\\n    />\\n  )\\n}\\n\\nHotelListAdBanners.story = {\\n  name: '호텔 목록 광고 배너',\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <ProviderWrapper>\\n        <div>{storyFn()}</div>\\n      </ProviderWrapper>\\n    ),\\n  ],\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"ad-banners-adbanners--base-ad-banners\":{\"startLoc\":{\"col\":7,\"line\":57},\"endLoc\":{\"col\":1,\"line\":74},\"startBody\":{\"col\":7,\"line\":57},\"endBody\":{\"col\":1,\"line\":74}},\"ad-banners-adbanners--horizontal-ad-banners\":{\"startLoc\":{\"col\":7,\"line\":87},\"endLoc\":{\"col\":1,\"line\":111},\"startBody\":{\"col\":7,\"line\":87},\"endBody\":{\"col\":1,\"line\":111}},\"ad-banners-adbanners--hotel-list-ad-banners\":{\"startLoc\":{\"col\":7,\"line\":124},\"endLoc\":{\"col\":1,\"line\":141},\"startBody\":{\"col\":7,\"line\":124},\"endBody\":{\"col\":1,\"line\":141}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/ad-banners.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { number, text, select, boolean } from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\nimport { StoryFn } from '@storybook/addons'\nimport {\n  HistoryProvider,\n  EventTrackingProvider,\n  DeviceProvider,\n} from '@titicaca/react-contexts'\nimport AdBanners, { ListDirection } from '@titicaca/ad-banners'\nimport styled from 'styled-components'\n\nconst CONTENT_TYPE_SET = {\n  article: 'article',\n  attraction: 'attraction',\n  hotel: 'hotel',\n  restaurant: 'restaurant',\n}\n\nconst LongContent = styled.div`\n  height: 1000px;\n`\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport { number, text, select, boolean } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport { StoryFn } from '@storybook/addons'\\nimport {\\n  HistoryProvider,\\n  EventTrackingProvider,\\n  DeviceProvider,\\n} from '@titicaca/react-contexts'\\nimport AdBanners, { ListDirection } from '@titicaca/ad-banners'\\nimport styled from 'styled-components'\\n\\nconst CONTENT_TYPE_SET = {\\n  article: 'article',\\n  attraction: 'attraction',\\n  hotel: 'hotel',\\n  restaurant: 'restaurant',\\n}\\n\\nconst LongContent = styled.div`\\n  height: 1000px;\\n`\\n\\nexport default {\\n  title: 'ad-banners | AdBanners',\\n}\\n\\nfunction ProviderWrapper({ children }: { children: React.ReactNode }) {\\n  return (\\n    <DeviceProvider\\n      value={{\\n        inRegion: boolean('inRegion', true),\\n        latitude: number('위도', 13.471778),\\n        longitude: number('경도', 144.812304),\\n      }}\\n    >\\n      <EventTrackingProvider\\n        pageLabel=\\\"광고 배너 테스트\\\"\\n        trackEvent={action('이벤트 트래킹')}\\n        trackScreen={action('스크린 트래킹')}\\n        viewItem={action('viewItem')}\\n      >\\n        <HistoryProvider\\n          appUrlScheme=\\\"\\\"\\n          webUrlBase=\\\"\\\"\\n          isPublic={false}\\n          isAndroid={false}\\n          transitionModalHash=\\\"transition.general\\\"\\n        >\\n          <div>{children}</div>\\n        </HistoryProvider>\\n      </EventTrackingProvider>\\n    </DeviceProvider>\\n  )\\n}\\n\\nexport function BaseAdBanners() {\\n  return (\\n    <AdBanners\\n      contentType={select(\\n        '콘텐츠 타입',\\n        CONTENT_TYPE_SET,\\n        CONTENT_TYPE_SET['attraction'] as any,\\n      )}\\n      contentId={text('콘텐츠 ID', '81977f84-ddd0-4112-8057-6cc9dab9aa70')}\\n      regionId={text('리전 ID', 'ea2b52ff-9cdb-4028-9442-7a8defd13af9')}\\n      padding={{\\n        left: number('섹션 왼쪽 패딩', 0),\\n        right: number('섹션 오른쪽 패딩', 0),\\n      }}\\n      eventAttributes={{ title: '콘텐츠 제목' }}\\n    />\\n  )\\n}\\n\\nBaseAdBanners.story = {\\n  name: '기본 광고 배너',\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <ProviderWrapper>\\n        <div>{storyFn()}</div>\\n      </ProviderWrapper>\\n    ),\\n  ],\\n}\\n\\nexport function HorizontalAdBanners() {\\n  return (\\n    <>\\n      {boolean('스크롤 테스트', false) ? (\\n        <LongContent>스크롤을 내려보세요...</LongContent>\\n      ) : null}\\n      <AdBanners\\n        contentType={select(\\n          '콘텐츠 타입',\\n          CONTENT_TYPE_SET,\\n          CONTENT_TYPE_SET['attraction'] as any,\\n        )}\\n        contentId={text('콘텐츠 ID', '81977f84-ddd0-4112-8057-6cc9dab9aa70')}\\n        regionId={text('리전 ID', 'ea2b52ff-9cdb-4028-9442-7a8defd13af9')}\\n        direction={ListDirection.HORIZONTAL}\\n        padding={{\\n          top: number('위 패딩', 0),\\n          bottom: number('아래 패딩', 0),\\n          left: number('좌우 패딩', 25),\\n        }}\\n        eventAttributes={{ title: '콘텐츠 제목' }}\\n      />\\n    </>\\n  )\\n}\\n\\nHorizontalAdBanners.story = {\\n  name: '가로형 광고 배너',\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <ProviderWrapper>\\n        <div>{storyFn()}</div>\\n      </ProviderWrapper>\\n    ),\\n  ],\\n}\\n\\nexport function HotelListAdBanners() {\\n  return (\\n    <AdBanners\\n      direction={ListDirection.HORIZONTAL}\\n      padding={{\\n        left: number('섹션 왼쪽 패딩', 0),\\n        right: number('섹션 오른쪽 패딩', 0),\\n      }}\\n      onBannersFetch={async () => {\\n        const response = await fetch('/api/inventories/v1/hotels/items')\\n        const { items = [] } = await response.json()\\n        return items\\n      }}\\n      onBannerIntersect={action('배너 노출')}\\n      onBannerClick={action('배너 클릭')}\\n    />\\n  )\\n}\\n\\nHotelListAdBanners.story = {\\n  name: '호텔 목록 광고 배너',\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <ProviderWrapper>\\n        <div>{storyFn()}</div>\\n      </ProviderWrapper>\\n    ),\\n  ],\\n}\\n\",\"locationsMap\":{\"ad-banners-adbanners--base-ad-banners\":{\"startLoc\":{\"col\":7,\"line\":57},\"endLoc\":{\"col\":1,\"line\":74},\"startBody\":{\"col\":7,\"line\":57},\"endBody\":{\"col\":1,\"line\":74}},\"ad-banners-adbanners--horizontal-ad-banners\":{\"startLoc\":{\"col\":7,\"line\":87},\"endLoc\":{\"col\":1,\"line\":111},\"startBody\":{\"col\":7,\"line\":87},\"endBody\":{\"col\":1,\"line\":111}},\"ad-banners-adbanners--hotel-list-ad-banners\":{\"startLoc\":{\"col\":7,\"line\":124},\"endLoc\":{\"col\":1,\"line\":141},\"startBody\":{\"col\":7,\"line\":124},\"endBody\":{\"col\":1,\"line\":141}}}},},\n  title: 'ad-banners | AdBanners',\n}\n\nfunction ProviderWrapper({ children }: { children: React.ReactNode }) {\n  return (\n    <DeviceProvider\n      value={{\n        inRegion: boolean('inRegion', true),\n        latitude: number('위도', 13.471778),\n        longitude: number('경도', 144.812304),\n      }}\n    >\n      <EventTrackingProvider\n        pageLabel=\"광고 배너 테스트\"\n        trackEvent={action('이벤트 트래킹')}\n        trackScreen={action('스크린 트래킹')}\n        viewItem={action('viewItem')}\n      >\n        <HistoryProvider\n          appUrlScheme=\"\"\n          webUrlBase=\"\"\n          isPublic={false}\n          isAndroid={false}\n          transitionModalHash=\"transition.general\"\n        >\n          <div>{children}</div>\n        </HistoryProvider>\n      </EventTrackingProvider>\n    </DeviceProvider>\n  )\n}\n\nexport const BaseAdBanners = addSourceDecorator(function BaseAdBanners() {\n  return (\n    <AdBanners\n      contentType={select(\n        '콘텐츠 타입',\n        CONTENT_TYPE_SET,\n        CONTENT_TYPE_SET['attraction'] as any,\n      )}\n      contentId={text('콘텐츠 ID', '81977f84-ddd0-4112-8057-6cc9dab9aa70')}\n      regionId={text('리전 ID', 'ea2b52ff-9cdb-4028-9442-7a8defd13af9')}\n      padding={{\n        left: number('섹션 왼쪽 패딩', 0),\n        right: number('섹션 오른쪽 패딩', 0),\n      }}\n      eventAttributes={{ title: '콘텐츠 제목' }}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nBaseAdBanners.story = {\n  name: '기본 광고 배너',\n  decorators: [\n    (storyFn: StoryFn<JSX.Element>) => (\n      <ProviderWrapper>\n        <div>{storyFn()}</div>\n      </ProviderWrapper>\n    ),\n  ],\n}\n\nexport const HorizontalAdBanners = addSourceDecorator(function HorizontalAdBanners() {\n  return (\n    <>\n      {boolean('스크롤 테스트', false) ? (\n        <LongContent>스크롤을 내려보세요...</LongContent>\n      ) : null}\n      <AdBanners\n        contentType={select(\n          '콘텐츠 타입',\n          CONTENT_TYPE_SET,\n          CONTENT_TYPE_SET['attraction'] as any,\n        )}\n        contentId={text('콘텐츠 ID', '81977f84-ddd0-4112-8057-6cc9dab9aa70')}\n        regionId={text('리전 ID', 'ea2b52ff-9cdb-4028-9442-7a8defd13af9')}\n        direction={ListDirection.HORIZONTAL}\n        padding={{\n          top: number('위 패딩', 0),\n          bottom: number('아래 패딩', 0),\n          left: number('좌우 패딩', 25),\n        }}\n        eventAttributes={{ title: '콘텐츠 제목' }}\n      />\n    </>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nHorizontalAdBanners.story = {\n  name: '가로형 광고 배너',\n  decorators: [\n    (storyFn: StoryFn<JSX.Element>) => (\n      <ProviderWrapper>\n        <div>{storyFn()}</div>\n      </ProviderWrapper>\n    ),\n  ],\n}\n\nexport const HotelListAdBanners = addSourceDecorator(function HotelListAdBanners() {\n  return (\n    <AdBanners\n      direction={ListDirection.HORIZONTAL}\n      padding={{\n        left: number('섹션 왼쪽 패딩', 0),\n        right: number('섹션 오른쪽 패딩', 0),\n      }}\n      onBannersFetch={async () => {\n        const response = await fetch('/api/inventories/v1/hotels/items')\n        const { items = [] } = await response.json()\n        return items\n      }}\n      onBannerIntersect={action('배너 노출')}\n      onBannerClick={action('배너 클릭')}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nHotelListAdBanners.story = {\n  name: '호텔 목록 광고 배너',\n  decorators: [\n    (storyFn: StoryFn<JSX.Element>) => (\n      <ProviderWrapper>\n        <div>{storyFn()}</div>\n      </ProviderWrapper>\n    ),\n  ],\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/app-banner\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { text } from '@storybook/addon-knobs'\\nimport AppBanner from '@titicaca/app-banner'\\n\\nexport default {\\n  title: 'app-banner | AppBanner',\\n}\\n\\nexport function BaseAppBanner() {\\n  return (\\n    <AppBanner\\n      title={text('제목', '트리플 - 해외여행 가이드')}\\n      description={text('설명', '가이드북, 일정짜기, 길찾기, 맛집')}\\n      cta={text('버튼 레이블', '앱에서 보기')}\\n    />\\n  )\\n}\\n\\nBaseAppBanner.story = {\\n  name: '공유페이지',\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"app-banner-appbanner--base-app-banner\":{\"startLoc\":{\"col\":7,\"line\":9},\"endLoc\":{\"col\":1,\"line\":17},\"startBody\":{\"col\":7,\"line\":9},\"endBody\":{\"col\":1,\"line\":17}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/app-banner.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { text } from '@storybook/addon-knobs'\nimport AppBanner from '@titicaca/app-banner'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport { text } from '@storybook/addon-knobs'\\nimport AppBanner from '@titicaca/app-banner'\\n\\nexport default {\\n  title: 'app-banner | AppBanner',\\n}\\n\\nexport function BaseAppBanner() {\\n  return (\\n    <AppBanner\\n      title={text('제목', '트리플 - 해외여행 가이드')}\\n      description={text('설명', '가이드북, 일정짜기, 길찾기, 맛집')}\\n      cta={text('버튼 레이블', '앱에서 보기')}\\n    />\\n  )\\n}\\n\\nBaseAppBanner.story = {\\n  name: '공유페이지',\\n}\\n\",\"locationsMap\":{\"app-banner-appbanner--base-app-banner\":{\"startLoc\":{\"col\":7,\"line\":9},\"endLoc\":{\"col\":1,\"line\":17},\"startBody\":{\"col\":7,\"line\":9},\"endBody\":{\"col\":1,\"line\":17}}}},},\n  title: 'app-banner | AppBanner',\n}\n\nexport const BaseAppBanner = addSourceDecorator(function BaseAppBanner() {\n  return (\n    <AppBanner\n      title={text('제목', '트리플 - 해외여행 가이드')}\n      description={text('설명', '가이드북, 일정짜기, 길찾기, 맛집')}\n      cta={text('버튼 레이블', '앱에서 보기')}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nBaseAppBanner.story = {\n  name: '공유페이지',\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/app-installation-cta\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport { text, boolean, select } from '@storybook/addon-knobs'\\nimport {\\n  ImageBanner,\\n  TextBanner,\\n  BannerCTA,\\n  FloatingButtonCTA,\\n  ChatbotCTA,\\n  BannerExitStrategy,\\n} from '@titicaca/app-installation-cta'\\n\\nexport default {\\n  title: 'app-installation-cta | AppInstallationCTA',\\n}\\n\\nexport function FloatingButton() {\\n  return (\\n    <FloatingButtonCTA\\n      appInstallLink={'https://triple.onelink.me/aZP6/21d43a81'}\\n      fixed={boolean('화면 고정', true)}\\n      description={text('설명', '설명 텍스트가 들어갑니다.')}\\n      trackEvent={action('tracked')}\\n      trackEventParams={{\\n        onShow: 'onShow',\\n        onSelect: 'onSelect(click)',\\n        onClose: 'onClose(dismiss)',\\n      }}\\n      onShow={action('onShow')}\\n      onClick={action('onClick')}\\n      onDismiss={action('onDismiss')}\\n    />\\n  )\\n}\\n\\nFloatingButton.story = {\\n  name: '트리플 앱 설치하기 버튼',\\n}\\n\\nexport function BaseImageBanner() {\\n  return (\\n    <ImageBanner\\n      imgUrl={text('이미지 URL', '')}\\n      installUrl={text('설치 URL', 'https://triple-dev.titicaca-corp.com')}\\n      onShow={action('onShow')}\\n      onClick={action('onClick')}\\n      onDismiss={action('onDismiss')}\\n    />\\n  )\\n}\\n\\nBaseImageBanner.story = {\\n  name: '이미지 배너',\\n}\\n\\nexport function BaseTextBanner() {\\n  return (\\n    <TextBanner\\n      message={text('표시할 메시지', '앱 다운로드시 가이드북 무료')}\\n      installUrl={text('설치 URL', 'https://triple-dev.titicaca-corp.com')}\\n      onShow={action('onShow')}\\n      onClick={action('onClick')}\\n    />\\n  )\\n}\\n\\nBaseTextBanner.story = {\\n  name: '텍스트 배너',\\n}\\n\\nexport function BaseBannerCTA() {\\n  return (\\n    <div>\\n      <BannerCTA\\n        inventoryId={text(\\n          '표시할 배너의 인벤토리 ID',\\n          'app-install-cta-poi-v1',\\n        )}\\n        installUrl={text('설치 URL', 'https://triple-dev.titicaca-corp.com')}\\n        onShow={action('onShow')}\\n        onClick={action('onClick')}\\n        onDismiss={action('onDismiss')}\\n      />\\n\\n      <div style={{ height: '2000px' }} />\\n    </div>\\n  )\\n}\\n\\nBaseBannerCTA.story = {\\n  name: '배너 CTA',\\n}\\n\\nexport function ChatBotBanner() {\\n  return (\\n    <div style={{ height: '600px', backgroundColor: '#fff' }}>\\n      <ChatbotCTA\\n        available={boolean('챗봇 사용 가능상태', false)}\\n        inventoryId={text(\\n          '표시할 배너의 인벤토리 ID',\\n          'app-install-cta-chatbot-v1',\\n        )}\\n        installUrl={text('설치 URL', 'https://triple.guide/magazine')}\\n        onShow={action('onShow')}\\n        onClick={action('onClick')}\\n        onDismiss={action('onDismiss')}\\n      />\\n    </div>\\n  )\\n}\\n\\nChatBotBanner.story = {\\n  name: '챗봇 스타일 배너',\\n}\\n\\nexport function FloatingButtonWithChatBot() {\\n  return (\\n    <div style={{ height: '600px', backgroundColor: '#fff' }}>\\n      <FloatingButtonCTA\\n        exitStrategy={select(\\n          '플로팅 배너 퇴장 방식',\\n          [BannerExitStrategy.NONE, BannerExitStrategy.CHATBOT_READY],\\n          BannerExitStrategy.CHATBOT_READY,\\n        )}\\n        appInstallLink={'https://triple.onelink.me/aZP6/21d43a81'}\\n        fixed={true}\\n        description=\\\"설명 텍스트가 들어갑니다.\\\"\\n        trackEvent={action('tracked')}\\n        trackEventParams={{\\n          onShow: 'onShow',\\n          onSelect: 'onSelect(click)',\\n          onClose: 'onClose(dismiss)',\\n        }}\\n        onShow={action('onShow')}\\n        onClick={action('onClick')}\\n        onDismiss={action('onDismiss')}\\n      />\\n      <ChatbotCTA\\n        available={boolean('챗봇 사용 가능상태', false)}\\n        inventoryId={text(\\n          '표시할 배너의 인벤토리 ID',\\n          'app-install-cta-chatbot-v1',\\n        )}\\n        installUrl={text('설치 URL', 'https://triple.guide/magazine')}\\n        onShow={action('onShow')}\\n        onClick={action('onClick')}\\n        onDismiss={action('onDismiss')}\\n      />\\n    </div>\\n  )\\n}\\n\\nFloatingButtonWithChatBot.story = {\\n  name: '챗봇 사용 가능시 플로팅 버튼 제거 예제',\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"app-installation-cta-appinstallationcta--floating-button\":{\"startLoc\":{\"col\":7,\"line\":17},\"endLoc\":{\"col\":1,\"line\":34},\"startBody\":{\"col\":7,\"line\":17},\"endBody\":{\"col\":1,\"line\":34}},\"app-installation-cta-appinstallationcta--base-image-banner\":{\"startLoc\":{\"col\":7,\"line\":40},\"endLoc\":{\"col\":1,\"line\":50},\"startBody\":{\"col\":7,\"line\":40},\"endBody\":{\"col\":1,\"line\":50}},\"app-installation-cta-appinstallationcta--base-text-banner\":{\"startLoc\":{\"col\":7,\"line\":56},\"endLoc\":{\"col\":1,\"line\":65},\"startBody\":{\"col\":7,\"line\":56},\"endBody\":{\"col\":1,\"line\":65}},\"app-installation-cta-appinstallationcta--base-banner-cta\":{\"startLoc\":{\"col\":7,\"line\":71},\"endLoc\":{\"col\":1,\"line\":88},\"startBody\":{\"col\":7,\"line\":71},\"endBody\":{\"col\":1,\"line\":88}},\"app-installation-cta-appinstallationcta--chat-bot-banner\":{\"startLoc\":{\"col\":7,\"line\":94},\"endLoc\":{\"col\":1,\"line\":110},\"startBody\":{\"col\":7,\"line\":94},\"endBody\":{\"col\":1,\"line\":110}},\"app-installation-cta-appinstallationcta--floating-button-with-chat-bot\":{\"startLoc\":{\"col\":7,\"line\":116},\"endLoc\":{\"col\":1,\"line\":151},\"startBody\":{\"col\":7,\"line\":116},\"endBody\":{\"col\":1,\"line\":151}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/app-installation-cta.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { action } from '@storybook/addon-actions'\nimport { text, boolean, select } from '@storybook/addon-knobs'\nimport {\n  ImageBanner,\n  TextBanner,\n  BannerCTA,\n  FloatingButtonCTA,\n  ChatbotCTA,\n  BannerExitStrategy,\n} from '@titicaca/app-installation-cta'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport { text, boolean, select } from '@storybook/addon-knobs'\\nimport {\\n  ImageBanner,\\n  TextBanner,\\n  BannerCTA,\\n  FloatingButtonCTA,\\n  ChatbotCTA,\\n  BannerExitStrategy,\\n} from '@titicaca/app-installation-cta'\\n\\nexport default {\\n  title: 'app-installation-cta | AppInstallationCTA',\\n}\\n\\nexport function FloatingButton() {\\n  return (\\n    <FloatingButtonCTA\\n      appInstallLink={'https://triple.onelink.me/aZP6/21d43a81'}\\n      fixed={boolean('화면 고정', true)}\\n      description={text('설명', '설명 텍스트가 들어갑니다.')}\\n      trackEvent={action('tracked')}\\n      trackEventParams={{\\n        onShow: 'onShow',\\n        onSelect: 'onSelect(click)',\\n        onClose: 'onClose(dismiss)',\\n      }}\\n      onShow={action('onShow')}\\n      onClick={action('onClick')}\\n      onDismiss={action('onDismiss')}\\n    />\\n  )\\n}\\n\\nFloatingButton.story = {\\n  name: '트리플 앱 설치하기 버튼',\\n}\\n\\nexport function BaseImageBanner() {\\n  return (\\n    <ImageBanner\\n      imgUrl={text('이미지 URL', '')}\\n      installUrl={text('설치 URL', 'https://triple-dev.titicaca-corp.com')}\\n      onShow={action('onShow')}\\n      onClick={action('onClick')}\\n      onDismiss={action('onDismiss')}\\n    />\\n  )\\n}\\n\\nBaseImageBanner.story = {\\n  name: '이미지 배너',\\n}\\n\\nexport function BaseTextBanner() {\\n  return (\\n    <TextBanner\\n      message={text('표시할 메시지', '앱 다운로드시 가이드북 무료')}\\n      installUrl={text('설치 URL', 'https://triple-dev.titicaca-corp.com')}\\n      onShow={action('onShow')}\\n      onClick={action('onClick')}\\n    />\\n  )\\n}\\n\\nBaseTextBanner.story = {\\n  name: '텍스트 배너',\\n}\\n\\nexport function BaseBannerCTA() {\\n  return (\\n    <div>\\n      <BannerCTA\\n        inventoryId={text(\\n          '표시할 배너의 인벤토리 ID',\\n          'app-install-cta-poi-v1',\\n        )}\\n        installUrl={text('설치 URL', 'https://triple-dev.titicaca-corp.com')}\\n        onShow={action('onShow')}\\n        onClick={action('onClick')}\\n        onDismiss={action('onDismiss')}\\n      />\\n\\n      <div style={{ height: '2000px' }} />\\n    </div>\\n  )\\n}\\n\\nBaseBannerCTA.story = {\\n  name: '배너 CTA',\\n}\\n\\nexport function ChatBotBanner() {\\n  return (\\n    <div style={{ height: '600px', backgroundColor: '#fff' }}>\\n      <ChatbotCTA\\n        available={boolean('챗봇 사용 가능상태', false)}\\n        inventoryId={text(\\n          '표시할 배너의 인벤토리 ID',\\n          'app-install-cta-chatbot-v1',\\n        )}\\n        installUrl={text('설치 URL', 'https://triple.guide/magazine')}\\n        onShow={action('onShow')}\\n        onClick={action('onClick')}\\n        onDismiss={action('onDismiss')}\\n      />\\n    </div>\\n  )\\n}\\n\\nChatBotBanner.story = {\\n  name: '챗봇 스타일 배너',\\n}\\n\\nexport function FloatingButtonWithChatBot() {\\n  return (\\n    <div style={{ height: '600px', backgroundColor: '#fff' }}>\\n      <FloatingButtonCTA\\n        exitStrategy={select(\\n          '플로팅 배너 퇴장 방식',\\n          [BannerExitStrategy.NONE, BannerExitStrategy.CHATBOT_READY],\\n          BannerExitStrategy.CHATBOT_READY,\\n        )}\\n        appInstallLink={'https://triple.onelink.me/aZP6/21d43a81'}\\n        fixed={true}\\n        description=\\\"설명 텍스트가 들어갑니다.\\\"\\n        trackEvent={action('tracked')}\\n        trackEventParams={{\\n          onShow: 'onShow',\\n          onSelect: 'onSelect(click)',\\n          onClose: 'onClose(dismiss)',\\n        }}\\n        onShow={action('onShow')}\\n        onClick={action('onClick')}\\n        onDismiss={action('onDismiss')}\\n      />\\n      <ChatbotCTA\\n        available={boolean('챗봇 사용 가능상태', false)}\\n        inventoryId={text(\\n          '표시할 배너의 인벤토리 ID',\\n          'app-install-cta-chatbot-v1',\\n        )}\\n        installUrl={text('설치 URL', 'https://triple.guide/magazine')}\\n        onShow={action('onShow')}\\n        onClick={action('onClick')}\\n        onDismiss={action('onDismiss')}\\n      />\\n    </div>\\n  )\\n}\\n\\nFloatingButtonWithChatBot.story = {\\n  name: '챗봇 사용 가능시 플로팅 버튼 제거 예제',\\n}\\n\",\"locationsMap\":{\"app-installation-cta-appinstallationcta--floating-button\":{\"startLoc\":{\"col\":7,\"line\":17},\"endLoc\":{\"col\":1,\"line\":34},\"startBody\":{\"col\":7,\"line\":17},\"endBody\":{\"col\":1,\"line\":34}},\"app-installation-cta-appinstallationcta--base-image-banner\":{\"startLoc\":{\"col\":7,\"line\":40},\"endLoc\":{\"col\":1,\"line\":50},\"startBody\":{\"col\":7,\"line\":40},\"endBody\":{\"col\":1,\"line\":50}},\"app-installation-cta-appinstallationcta--base-text-banner\":{\"startLoc\":{\"col\":7,\"line\":56},\"endLoc\":{\"col\":1,\"line\":65},\"startBody\":{\"col\":7,\"line\":56},\"endBody\":{\"col\":1,\"line\":65}},\"app-installation-cta-appinstallationcta--base-banner-cta\":{\"startLoc\":{\"col\":7,\"line\":71},\"endLoc\":{\"col\":1,\"line\":88},\"startBody\":{\"col\":7,\"line\":71},\"endBody\":{\"col\":1,\"line\":88}},\"app-installation-cta-appinstallationcta--chat-bot-banner\":{\"startLoc\":{\"col\":7,\"line\":94},\"endLoc\":{\"col\":1,\"line\":110},\"startBody\":{\"col\":7,\"line\":94},\"endBody\":{\"col\":1,\"line\":110}},\"app-installation-cta-appinstallationcta--floating-button-with-chat-bot\":{\"startLoc\":{\"col\":7,\"line\":116},\"endLoc\":{\"col\":1,\"line\":151},\"startBody\":{\"col\":7,\"line\":116},\"endBody\":{\"col\":1,\"line\":151}}}},},\n  title: 'app-installation-cta | AppInstallationCTA',\n}\n\nexport const FloatingButton = addSourceDecorator(function FloatingButton() {\n  return (\n    <FloatingButtonCTA\n      appInstallLink={'https://triple.onelink.me/aZP6/21d43a81'}\n      fixed={boolean('화면 고정', true)}\n      description={text('설명', '설명 텍스트가 들어갑니다.')}\n      trackEvent={action('tracked')}\n      trackEventParams={{\n        onShow: 'onShow',\n        onSelect: 'onSelect(click)',\n        onClose: 'onClose(dismiss)',\n      }}\n      onShow={action('onShow')}\n      onClick={action('onClick')}\n      onDismiss={action('onDismiss')}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nFloatingButton.story = {\n  name: '트리플 앱 설치하기 버튼',\n}\n\nexport const BaseImageBanner = addSourceDecorator(function BaseImageBanner() {\n  return (\n    <ImageBanner\n      imgUrl={text('이미지 URL', '')}\n      installUrl={text('설치 URL', 'https://triple-dev.titicaca-corp.com')}\n      onShow={action('onShow')}\n      onClick={action('onClick')}\n      onDismiss={action('onDismiss')}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nBaseImageBanner.story = {\n  name: '이미지 배너',\n}\n\nexport const BaseTextBanner = addSourceDecorator(function BaseTextBanner() {\n  return (\n    <TextBanner\n      message={text('표시할 메시지', '앱 다운로드시 가이드북 무료')}\n      installUrl={text('설치 URL', 'https://triple-dev.titicaca-corp.com')}\n      onShow={action('onShow')}\n      onClick={action('onClick')}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nBaseTextBanner.story = {\n  name: '텍스트 배너',\n}\n\nexport const BaseBannerCTA = addSourceDecorator(function BaseBannerCTA() {\n  return (\n    <div>\n      <BannerCTA\n        inventoryId={text(\n          '표시할 배너의 인벤토리 ID',\n          'app-install-cta-poi-v1',\n        )}\n        installUrl={text('설치 URL', 'https://triple-dev.titicaca-corp.com')}\n        onShow={action('onShow')}\n        onClick={action('onClick')}\n        onDismiss={action('onDismiss')}\n      />\n\n      <div style={{ height: '2000px' }} />\n    </div>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nBaseBannerCTA.story = {\n  name: '배너 CTA',\n}\n\nexport const ChatBotBanner = addSourceDecorator(function ChatBotBanner() {\n  return (\n    <div style={{ height: '600px', backgroundColor: '#fff' }}>\n      <ChatbotCTA\n        available={boolean('챗봇 사용 가능상태', false)}\n        inventoryId={text(\n          '표시할 배너의 인벤토리 ID',\n          'app-install-cta-chatbot-v1',\n        )}\n        installUrl={text('설치 URL', 'https://triple.guide/magazine')}\n        onShow={action('onShow')}\n        onClick={action('onClick')}\n        onDismiss={action('onDismiss')}\n      />\n    </div>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nChatBotBanner.story = {\n  name: '챗봇 스타일 배너',\n}\n\nexport const FloatingButtonWithChatBot = addSourceDecorator(function FloatingButtonWithChatBot() {\n  return (\n    <div style={{ height: '600px', backgroundColor: '#fff' }}>\n      <FloatingButtonCTA\n        exitStrategy={select(\n          '플로팅 배너 퇴장 방식',\n          [BannerExitStrategy.NONE, BannerExitStrategy.CHATBOT_READY],\n          BannerExitStrategy.CHATBOT_READY,\n        )}\n        appInstallLink={'https://triple.onelink.me/aZP6/21d43a81'}\n        fixed={true}\n        description=\"설명 텍스트가 들어갑니다.\"\n        trackEvent={action('tracked')}\n        trackEventParams={{\n          onShow: 'onShow',\n          onSelect: 'onSelect(click)',\n          onClose: 'onClose(dismiss)',\n        }}\n        onShow={action('onShow')}\n        onClick={action('onClick')}\n        onDismiss={action('onDismiss')}\n      />\n      <ChatbotCTA\n        available={boolean('챗봇 사용 가능상태', false)}\n        inventoryId={text(\n          '표시할 배너의 인벤토리 ID',\n          'app-install-cta-chatbot-v1',\n        )}\n        installUrl={text('설치 URL', 'https://triple.guide/magazine')}\n        onShow={action('onShow')}\n        onClick={action('onClick')}\n        onDismiss={action('onDismiss')}\n      />\n    </div>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nFloatingButtonWithChatBot.story = {\n  name: '챗봇 사용 가능시 플로팅 버튼 제거 예제',\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/author\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { text } from '@storybook/addon-knobs'\\nimport Author from '@titicaca/author'\\n\\nexport default {\\n  title: 'author | Author',\\n}\\n\\nexport function BaseAuthor() {\\n  return (\\n    <Author\\n      source={{\\n        name: text('이름', '에디터가있을때'),\\n        bio: text(\\n          '소개',\\n          '여행이 좋아 디지털 노마드로 전세계를 떠돌며\\\\n일을하고 있습니다. budim@gmail.com',\\n        ),\\n        image: {\\n          id: '568dea0a-c04a-403a-84c8-ae5171878c6a',\\n          sizes: {\\n            full: {\\n              url:\\n                'https://res.cloudinary.com/triple-dev/image/upload/w_2048,h_2048,c_limit,f_auto/568dea0a-c04a-403a-84c8-ae5171878c6a.jpg',\\n            },\\n            large: {\\n              url:\\n                'https://res.cloudinary.com/triple-dev/image/upload/w_1024,h_1024,c_limit,f_auto/568dea0a-c04a-403a-84c8-ae5171878c6a.jpg',\\n            },\\n            \\n            small_square: {\\n              url:\\n                'https://res.cloudinary.com/triple-dev/image/upload/w_256,h_256,c_fill,f_auto/568dea0a-c04a-403a-84c8-ae5171878c6a.jpg',\\n            },\\n          },\\n          width: 640,\\n          height: 427,\\n        },\\n        intro: {\\n          rawHTML:\\n            '<p>자주 여행을 꿈꾸고, 이따금씩 순간을 톺아보려 합니다.<br><a href=\\\"https://www.naver.com\\\">www.instagram.com/romi1403</a></p>',\\n        },\\n      }}\\n      bioOverride={text('소개 덮어쓰기', '')}\\n    />\\n  )\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"author-author--base-author\":{\"startLoc\":{\"col\":7,\"line\":9},\"endLoc\":{\"col\":1,\"line\":46},\"startBody\":{\"col\":7,\"line\":9},\"endBody\":{\"col\":1,\"line\":46}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/author.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { text } from '@storybook/addon-knobs'\nimport Author from '@titicaca/author'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport { text } from '@storybook/addon-knobs'\\nimport Author from '@titicaca/author'\\n\\nexport default {\\n  title: 'author | Author',\\n}\\n\\nexport function BaseAuthor() {\\n  return (\\n    <Author\\n      source={{\\n        name: text('이름', '에디터가있을때'),\\n        bio: text(\\n          '소개',\\n          '여행이 좋아 디지털 노마드로 전세계를 떠돌며\\\\n일을하고 있습니다. budim@gmail.com',\\n        ),\\n        image: {\\n          id: '568dea0a-c04a-403a-84c8-ae5171878c6a',\\n          sizes: {\\n            full: {\\n              url:\\n                'https://res.cloudinary.com/triple-dev/image/upload/w_2048,h_2048,c_limit,f_auto/568dea0a-c04a-403a-84c8-ae5171878c6a.jpg',\\n            },\\n            large: {\\n              url:\\n                'https://res.cloudinary.com/triple-dev/image/upload/w_1024,h_1024,c_limit,f_auto/568dea0a-c04a-403a-84c8-ae5171878c6a.jpg',\\n            },\\n            \\n            small_square: {\\n              url:\\n                'https://res.cloudinary.com/triple-dev/image/upload/w_256,h_256,c_fill,f_auto/568dea0a-c04a-403a-84c8-ae5171878c6a.jpg',\\n            },\\n          },\\n          width: 640,\\n          height: 427,\\n        },\\n        intro: {\\n          rawHTML:\\n            '<p>자주 여행을 꿈꾸고, 이따금씩 순간을 톺아보려 합니다.<br><a href=\\\"https://www.naver.com\\\">www.instagram.com/romi1403</a></p>',\\n        },\\n      }}\\n      bioOverride={text('소개 덮어쓰기', '')}\\n    />\\n  )\\n}\\n\",\"locationsMap\":{\"author-author--base-author\":{\"startLoc\":{\"col\":7,\"line\":9},\"endLoc\":{\"col\":1,\"line\":46},\"startBody\":{\"col\":7,\"line\":9},\"endBody\":{\"col\":1,\"line\":46}}}},},\n  title: 'author | Author',\n}\n\nexport const BaseAuthor = addSourceDecorator(function BaseAuthor() {\n  return (\n    <Author\n      source={{\n        name: text('이름', '에디터가있을때'),\n        bio: text(\n          '소개',\n          '여행이 좋아 디지털 노마드로 전세계를 떠돌며\\n일을하고 있습니다. budim@gmail.com',\n        ),\n        image: {\n          id: '568dea0a-c04a-403a-84c8-ae5171878c6a',\n          sizes: {\n            full: {\n              url:\n                'https://res.cloudinary.com/triple-dev/image/upload/w_2048,h_2048,c_limit,f_auto/568dea0a-c04a-403a-84c8-ae5171878c6a.jpg',\n            },\n            large: {\n              url:\n                'https://res.cloudinary.com/triple-dev/image/upload/w_1024,h_1024,c_limit,f_auto/568dea0a-c04a-403a-84c8-ae5171878c6a.jpg',\n            },\n            /* eslint-disable @typescript-eslint/camelcase */\n            small_square: {\n              url:\n                'https://res.cloudinary.com/triple-dev/image/upload/w_256,h_256,c_fill,f_auto/568dea0a-c04a-403a-84c8-ae5171878c6a.jpg',\n            },\n          },\n          width: 640,\n          height: 427,\n        },\n        intro: {\n          rawHTML:\n            '<p>자주 여행을 꿈꾸고, 이따금씩 순간을 톺아보려 합니다.<br><a href=\"https://www.naver.com\">www.instagram.com/romi1403</a></p>',\n        },\n      }}\n      bioOverride={text('소개 덮어쓰기', '')}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs/blocks\";\n\nimport { Meta, Story, Preview } from '@storybook/addon-docs/blocks'\nimport { boolean, withKnobs } from '@storybook/addon-knobs'\nimport BookingCompletion from '@titicaca/booking-completion'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"booking-completion | Booking Complete\" decorators={[withKnobs]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"booking-complete\"\n    }}>{`Booking Complete`}</h1>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Default\" mdxType=\"Story\">\n    <BookingCompletion title={'발권이\\n완료되었습니다.'} onMoveToBookingDetail={boolean('내 예약 상세 액션', true) ? () => {} : null} descriptions={['공급사 확인 후 예약이 확정됩니다.', '예약이 확정되면 이메일로 바우처가 발송됩니다.']} region={{\n          id: '',\n          names: {\n            ko: '바르셀로나',\n            en: 'Barcelona'\n          }\n        }} mdxType=\"BookingCompletion\" />\n  </Story>\n    </Preview>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const defaultStory = () => (\n        <BookingCompletion title={'발권이\\n완료되었습니다.'} onMoveToBookingDetail={boolean('내 예약 상세 액션', true) ? () => {} : null} descriptions={['공급사 확인 후 예약이 확정됩니다.', '예약이 확정되면 이메일로 바우처가 발송됩니다.']} region={{\n  id: '',\n  names: {\n    ko: '바르셀로나',\n    en: 'Barcelona'\n  }\n}} />\n      );\ndefaultStory.story = {};\ndefaultStory.story.name = 'Default';\ndefaultStory.story.parameters = { mdxSource: '<BookingCompletion title={\\'발권이\\\\n완료되었습니다.\\'} onMoveToBookingDetail={boolean(\\'내 예약 상세 액션\\', true) ? () => {} : null} descriptions={[\\'공급사 확인 후 예약이 확정됩니다.\\', \\'예약이 확정되면 이메일로 바우처가 발송됩니다.\\']} region={{\\n  id: \\'\\',\\n  names: {\\n    ko: \\'바르셀로나\\',\\n    en: \\'Barcelona\\'\\n  }\\n}} />' };\n\nconst componentMeta = { title: 'booking-completion | Booking Complete', decorators: [withKnobs], includeStories: [\"defaultStory\"],  };\n\nconst mdxStoryNameToKey = {\"Default\":\"defaultStory\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentMeta={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { getColor } from '@titicaca/color-palette'\nimport { Container, Text } from '@titicaca/core-elements'\n\nconst ColorFrame = styled.div`\n  position: relative;\n  width: 100%;\n  height: 40px;\n  background: rgba(${({ color }) => getColor(color)});\n  margin-bottom: 2px;\n`\n\nconst ColorLabel = styled(Text)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: rgba(${({ labelColor }) => getColor(labelColor || 'white')});\n`\n\nexport const FlexBox = styled(Container)`\n  display: flex;\n  flex: ${({ flex }) => flex || 0};\n  flex-flow: ${({ flexFlow }) => flexFlow || 'row'};\n\n  ${({ space }) =>\n    space &&\n    css`\n      padding-right: 10px;\n    `}\n`\n\nexport function ColorBox({ color, labelColor }) {\n  return (\n    <ColorFrame color={color}>\n      <ColorLabel labelColor={labelColor}>{color}</ColorLabel>\n    </ColorFrame>\n  )\n}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs/blocks\";\n\nimport { Meta } from '@storybook/addon-docs/blocks'\nimport { ColorBox, FlexBox } from './color-box'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"color-palette | Color Palette\" mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"color\"\n    }}>{`Color`}</h1>\n    <br />\n    <h2 {...{\n      \"id\": \"base-color\"\n    }}>{`Base Color`}</h2>\n    <FlexBox mdxType=\"FlexBox\">\n  <FlexBox flex={1} flexFlow=\"column\" space mdxType=\"FlexBox\">\n    <ColorBox color=\"white\" labelColor=\"gray600\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"gray20\" labelColor=\"gray600\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"gray50\" labelColor=\"gray600\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"gray100\" labelColor=\"gray600\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"gray200\" labelColor=\"gray600\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"gray300\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"gray400\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"gray500\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"gray600\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"gray700\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"gray800\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"gray900\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"gray\" mdxType=\"ColorBox\" />\n  </FlexBox>\n  <FlexBox flex={1} flexFlow=\"column\" space mdxType=\"FlexBox\">\n    <ColorBox color=\"blue\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"blue60\" labelColor=\"gray600\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"blue100\" labelColor=\"gray600\" mdxType=\"ColorBox\" />\n  </FlexBox>\n  <FlexBox flex={1} flexFlow=\"column\" space mdxType=\"FlexBox\">\n    <ColorBox color=\"mint\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"mint100\" labelColor=\"gray600\" mdxType=\"ColorBox\" />\n  </FlexBox>\n    </FlexBox>\n    <h2 {...{\n      \"id\": \"sub-color\"\n    }}>{`Sub Color`}</h2>\n    <FlexBox mdxType=\"FlexBox\">\n  <FlexBox flex={1} flexFlow=\"column\" space mdxType=\"FlexBox\">\n    <ColorBox color=\"orange\" mdxType=\"ColorBox\" />\n  </FlexBox>\n  <FlexBox flex={1} flexFlow=\"column\" space mdxType=\"FlexBox\">\n    <ColorBox color=\"red\" mdxType=\"ColorBox\" />\n  </FlexBox>\n  <FlexBox flex={1} flexFlow=\"column\" space mdxType=\"FlexBox\">\n    <ColorBox color=\"deepOrange\" mdxType=\"ColorBox\" />\n  </FlexBox>\n  <FlexBox flex={1} flexFlow=\"column\" space mdxType=\"FlexBox\">\n    <ColorBox color=\"mediumRed\" mdxType=\"ColorBox\" />\n  </FlexBox>\n  <FlexBox flex={1} flexFlow=\"column\" space mdxType=\"FlexBox\">\n    <ColorBox color=\"deepRed\" mdxType=\"ColorBox\" />\n  </FlexBox>\n  <FlexBox flex={1} flexFlow=\"column\" space mdxType=\"FlexBox\">\n    <ColorBox color=\"purple\" mdxType=\"ColorBox\" />\n  </FlexBox>\n  <FlexBox flex={1} flexFlow=\"column\" space mdxType=\"FlexBox\">\n    <ColorBox color=\"emerald\" mdxType=\"ColorBox\" />\n  </FlexBox>\n    </FlexBox>\n    <h2 {...{\n      \"id\": \"service-specific\"\n    }}>{`Service Specific`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`2020.04.17 체크리스트 color sets`}</li>\n    </ul>\n    <FlexBox mdxType=\"FlexBox\">\n  <FlexBox flex={1} flexFlow=\"column\" space mdxType=\"FlexBox\">\n    <ColorBox color=\"azul500\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"azul\" mdxType=\"ColorBox\" />\n  </FlexBox>\n  <FlexBox flex={1} flexFlow=\"column\" space mdxType=\"FlexBox\">\n    <ColorBox color=\"teal100\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"teal900\" mdxType=\"ColorBox\" />\n    <ColorBox color=\"teal\" mdxType=\"ColorBox\" />\n  </FlexBox>\n    </FlexBox>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.story = { parameters: { docsOnly: true } };\n\nconst componentMeta = { title: 'color-palette | Color Palette', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentMeta={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/content-sharing\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport ContentSharing from '@titicaca/content-sharing'\\n\\nexport default {\\n  title: 'content-sharing | ContentSharing',\\n}\\n\\nexport function BaseContentSharing() {\\n  return (\\n    <ContentSharing\\n      label=\\\"친구들과 여행 정보를 공유하세요\\\"\\n      onShareClick={action('onShareClick')}\\n    />\\n  )\\n}\\n\\nBaseContentSharing.story = {\\n  name: '기본 컨텐츠 공유',\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"content-sharing-contentsharing--base-content-sharing\":{\"startLoc\":{\"col\":7,\"line\":9},\"endLoc\":{\"col\":1,\"line\":16},\"startBody\":{\"col\":7,\"line\":9},\"endBody\":{\"col\":1,\"line\":16}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/content-sharing.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { action } from '@storybook/addon-actions'\nimport ContentSharing from '@titicaca/content-sharing'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport ContentSharing from '@titicaca/content-sharing'\\n\\nexport default {\\n  title: 'content-sharing | ContentSharing',\\n}\\n\\nexport function BaseContentSharing() {\\n  return (\\n    <ContentSharing\\n      label=\\\"친구들과 여행 정보를 공유하세요\\\"\\n      onShareClick={action('onShareClick')}\\n    />\\n  )\\n}\\n\\nBaseContentSharing.story = {\\n  name: '기본 컨텐츠 공유',\\n}\\n\",\"locationsMap\":{\"content-sharing-contentsharing--base-content-sharing\":{\"startLoc\":{\"col\":7,\"line\":9},\"endLoc\":{\"col\":1,\"line\":16},\"startBody\":{\"col\":7,\"line\":9},\"endBody\":{\"col\":1,\"line\":16}}}},},\n  title: 'content-sharing | ContentSharing',\n}\n\nexport const BaseContentSharing = addSourceDecorator(function BaseContentSharing() {\n  return (\n    <ContentSharing\n      label=\"친구들과 여행 정보를 공유하세요\"\n      onShareClick={action('onShareClick')}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nBaseContentSharing.story = {\n  name: '기본 컨텐츠 공유',\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/core-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { text, boolean } from '@storybook/addon-knobs'\\nimport { Text, Accordion } from '@titicaca/core-elements'\\n\\nstoriesOf('Core-Elements | Accordion', module).add('영업시간', () => (\\n  <Accordion>\\n    <Accordion.Title active={boolean('펼침', false)}>\\n      <Text bold>{text('제목', '이용가능시간, 휴무일')}</Text>\\n    </Accordion.Title>\\n    <Accordion.Folded active={boolean('펼침', false)}>\\n      <Text bold color=\\\"blue\\\">\\n        오늘 09:00 - 18:00\\n      </Text>\\n    </Accordion.Folded>\\n    <Accordion.Content active={boolean('펼침', false)}>\\n      <Text>\\n        월<br />화<br />수<br />목<br />금<br />토<br />일\\n      </Text>\\n    </Accordion.Content>\\n  </Accordion>\\n))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"core-elements-accordion--영업시간\":{\"startLoc\":{\"col\":51,\"line\":6},\"endLoc\":{\"col\":1,\"line\":22},\"startBody\":{\"col\":59,\"line\":6},\"endBody\":{\"col\":1,\"line\":22}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/accordion.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { text, boolean } from '@storybook/addon-knobs'\nimport { Text, Accordion } from '@titicaca/core-elements'\n\nstoriesOf('Core-Elements | Accordion', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).add('영업시간', () => (\n  <Accordion>\n    <Accordion.Title active={boolean('펼침', false)}>\n      <Text bold>{text('제목', '이용가능시간, 휴무일')}</Text>\n    </Accordion.Title>\n    <Accordion.Folded active={boolean('펼침', false)}>\n      <Text bold color=\"blue\">\n        오늘 09:00 - 18:00\n      </Text>\n    </Accordion.Folded>\n    <Accordion.Content active={boolean('펼침', false)}>\n      <Text>\n        월<br />화<br />수<br />목<br />금<br />토<br />일\n      </Text>\n    </Accordion.Content>\n  </Accordion>\n))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/core-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { action } from '@storybook/addon-actions'\\nimport { text, number, select, boolean } from '@storybook/addon-knobs'\\nimport { Button } from '@titicaca/core-elements'\\n\\nstoriesOf('Core-Elements | Button', module)\\n  .add('일반', () => (\\n    <Button\\n      as={select('as prop', ['a', 'button'], 'a')}\\n      size={select('버튼 크기', ['tiny', 'small'], 'tiny')}\\n      lineHeight={select(\\n        '버튼 높이',\\n        ['15px', '16px', '17px', '18px', '19px', '1', '2', '3'],\\n        '16',\\n      )}\\n      onClick={action('clicked')}\\n    >\\n      {text('버튼 레이블', '안녕')}\\n    </Button>\\n  ))\\n  .add('컴팩트', () => (\\n    <Button\\n      compact\\n      size={select('버튼 크기', ['tiny'], 'tiny')}\\n      onClick={action('clicked')}\\n    >\\n      {text('버튼 레이블', '안녕')}\\n    </Button>\\n  ))\\n  .add('일반 (채움형)', () => (\\n    <Button\\n      fluid\\n      size={select('버튼 크기', ['tiny', 'small'], 'tiny')}\\n      onClick={action('clicked')}\\n    >\\n      {text('버튼 레이블', '안녕')}\\n    </Button>\\n  ))\\n  .add('컴팩트 (아이콘)', () => (\\n    <Button\\n      compact\\n      bold\\n      size={select('버튼 크기', ['tiny', 'small', 'large'], 'tiny')}\\n      onClick={action('clicked')}\\n      color={select('버튼 색', ['gray', 'blue'], 'blue')}\\n    >\\n      <Button.Icon\\n        src=\\\"https://assets.triple-dev.titicaca-corp.com/images/save@4x.png\\\"\\n        size={select('아이콘 크기', ['tiny', 'small'], 'small')}\\n      />\\n      {text('버튼 레이블', '저장하기')}\\n    </Button>\\n  ))\\n  .add('베이직', () => (\\n    <Button\\n      basic\\n      fluid={boolean('채움', false)}\\n      compact={boolean('콤팩트', false)}\\n      inverted={boolean('색반전', false)}\\n      onClick={action('clicked')}\\n    >\\n      {text('버튼 레이블', '안녕')}\\n    </Button>\\n  ))\\n  .add('베이직 (아이콘)', () => (\\n    <Button basic fluid compact onClick={action('clicked')}>\\n      <Button.Icon src=\\\"https://triple-dev.titicaca-corp.com/content/static/images/index@4x.png\\\" />\\n      {text('버튼 레이블', '목차')}\\n    </Button>\\n  ))\\n  .add('블록형 아이콘', () => (\\n    <Button\\n      icon={select(\\n        '아이콘 종류',\\n        [\\n          'saveEmpty',\\n          'saveFilled',\\n          'starEmpty',\\n          'starFilled',\\n          'map',\\n          'share',\\n          'schedule',\\n        ],\\n        'saveEmpty',\\n      )}\\n    >\\n      {text('버튼 레이블', '저장하기')}\\n    </Button>\\n  ))\\n  .add('버튼 그룹', () => {\\n    const buttonTag = select('as prop', ['a', 'button'], 'a')\\n\\n    return (\\n      <Button.Group\\n        horizontalGap={number('버튼 간격', 10)}\\n        buttonCount={number('button 개수', 2)}\\n      >\\n        <Button as={buttonTag} basic color=\\\"gray\\\" size=\\\"small\\\">\\n          현지에서 길묻기\\n        </Button>\\n        <Button as={buttonTag} basic inverted color=\\\"blue\\\" size=\\\"small\\\">\\n          길찾기\\n        </Button>\\n      </Button.Group>\\n    )\\n  })\\n  .add('버튼 컨테이너', () => {\\n    const buttonTag = select('as prop', ['a', 'button'], 'a')\\n\\n    return (\\n      <Button.Container\\n        floated={select('floated', ['left', 'right', 'none'], 'none')}\\n      >\\n        <Button as={buttonTag} basic color=\\\"gray\\\" size=\\\"small\\\">\\n          버튼 1\\n        </Button>\\n        <Button as={buttonTag} basic inverted color=\\\"blue\\\" size=\\\"small\\\">\\n          버튼 2\\n        </Button>\\n      </Button.Container>\\n    )\\n  })\\n  .add('아이콘 버튼 그룹', () => (\\n    <Button.Group horizontalGap={number('버튼 간격', 22)}>\\n      <Button icon=\\\"saveEmpty\\\">저장하기</Button>\\n      <Button icon=\\\"schedule\\\">일정추가</Button>\\n      <Button icon=\\\"starEmpty\\\">리뷰쓰기</Button>\\n      <Button icon=\\\"share\\\">공유하기</Button>\\n    </Button.Group>\\n  ))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"core-elements-button--아이콘-버튼-그룹\":{\"startLoc\":{\"col\":7,\"line\":124},\"endLoc\":{\"col\":3,\"line\":131},\"startBody\":{\"col\":20,\"line\":124},\"endBody\":{\"col\":3,\"line\":131}},\"core-elements-button--버튼-컨테이너\":{\"startLoc\":{\"col\":7,\"line\":108},\"endLoc\":{\"col\":3,\"line\":123},\"startBody\":{\"col\":18,\"line\":108},\"endBody\":{\"col\":3,\"line\":123}},\"core-elements-button--버튼-그룹\":{\"startLoc\":{\"col\":7,\"line\":91},\"endLoc\":{\"col\":3,\"line\":107},\"startBody\":{\"col\":16,\"line\":91},\"endBody\":{\"col\":3,\"line\":107}},\"core-elements-button--블록형-아이콘\":{\"startLoc\":{\"col\":7,\"line\":72},\"endLoc\":{\"col\":3,\"line\":90},\"startBody\":{\"col\":18,\"line\":72},\"endBody\":{\"col\":3,\"line\":90}},\"core-elements-button--베이직-아이콘\":{\"startLoc\":{\"col\":7,\"line\":66},\"endLoc\":{\"col\":3,\"line\":71},\"startBody\":{\"col\":20,\"line\":66},\"endBody\":{\"col\":3,\"line\":71}},\"core-elements-button--베이직\":{\"startLoc\":{\"col\":7,\"line\":55},\"endLoc\":{\"col\":3,\"line\":65},\"startBody\":{\"col\":14,\"line\":55},\"endBody\":{\"col\":3,\"line\":65}},\"core-elements-button--컴팩트-아이콘\":{\"startLoc\":{\"col\":7,\"line\":40},\"endLoc\":{\"col\":3,\"line\":54},\"startBody\":{\"col\":20,\"line\":40},\"endBody\":{\"col\":3,\"line\":54}},\"core-elements-button--일반-채움형\":{\"startLoc\":{\"col\":7,\"line\":31},\"endLoc\":{\"col\":3,\"line\":39},\"startBody\":{\"col\":19,\"line\":31},\"endBody\":{\"col\":3,\"line\":39}},\"core-elements-button--컴팩트\":{\"startLoc\":{\"col\":7,\"line\":22},\"endLoc\":{\"col\":3,\"line\":30},\"startBody\":{\"col\":14,\"line\":22},\"endBody\":{\"col\":3,\"line\":30}},\"core-elements-button--일반\":{\"startLoc\":{\"col\":7,\"line\":8},\"endLoc\":{\"col\":3,\"line\":21},\"startBody\":{\"col\":13,\"line\":8},\"endBody\":{\"col\":3,\"line\":21}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/button.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\nimport { text, number, select, boolean } from '@storybook/addon-knobs'\nimport { Button } from '@titicaca/core-elements'\n\nstoriesOf('Core-Elements | Button', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('일반', () => (\n    <Button\n      as={select('as prop', ['a', 'button'], 'a')}\n      size={select('버튼 크기', ['tiny', 'small'], 'tiny')}\n      lineHeight={select(\n        '버튼 높이',\n        ['15px', '16px', '17px', '18px', '19px', '1', '2', '3'],\n        '16',\n      )}\n      onClick={action('clicked')}\n    >\n      {text('버튼 레이블', '안녕')}\n    </Button>\n  ))\n  .add('컴팩트', () => (\n    <Button\n      compact\n      size={select('버튼 크기', ['tiny'], 'tiny')}\n      onClick={action('clicked')}\n    >\n      {text('버튼 레이블', '안녕')}\n    </Button>\n  ))\n  .add('일반 (채움형)', () => (\n    <Button\n      fluid\n      size={select('버튼 크기', ['tiny', 'small'], 'tiny')}\n      onClick={action('clicked')}\n    >\n      {text('버튼 레이블', '안녕')}\n    </Button>\n  ))\n  .add('컴팩트 (아이콘)', () => (\n    <Button\n      compact\n      bold\n      size={select('버튼 크기', ['tiny', 'small', 'large'], 'tiny')}\n      onClick={action('clicked')}\n      color={select('버튼 색', ['gray', 'blue'], 'blue')}\n    >\n      <Button.Icon\n        src=\"https://assets.triple-dev.titicaca-corp.com/images/save@4x.png\"\n        size={select('아이콘 크기', ['tiny', 'small'], 'small')}\n      />\n      {text('버튼 레이블', '저장하기')}\n    </Button>\n  ))\n  .add('베이직', () => (\n    <Button\n      basic\n      fluid={boolean('채움', false)}\n      compact={boolean('콤팩트', false)}\n      inverted={boolean('색반전', false)}\n      onClick={action('clicked')}\n    >\n      {text('버튼 레이블', '안녕')}\n    </Button>\n  ))\n  .add('베이직 (아이콘)', () => (\n    <Button basic fluid compact onClick={action('clicked')}>\n      <Button.Icon src=\"https://triple-dev.titicaca-corp.com/content/static/images/index@4x.png\" />\n      {text('버튼 레이블', '목차')}\n    </Button>\n  ))\n  .add('블록형 아이콘', () => (\n    <Button\n      icon={select(\n        '아이콘 종류',\n        [\n          'saveEmpty',\n          'saveFilled',\n          'starEmpty',\n          'starFilled',\n          'map',\n          'share',\n          'schedule',\n        ],\n        'saveEmpty',\n      )}\n    >\n      {text('버튼 레이블', '저장하기')}\n    </Button>\n  ))\n  .add('버튼 그룹', () => {\n    const buttonTag = select('as prop', ['a', 'button'], 'a')\n\n    return (\n      <Button.Group\n        horizontalGap={number('버튼 간격', 10)}\n        buttonCount={number('button 개수', 2)}\n      >\n        <Button as={buttonTag} basic color=\"gray\" size=\"small\">\n          현지에서 길묻기\n        </Button>\n        <Button as={buttonTag} basic inverted color=\"blue\" size=\"small\">\n          길찾기\n        </Button>\n      </Button.Group>\n    )\n  })\n  .add('버튼 컨테이너', () => {\n    const buttonTag = select('as prop', ['a', 'button'], 'a')\n\n    return (\n      <Button.Container\n        floated={select('floated', ['left', 'right', 'none'], 'none')}\n      >\n        <Button as={buttonTag} basic color=\"gray\" size=\"small\">\n          버튼 1\n        </Button>\n        <Button as={buttonTag} basic inverted color=\"blue\" size=\"small\">\n          버튼 2\n        </Button>\n      </Button.Container>\n    )\n  })\n  .add('아이콘 버튼 그룹', () => (\n    <Button.Group horizontalGap={number('버튼 간격', 22)}>\n      <Button icon=\"saveEmpty\">저장하기</Button>\n      <Button icon=\"schedule\">일정추가</Button>\n      <Button icon=\"starEmpty\">리뷰쓰기</Button>\n      <Button icon=\"share\">공유하기</Button>\n    </Button.Group>\n  ))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/core-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { boolean } from '@storybook/addon-knobs'\\nimport { Button, Container, Drawer, Text } from '@titicaca/core-elements'\\n\\nstoriesOf('Core-Elements | Drawer', module)\\n  .add('버튼', () => (\\n    <Drawer active={boolean('활성', true)}>\\n      <Button fluid borderRadius={'0'}>\\n        결제하기\\n      </Button>\\n    </Drawer>\\n  ))\\n  .add('가격정보', () => (\\n    <Drawer active={boolean('활성', true)}>\\n      <Container\\n        clearing\\n        padding={{ top: 10, right: 25, bottom: 10, left: 30 }}\\n      >\\n        <Container floated=\\\"left\\\">\\n          <Text color=\\\"blue\\\" size=\\\"mini\\\" margin={{ top: 7, bottom: 4 }}>\\n            트리플 클럽가\\n          </Text>\\n          <Text size=\\\"large\\\" bold>\\n            50,000원\\n          </Text>\\n        </Container>\\n        <Container floated=\\\"right\\\">\\n          <Button borderRadius={4}>객실예약</Button>\\n        </Container>\\n      </Container>\\n    </Drawer>\\n  ))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"core-elements-drawer--가격정보\":{\"startLoc\":{\"col\":7,\"line\":14},\"endLoc\":{\"col\":3,\"line\":33},\"startBody\":{\"col\":15,\"line\":14},\"endBody\":{\"col\":3,\"line\":33}},\"core-elements-drawer--버튼\":{\"startLoc\":{\"col\":7,\"line\":7},\"endLoc\":{\"col\":3,\"line\":13},\"startBody\":{\"col\":13,\"line\":7},\"endBody\":{\"col\":3,\"line\":13}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/drawer.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { boolean } from '@storybook/addon-knobs'\nimport { Button, Container, Drawer, Text } from '@titicaca/core-elements'\n\nstoriesOf('Core-Elements | Drawer', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('버튼', () => (\n    <Drawer active={boolean('활성', true)}>\n      <Button fluid borderRadius={'0'}>\n        결제하기\n      </Button>\n    </Drawer>\n  ))\n  .add('가격정보', () => (\n    <Drawer active={boolean('활성', true)}>\n      <Container\n        clearing\n        padding={{ top: 10, right: 25, bottom: 10, left: 30 }}\n      >\n        <Container floated=\"left\">\n          <Text color=\"blue\" size=\"mini\" margin={{ top: 7, bottom: 4 }}>\n            트리플 클럽가\n          </Text>\n          <Text size=\"large\" bold>\n            50,000원\n          </Text>\n        </Container>\n        <Container floated=\"right\">\n          <Button borderRadius={4}>객실예약</Button>\n        </Container>\n      </Container>\n    </Drawer>\n  ))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/core-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport styled from 'styled-components'\\nimport { select, text, boolean, number } from '@storybook/addon-knobs'\\nimport { FlexBox, Container, Text } from '@titicaca/core-elements'\\n\\nexport default {\\n  title: 'Core-Elements | FlexBox',\\n  components: FlexBox,\\n}\\n\\nconst Section = styled(Container)`\\n  padding: 50px;\\n`\\n\\nconst Summary = styled(Text)`\\n  font-size: 15px;\\n  margin-bottom: 30px;\\n`\\n\\nconst Item = styled(FlexBox)`\\n  border: 2px solid #e91e63;\\n  padding: 10px;\\n  border-radius: 10px;\\n`\\n\\nexport const Flex = () => {\\n  return (\\n    <Section>\\n      <Summary>\\n        {`flex 속성을 추가하면 display: flex 가 적용됩니다. \\\\n FlexBox 는 Container 를 상속받아 구성되어있기 때문에 Container 의 Prop 을 그대로 이용 할 수 있습니다.`}\\n      </Summary>\\n      <FlexBox flex={boolean('flex', true)}>\\n        <Item>Item1</Item>\\n        <Item>Item2</Item>\\n        <Item>Item3</Item>\\n      </FlexBox>\\n    </Section>\\n  )\\n}\\n\\nexport const FlexGrow = () => {\\n  return (\\n    <Section>\\n      <Summary>\\n        flexGrow 는 컨테이너 요소 내부에서 할당 가능한 공간의 정도를 선언합니다.\\n      </Summary>\\n      <FlexBox flex>\\n        <Item flexGrow={number('flexGrow1', 1)}>Item1</Item>\\n        <Item flexGrow={number('flexGrow2', 1)}>Item2</Item>\\n        <Item flexGrow={number('flexGrow3', 1)}>Item3</Item>\\n      </FlexBox>\\n    </Section>\\n  )\\n}\\n\\nexport const Order = () => {\\n  return (\\n    <Section>\\n      <Summary>order를 이용하여 컴포넌트 순서를 조절 할 수 있습니다.</Summary>\\n      <FlexBox flex>\\n        <Item order={number('order1', 3)}>Item1</Item>\\n        <Item order={number('order2', 2)}>Item2</Item>\\n        <Item order={number('order3', 1)}>Item3</Item>\\n      </FlexBox>\\n    </Section>\\n  )\\n}\\n\\nexport const FlexShrink = () => {\\n  return (\\n    <Section>\\n      <Summary>\\n        컨테이너에 속한 아이템 크기가 컨테이너 보다 클 때 flexShrink 를 이용하면\\n        값에 따라 컨테이너에 맞게 축소됩니다.\\n      </Summary>\\n      <FlexBox flex width={number('container width', 300)}>\\n        <Item\\n          flexBasis={text('flex-basis', '500px')}\\n          flexShrink={number('flexShrink', 1)}\\n        >\\n          Item1\\n        </Item>\\n        <Item>Item2</Item>\\n        <Item>Item3</Item>\\n      </FlexBox>\\n    </Section>\\n  )\\n}\\n\\nexport const FlexDirection = () => {\\n  return (\\n    <Section>\\n      <Summary>\\n        아이템을 배치할 때 사용할 주축 및 방향(정방향, 역방향)을 지정합니다.\\n      </Summary>\\n      <FlexBox\\n        flex\\n        flexDirection={select(\\n          'flexDirection',\\n          ['row', 'row-reverse', 'column', 'column-reverse'],\\n          'row',\\n        )}\\n      >\\n        <Item>Item1</Item>\\n        <Item>Item2</Item>\\n        <Item>Item3</Item>\\n      </FlexBox>\\n    </Section>\\n  )\\n}\\n\\nexport const FlexWrap = () => {\\n  const itemWidth = number('width', 100)\\n\\n  return (\\n    <Section>\\n      <Summary>\\n        컨테이너 내부의 아이템들을 강제로 한줄에 배치되게 할 것인지, 또는 가능한\\n        영역 내에서 벗어나지 않고 여러행으로 나누어 표현 할 것인지 결정하는\\n        속성입니다.\\n      </Summary>\\n      <FlexBox\\n        flex\\n        width={number('container width', 200)}\\n        flexWrap={select('flexWrap', ['nowrap', 'wrap', 'initial'], 'wrap')}\\n      >\\n        <Item width={itemWidth}>Item1</Item>\\n        <Item width={itemWidth}>Item2</Item>\\n        <Item width={itemWidth}>Item3</Item>\\n      </FlexBox>\\n    </Section>\\n  )\\n}\\n\\nexport const JustifyContent = () => {\\n  return (\\n    <Section>\\n      <Summary>JustifyContent 는 주축 정렬을 제어합니다.</Summary>\\n      <FlexBox\\n        flex\\n        flexDirection={select(\\n          'flexDirection',\\n          ['row', 'row-reverse', 'column', 'column-reverse'],\\n          'row',\\n        )}\\n        justifyContent={select(\\n          'justifyContent',\\n          [\\n            'start',\\n            'end',\\n            'flex-start',\\n            'flex-end',\\n            'space-around',\\n            'space-between',\\n            'space-evenly',\\n            'stretch',\\n          ],\\n          'space-between',\\n        )}\\n      >\\n        <Item>Item1</Item>\\n        <Item>Item2</Item>\\n        <Item>Item3</Item>\\n      </FlexBox>\\n    </Section>\\n  )\\n}\\n\\nexport const AlignItems = () => {\\n  return (\\n    <Section>\\n      <Summary>align-items 는 교차축 정렬을 제어합니다.</Summary>\\n      <FlexBox\\n        flex\\n        flexDirection={select(\\n          'flexDirection',\\n          ['row', 'row-reverse', 'column', 'column-reverse'],\\n          'column',\\n        )}\\n        alignItems={select(\\n          'alignItems',\\n          [\\n            'normal',\\n            'stretch',\\n            'center',\\n            'start',\\n            'end',\\n            'flex-start',\\n            'flex-end',\\n          ],\\n          'center',\\n        )}\\n      >\\n        <Item>Item1</Item>\\n        <Item>Item2</Item>\\n        <Item>Item3</Item>\\n      </FlexBox>\\n    </Section>\\n  )\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"core-elements-flexbox--flex\":{\"startLoc\":{\"col\":20,\"line\":26},\"endLoc\":{\"col\":1,\"line\":39},\"startBody\":{\"col\":20,\"line\":26},\"endBody\":{\"col\":1,\"line\":39}},\"core-elements-flexbox--flex-grow\":{\"startLoc\":{\"col\":24,\"line\":41},\"endLoc\":{\"col\":1,\"line\":54},\"startBody\":{\"col\":24,\"line\":41},\"endBody\":{\"col\":1,\"line\":54}},\"core-elements-flexbox--order\":{\"startLoc\":{\"col\":21,\"line\":56},\"endLoc\":{\"col\":1,\"line\":67},\"startBody\":{\"col\":21,\"line\":56},\"endBody\":{\"col\":1,\"line\":67}},\"core-elements-flexbox--flex-shrink\":{\"startLoc\":{\"col\":26,\"line\":69},\"endLoc\":{\"col\":1,\"line\":88},\"startBody\":{\"col\":26,\"line\":69},\"endBody\":{\"col\":1,\"line\":88}},\"core-elements-flexbox--flex-direction\":{\"startLoc\":{\"col\":29,\"line\":90},\"endLoc\":{\"col\":1,\"line\":110},\"startBody\":{\"col\":29,\"line\":90},\"endBody\":{\"col\":1,\"line\":110}},\"core-elements-flexbox--flex-wrap\":{\"startLoc\":{\"col\":24,\"line\":112},\"endLoc\":{\"col\":1,\"line\":133},\"startBody\":{\"col\":24,\"line\":112},\"endBody\":{\"col\":1,\"line\":133}},\"core-elements-flexbox--justify-content\":{\"startLoc\":{\"col\":30,\"line\":135},\"endLoc\":{\"col\":1,\"line\":167},\"startBody\":{\"col\":30,\"line\":135},\"endBody\":{\"col\":1,\"line\":167}},\"core-elements-flexbox--align-items\":{\"startLoc\":{\"col\":26,\"line\":169},\"endLoc\":{\"col\":1,\"line\":200},\"startBody\":{\"col\":26,\"line\":169},\"endBody\":{\"col\":1,\"line\":200}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/flex-box.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport styled from 'styled-components'\nimport { select, text, boolean, number } from '@storybook/addon-knobs'\nimport { FlexBox, Container, Text } from '@titicaca/core-elements'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport styled from 'styled-components'\\nimport { select, text, boolean, number } from '@storybook/addon-knobs'\\nimport { FlexBox, Container, Text } from '@titicaca/core-elements'\\n\\nexport default {\\n  title: 'Core-Elements | FlexBox',\\n  components: FlexBox,\\n}\\n\\nconst Section = styled(Container)`\\n  padding: 50px;\\n`\\n\\nconst Summary = styled(Text)`\\n  font-size: 15px;\\n  margin-bottom: 30px;\\n`\\n\\nconst Item = styled(FlexBox)`\\n  border: 2px solid #e91e63;\\n  padding: 10px;\\n  border-radius: 10px;\\n`\\n\\nexport const Flex = () => {\\n  return (\\n    <Section>\\n      <Summary>\\n        {`flex 속성을 추가하면 display: flex 가 적용됩니다. \\\\n FlexBox 는 Container 를 상속받아 구성되어있기 때문에 Container 의 Prop 을 그대로 이용 할 수 있습니다.`}\\n      </Summary>\\n      <FlexBox flex={boolean('flex', true)}>\\n        <Item>Item1</Item>\\n        <Item>Item2</Item>\\n        <Item>Item3</Item>\\n      </FlexBox>\\n    </Section>\\n  )\\n}\\n\\nexport const FlexGrow = () => {\\n  return (\\n    <Section>\\n      <Summary>\\n        flexGrow 는 컨테이너 요소 내부에서 할당 가능한 공간의 정도를 선언합니다.\\n      </Summary>\\n      <FlexBox flex>\\n        <Item flexGrow={number('flexGrow1', 1)}>Item1</Item>\\n        <Item flexGrow={number('flexGrow2', 1)}>Item2</Item>\\n        <Item flexGrow={number('flexGrow3', 1)}>Item3</Item>\\n      </FlexBox>\\n    </Section>\\n  )\\n}\\n\\nexport const Order = () => {\\n  return (\\n    <Section>\\n      <Summary>order를 이용하여 컴포넌트 순서를 조절 할 수 있습니다.</Summary>\\n      <FlexBox flex>\\n        <Item order={number('order1', 3)}>Item1</Item>\\n        <Item order={number('order2', 2)}>Item2</Item>\\n        <Item order={number('order3', 1)}>Item3</Item>\\n      </FlexBox>\\n    </Section>\\n  )\\n}\\n\\nexport const FlexShrink = () => {\\n  return (\\n    <Section>\\n      <Summary>\\n        컨테이너에 속한 아이템 크기가 컨테이너 보다 클 때 flexShrink 를 이용하면\\n        값에 따라 컨테이너에 맞게 축소됩니다.\\n      </Summary>\\n      <FlexBox flex width={number('container width', 300)}>\\n        <Item\\n          flexBasis={text('flex-basis', '500px')}\\n          flexShrink={number('flexShrink', 1)}\\n        >\\n          Item1\\n        </Item>\\n        <Item>Item2</Item>\\n        <Item>Item3</Item>\\n      </FlexBox>\\n    </Section>\\n  )\\n}\\n\\nexport const FlexDirection = () => {\\n  return (\\n    <Section>\\n      <Summary>\\n        아이템을 배치할 때 사용할 주축 및 방향(정방향, 역방향)을 지정합니다.\\n      </Summary>\\n      <FlexBox\\n        flex\\n        flexDirection={select(\\n          'flexDirection',\\n          ['row', 'row-reverse', 'column', 'column-reverse'],\\n          'row',\\n        )}\\n      >\\n        <Item>Item1</Item>\\n        <Item>Item2</Item>\\n        <Item>Item3</Item>\\n      </FlexBox>\\n    </Section>\\n  )\\n}\\n\\nexport const FlexWrap = () => {\\n  const itemWidth = number('width', 100)\\n\\n  return (\\n    <Section>\\n      <Summary>\\n        컨테이너 내부의 아이템들을 강제로 한줄에 배치되게 할 것인지, 또는 가능한\\n        영역 내에서 벗어나지 않고 여러행으로 나누어 표현 할 것인지 결정하는\\n        속성입니다.\\n      </Summary>\\n      <FlexBox\\n        flex\\n        width={number('container width', 200)}\\n        flexWrap={select('flexWrap', ['nowrap', 'wrap', 'initial'], 'wrap')}\\n      >\\n        <Item width={itemWidth}>Item1</Item>\\n        <Item width={itemWidth}>Item2</Item>\\n        <Item width={itemWidth}>Item3</Item>\\n      </FlexBox>\\n    </Section>\\n  )\\n}\\n\\nexport const JustifyContent = () => {\\n  return (\\n    <Section>\\n      <Summary>JustifyContent 는 주축 정렬을 제어합니다.</Summary>\\n      <FlexBox\\n        flex\\n        flexDirection={select(\\n          'flexDirection',\\n          ['row', 'row-reverse', 'column', 'column-reverse'],\\n          'row',\\n        )}\\n        justifyContent={select(\\n          'justifyContent',\\n          [\\n            'start',\\n            'end',\\n            'flex-start',\\n            'flex-end',\\n            'space-around',\\n            'space-between',\\n            'space-evenly',\\n            'stretch',\\n          ],\\n          'space-between',\\n        )}\\n      >\\n        <Item>Item1</Item>\\n        <Item>Item2</Item>\\n        <Item>Item3</Item>\\n      </FlexBox>\\n    </Section>\\n  )\\n}\\n\\nexport const AlignItems = () => {\\n  return (\\n    <Section>\\n      <Summary>align-items 는 교차축 정렬을 제어합니다.</Summary>\\n      <FlexBox\\n        flex\\n        flexDirection={select(\\n          'flexDirection',\\n          ['row', 'row-reverse', 'column', 'column-reverse'],\\n          'column',\\n        )}\\n        alignItems={select(\\n          'alignItems',\\n          [\\n            'normal',\\n            'stretch',\\n            'center',\\n            'start',\\n            'end',\\n            'flex-start',\\n            'flex-end',\\n          ],\\n          'center',\\n        )}\\n      >\\n        <Item>Item1</Item>\\n        <Item>Item2</Item>\\n        <Item>Item3</Item>\\n      </FlexBox>\\n    </Section>\\n  )\\n}\\n\",\"locationsMap\":{\"core-elements-flexbox--flex\":{\"startLoc\":{\"col\":20,\"line\":26},\"endLoc\":{\"col\":1,\"line\":39},\"startBody\":{\"col\":20,\"line\":26},\"endBody\":{\"col\":1,\"line\":39}},\"core-elements-flexbox--flex-grow\":{\"startLoc\":{\"col\":24,\"line\":41},\"endLoc\":{\"col\":1,\"line\":54},\"startBody\":{\"col\":24,\"line\":41},\"endBody\":{\"col\":1,\"line\":54}},\"core-elements-flexbox--order\":{\"startLoc\":{\"col\":21,\"line\":56},\"endLoc\":{\"col\":1,\"line\":67},\"startBody\":{\"col\":21,\"line\":56},\"endBody\":{\"col\":1,\"line\":67}},\"core-elements-flexbox--flex-shrink\":{\"startLoc\":{\"col\":26,\"line\":69},\"endLoc\":{\"col\":1,\"line\":88},\"startBody\":{\"col\":26,\"line\":69},\"endBody\":{\"col\":1,\"line\":88}},\"core-elements-flexbox--flex-direction\":{\"startLoc\":{\"col\":29,\"line\":90},\"endLoc\":{\"col\":1,\"line\":110},\"startBody\":{\"col\":29,\"line\":90},\"endBody\":{\"col\":1,\"line\":110}},\"core-elements-flexbox--flex-wrap\":{\"startLoc\":{\"col\":24,\"line\":112},\"endLoc\":{\"col\":1,\"line\":133},\"startBody\":{\"col\":24,\"line\":112},\"endBody\":{\"col\":1,\"line\":133}},\"core-elements-flexbox--justify-content\":{\"startLoc\":{\"col\":30,\"line\":135},\"endLoc\":{\"col\":1,\"line\":167},\"startBody\":{\"col\":30,\"line\":135},\"endBody\":{\"col\":1,\"line\":167}},\"core-elements-flexbox--align-items\":{\"startLoc\":{\"col\":26,\"line\":169},\"endLoc\":{\"col\":1,\"line\":200},\"startBody\":{\"col\":26,\"line\":169},\"endBody\":{\"col\":1,\"line\":200}}}},},\n  title: 'Core-Elements | FlexBox',\n  components: FlexBox,\n}\n\nconst Section = styled(Container)`\n  padding: 50px;\n`\n\nconst Summary = styled(Text)`\n  font-size: 15px;\n  margin-bottom: 30px;\n`\n\nconst Item = styled(FlexBox)`\n  border: 2px solid #e91e63;\n  padding: 10px;\n  border-radius: 10px;\n`\n\nexport const Flex = addSourceDecorator(() => {\n  return (\n    <Section>\n      <Summary>\n        {`flex 속성을 추가하면 display: flex 가 적용됩니다. \\n FlexBox 는 Container 를 상속받아 구성되어있기 때문에 Container 의 Prop 을 그대로 이용 할 수 있습니다.`}\n      </Summary>\n      <FlexBox flex={boolean('flex', true)}>\n        <Item>Item1</Item>\n        <Item>Item2</Item>\n        <Item>Item3</Item>\n      </FlexBox>\n    </Section>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nexport const FlexGrow = addSourceDecorator(() => {\n  return (\n    <Section>\n      <Summary>\n        flexGrow 는 컨테이너 요소 내부에서 할당 가능한 공간의 정도를 선언합니다.\n      </Summary>\n      <FlexBox flex>\n        <Item flexGrow={number('flexGrow1', 1)}>Item1</Item>\n        <Item flexGrow={number('flexGrow2', 1)}>Item2</Item>\n        <Item flexGrow={number('flexGrow3', 1)}>Item3</Item>\n      </FlexBox>\n    </Section>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nexport const Order = addSourceDecorator(() => {\n  return (\n    <Section>\n      <Summary>order를 이용하여 컴포넌트 순서를 조절 할 수 있습니다.</Summary>\n      <FlexBox flex>\n        <Item order={number('order1', 3)}>Item1</Item>\n        <Item order={number('order2', 2)}>Item2</Item>\n        <Item order={number('order3', 1)}>Item3</Item>\n      </FlexBox>\n    </Section>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nexport const FlexShrink = addSourceDecorator(() => {\n  return (\n    <Section>\n      <Summary>\n        컨테이너에 속한 아이템 크기가 컨테이너 보다 클 때 flexShrink 를 이용하면\n        값에 따라 컨테이너에 맞게 축소됩니다.\n      </Summary>\n      <FlexBox flex width={number('container width', 300)}>\n        <Item\n          flexBasis={text('flex-basis', '500px')}\n          flexShrink={number('flexShrink', 1)}\n        >\n          Item1\n        </Item>\n        <Item>Item2</Item>\n        <Item>Item3</Item>\n      </FlexBox>\n    </Section>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nexport const FlexDirection = addSourceDecorator(() => {\n  return (\n    <Section>\n      <Summary>\n        아이템을 배치할 때 사용할 주축 및 방향(정방향, 역방향)을 지정합니다.\n      </Summary>\n      <FlexBox\n        flex\n        flexDirection={select(\n          'flexDirection',\n          ['row', 'row-reverse', 'column', 'column-reverse'],\n          'row',\n        )}\n      >\n        <Item>Item1</Item>\n        <Item>Item2</Item>\n        <Item>Item3</Item>\n      </FlexBox>\n    </Section>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nexport const FlexWrap = addSourceDecorator(() => {\n  const itemWidth = number('width', 100)\n\n  return (\n    <Section>\n      <Summary>\n        컨테이너 내부의 아이템들을 강제로 한줄에 배치되게 할 것인지, 또는 가능한\n        영역 내에서 벗어나지 않고 여러행으로 나누어 표현 할 것인지 결정하는\n        속성입니다.\n      </Summary>\n      <FlexBox\n        flex\n        width={number('container width', 200)}\n        flexWrap={select('flexWrap', ['nowrap', 'wrap', 'initial'], 'wrap')}\n      >\n        <Item width={itemWidth}>Item1</Item>\n        <Item width={itemWidth}>Item2</Item>\n        <Item width={itemWidth}>Item3</Item>\n      </FlexBox>\n    </Section>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nexport const JustifyContent = addSourceDecorator(() => {\n  return (\n    <Section>\n      <Summary>JustifyContent 는 주축 정렬을 제어합니다.</Summary>\n      <FlexBox\n        flex\n        flexDirection={select(\n          'flexDirection',\n          ['row', 'row-reverse', 'column', 'column-reverse'],\n          'row',\n        )}\n        justifyContent={select(\n          'justifyContent',\n          [\n            'start',\n            'end',\n            'flex-start',\n            'flex-end',\n            'space-around',\n            'space-between',\n            'space-evenly',\n            'stretch',\n          ],\n          'space-between',\n        )}\n      >\n        <Item>Item1</Item>\n        <Item>Item2</Item>\n        <Item>Item3</Item>\n      </FlexBox>\n    </Section>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nexport const AlignItems = addSourceDecorator(() => {\n  return (\n    <Section>\n      <Summary>align-items 는 교차축 정렬을 제어합니다.</Summary>\n      <FlexBox\n        flex\n        flexDirection={select(\n          'flexDirection',\n          ['row', 'row-reverse', 'column', 'column-reverse'],\n          'column',\n        )}\n        alignItems={select(\n          'alignItems',\n          [\n            'normal',\n            'stretch',\n            'center',\n            'start',\n            'end',\n            'flex-start',\n            'flex-end',\n          ],\n          'center',\n        )}\n      >\n        <Item>Item1</Item>\n        <Item>Item2</Item>\n        <Item>Item3</Item>\n      </FlexBox>\n    </Section>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs/blocks\";\n\nimport { Meta, Story, Preview } from '@storybook/addon-docs/blocks'\nimport { select as selectAddons, text, boolean } from '@storybook/addon-knobs'\nimport {\n  Input,\n  ConfirmSelector,\n  Textarea,\n  Select,\n  GenderSelector,\n  Text,\n} from '@titicaca/core-elements'\nimport RadioWrapper from './radio-wrapper'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Core-Elements | Form\" mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"form\"\n    }}>{`Form`}</h1>\n    <br />\n    <h2 {...{\n      \"id\": \"input\"\n    }}>{`Input`}</h2>\n    <p>{`기본 Input 입니다.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`id?: string\ntype?: string\nvalue?: string\nerror?: string\nplaceholder?: string\nmask?: string\nmaskChar?: string | null\nonChange?: (e: React.SyntheticEvent, value: string) => any\nonBlur?: (e: React.FocusEvent<any>) => any\n`}</code></pre>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Input\" mdxType=\"Story\">\n    <Input error={boolean('error', false)} label={text('label', '이름')} placeholder={text('placeholder', '이름을 입력해주세요')} help={text('placeholder', '고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.')} mdxType=\"Input\" />\n  </Story>\n    </Preview>\n    <h3 {...{\n      \"id\": \"input---status\"\n    }}>{`Input - Status`}</h3>\n    <p>{`Focus 와 Error 두 가지의 상태 값을 가지고 있습니다.\nfocused, error props 를 이용하여 상태를 다룰 수 있습니다.`}</p>\n    <Input placeholder={text('placeholder', '이름을 입력해주세요')} help={text('placeholder', '고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.')} error={true} mdxType=\"Input\" />\n    <h3 {...{\n      \"id\": \"input---mask\"\n    }}>{`Input - Mask`}</h3>\n    <p>{`mask props 를 이용하여 mask 를 추가 할 수 있습니다.`}</p>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Input - Mask\" mdxType=\"Story\">\n    <Input mask={text('mask', '99/99')} maskChar={null} value={text('value', 1230)} mdxType=\"Input\" />\n  </Story>\n    </Preview>\n    <h2 {...{\n      \"id\": \"select\"\n    }}>{`Select`}</h2>\n    <p>{`option 을 선택 할 수 있는 SelectBox 입니다.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`id?: string\nname?: string\nvalue?: any\nplaceholder?: string\noptions?: SelectOption[]\nfocused?: string\nerror?: string\nonBlur?: (e: React.FocusEvent<any>) => any\nonChange?: (e?: React.SyntheticEvent, value?: any) => any\n`}</code></pre>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Select\" mdxType=\"Story\">\n    <Select error={boolean('error', false)} label=\"투어티켓 시간\" help={text('placeholder', '고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.')} placeholder=\"시간을 선택해주세요\" value={selectAddons('value', ['12:00', '12:10', '12:20'], '12:00')} options={[{\n          label: '12:00',\n          value: '12:00'\n        }, {\n          label: '12:10',\n          value: '12:10'\n        }, {\n          label: '12:20',\n          value: '12:20'\n        }]} disabled={boolean('disabled', false)} mdxType=\"Select\" />\n  </Story>\n    </Preview>\n    <h2 {...{\n      \"id\": \"confirm-selector\"\n    }}>{`Confirm Selector`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`name?: string\nvalue: any\nplaceholder: string\nonChange?: (e?: React.SyntheticEvent, value?: any) => any\ntextAlign?: CSS.TextAlignProperty\nborderless?: boolean\nfillType?: FillType ('full' | 'border' | 'text')\nchildren?: React.ReactNode\npadding?: MarginPadding\nerror?: string\n`}</code></pre>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Confirm Selector\" mdxType=\"Story\">\n    <ConfirmSelector value={boolean('value', false)} borderless={boolean('borderless', false)} textAlign={selectAddons('textAlign', ['left', 'right'], 'left')} fillType={selectAddons('fillType', ['full', 'border', 'text'], 'full')} padding={{\n          top: 16,\n          right: 50,\n          left: 16,\n          bottom: 16\n        }} mdxType=\"ConfirmSelector\">\n      <Text mdxType=\"Text\">예약자 정보를 업데이트 합니다.</Text>\n    </ConfirmSelector>\n  </Story>\n    </Preview>\n    <h2 {...{\n      \"id\": \"radio\"\n    }}>{`Radio`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`option: {\n  text: string\n  value: string\n}\n\nname?: string\nvalue?: string\nonChange?: (e: React.SyntheticEvent, arg1: string) => any\noptions: option[]\n`}</code></pre>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Radio\" mdxType=\"Story\">\n    <RadioWrapper mdxType=\"RadioWrapper\" />\n  </Story>\n    </Preview>\n    <h2 {...{\n      \"id\": \"gender-selector\"\n    }}>{`Gender Selector`}</h2>\n    <p>{`남/녀 를 선택 할 수 있는 Selector 를 제공합니다.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`name?: string\nvalue?: string\nonChange?: (e: React.SyntheticEvent, arg1: string) => any\n`}</code></pre>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Gender Selector\" mdxType=\"Story\">\n    <GenderSelector value={selectAddons('value', ['MALE', 'FEMALE'], 'MALE')} mdxType=\"GenderSelector\" />\n  </Story>\n    </Preview>\n    <h2 {...{\n      \"id\": \"textarea\"\n    }}>{`Textarea`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`id?: string\nvalue?: string\nerror?: string\nplaceholder?: string\nfocused?: string\nonChange?: (e: React.SyntheticEvent, value: string) => any\nonBlur?: (e: React.FocusEvent<any>) => any\n`}</code></pre>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Textarea\" mdxType=\"Story\">\n    <Textarea error={boolean('error', false)} label={text('label', '요청사항')} placeholder={text('placeholder', '요청사항을 입력해주세요')} help={text('placeholder', '고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.')} mdxType=\"Textarea\" />\n  </Story>\n    </Preview>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const input = () => (\n        <Input error={boolean('error', false)} label={text('label', '이름')} placeholder={text('placeholder', '이름을 입력해주세요')} help={text('placeholder', '고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.')} />\n      );\ninput.story = {};\ninput.story.name = 'Input';\ninput.story.parameters = { mdxSource: '<Input error={boolean(\\'error\\', false)} label={text(\\'label\\', \\'이름\\')} placeholder={text(\\'placeholder\\', \\'이름을 입력해주세요\\')} help={text(\\'placeholder\\', \\'고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.\\')} />' };\n\nexport const inputMask = () => (\n        <Input mask={text('mask', '99/99')} maskChar={null} value={text('value', 1230)} />\n      );\ninputMask.story = {};\ninputMask.story.name = 'Input - Mask';\ninputMask.story.parameters = { mdxSource: '<Input mask={text(\\'mask\\', \\'99/99\\')} maskChar={null} value={text(\\'value\\', 1230)} />' };\n\nexport const select = () => (\n        <Select error={boolean('error', false)} label=\"투어티켓 시간\" help={text('placeholder', '고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.')} placeholder=\"시간을 선택해주세요\" value={selectAddons('value', ['12:00', '12:10', '12:20'], '12:00')} options={[{\n  label: '12:00',\n  value: '12:00'\n}, {\n  label: '12:10',\n  value: '12:10'\n}, {\n  label: '12:20',\n  value: '12:20'\n}]} disabled={boolean('disabled', false)} />\n      );\nselect.story = {};\nselect.story.name = 'Select';\nselect.story.parameters = { mdxSource: '<Select error={boolean(\\'error\\', false)} label=\\\"투어티켓 시간\\\" help={text(\\'placeholder\\', \\'고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.\\')} placeholder=\\\"시간을 선택해주세요\\\" value={selectAddons(\\'value\\', [\\'12:00\\', \\'12:10\\', \\'12:20\\'], \\'12:00\\')} options={[{\\n  label: \\'12:00\\',\\n  value: \\'12:00\\'\\n}, {\\n  label: \\'12:10\\',\\n  value: \\'12:10\\'\\n}, {\\n  label: \\'12:20\\',\\n  value: \\'12:20\\'\\n}]} disabled={boolean(\\'disabled\\', false)} />' };\n\nexport const confirmSelector = () => (\n        <ConfirmSelector value={boolean('value', false)} borderless={boolean('borderless', false)} textAlign={selectAddons('textAlign', ['left', 'right'], 'left')} fillType={selectAddons('fillType', ['full', 'border', 'text'], 'full')} padding={{\n  top: 16,\n  right: 50,\n  left: 16,\n  bottom: 16\n}}>\n      <Text>예약자 정보를 업데이트 합니다.</Text>\n    </ConfirmSelector>\n      );\nconfirmSelector.story = {};\nconfirmSelector.story.name = 'Confirm Selector';\nconfirmSelector.story.parameters = { mdxSource: '<ConfirmSelector value={boolean(\\'value\\', false)} borderless={boolean(\\'borderless\\', false)} textAlign={selectAddons(\\'textAlign\\', [\\'left\\', \\'right\\'], \\'left\\')} fillType={selectAddons(\\'fillType\\', [\\'full\\', \\'border\\', \\'text\\'], \\'full\\')} padding={{\\n  top: 16,\\n  right: 50,\\n  left: 16,\\n  bottom: 16\\n}}>\\n      <Text>예약자 정보를 업데이트 합니다.</Text>\\n    </ConfirmSelector>' };\n\nexport const radio = () => (\n        <RadioWrapper />\n      );\nradio.story = {};\nradio.story.name = 'Radio';\nradio.story.parameters = { mdxSource: '<RadioWrapper />' };\n\nexport const genderSelector = () => (\n        <GenderSelector value={selectAddons('value', ['MALE', 'FEMALE'], 'MALE')} />\n      );\ngenderSelector.story = {};\ngenderSelector.story.name = 'Gender Selector';\ngenderSelector.story.parameters = { mdxSource: '<GenderSelector value={selectAddons(\\'value\\', [\\'MALE\\', \\'FEMALE\\'], \\'MALE\\')} />' };\n\nexport const textarea = () => (\n        <Textarea error={boolean('error', false)} label={text('label', '요청사항')} placeholder={text('placeholder', '요청사항을 입력해주세요')} help={text('placeholder', '고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.')} />\n      );\ntextarea.story = {};\ntextarea.story.name = 'Textarea';\ntextarea.story.parameters = { mdxSource: '<Textarea error={boolean(\\'error\\', false)} label={text(\\'label\\', \\'요청사항\\')} placeholder={text(\\'placeholder\\', \\'요청사항을 입력해주세요\\')} help={text(\\'placeholder\\', \\'고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.\\')} />' };\n\nconst componentMeta = { title: 'Core-Elements | Form', includeStories: [\"input\",\"inputMask\",\"select\",\"confirmSelector\",\"radio\",\"genderSelector\",\"textarea\"],  };\n\nconst mdxStoryNameToKey = {\"Input\":\"input\",\"Input - Mask\":\"inputMask\",\"Select\":\"select\",\"Confirm Selector\":\"confirmSelector\",\"Radio\":\"radio\",\"Gender Selector\":\"genderSelector\",\"Textarea\":\"textarea\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentMeta={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/core-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { text, boolean, number, select } from '@storybook/addon-knobs'\\nimport {\\n  Image,\\n  GlobalSizes,\\n  FrameRatioAndSizes,\\n  ImageSource,\\n  ImageSourceType,\\n} from '@titicaca/core-elements'\\nimport { action } from '@storybook/addon-actions'\\n\\nconst GLOBAL_SIZES: GlobalSizes[] = [\\n  'mini',\\n  'tiny',\\n  'small',\\n  'medium',\\n  'large',\\n  'big',\\n  'huge',\\n  'massive',\\n]\\n\\nconst ROUND_SIZES: GlobalSizes[] = ['small', 'medium']\\n\\nconst FRAME_RATIO_AND_SIZES: FrameRatioAndSizes[] = [\\n  '10:11',\\n  '11:7',\\n  '1:1',\\n  '4:1',\\n  '4:3',\\n  '5:3',\\n  '5:8',\\n  '9:5',\\n  'big',\\n  'huge',\\n  'large',\\n  'medium',\\n  'mini',\\n  'original',\\n  'small',\\n]\\n\\nconst FRAME_GROUP = '틀 관련 props'\\n\\nenum IMAGE_SOURCE_TYPE {\\n  CORE_ELEMENTS = 'core-elements',\\n  CUSTOM_NEW = 'custom_new',\\n  CUSTOM_OLD = 'custom_old',\\n  UNDEFINED = 'undefined',\\n}\\n\\nconst IMAGE_SOURCE_COMPONENTS: {\\n  [key in IMAGE_SOURCE_TYPE]: ImageSourceType | undefined\\n} = {\\n  [IMAGE_SOURCE_TYPE.CORE_ELEMENTS]: ImageSource,\\n  [IMAGE_SOURCE_TYPE.CUSTOM_OLD]: function OldCustomImageSource({\\n    children,\\n  }: {\\n    children: string\\n  }) {\\n    return `출처 ${children.replace(/^https?:\\\\/\\\\//, '')}`\\n  },\\n  [IMAGE_SOURCE_TYPE.CUSTOM_NEW]: function CustomImageSource({\\n    sourceUrl,\\n  }: {\\n    sourceUrl?: string\\n  }) {\\n    return (\\n      <div style={{ fontSize: 20, border: 'solid 1px red', overflow: 'auto' }}>\\n        커스텀 컴포넌트입니다.\\n        {sourceUrl}\\n      </div>\\n    )\\n  },\\n  [IMAGE_SOURCE_TYPE.UNDEFINED]: undefined,\\n}\\n\\nstoriesOf('Core-Elements | Image', module)\\n  .add('기본', () => {\\n    const useFixedDemensions = boolean('틀 고정', true, FRAME_GROUP)\\n    const useDirectDemension =\\n      useFixedDemensions && boolean('width, height 사용', false, FRAME_GROUP)\\n\\n    return (\\n      <Image\\n        src={text('src', 'https://triple-corp.com/static/images/img-bg-0.jpg')}\\n        borderRadius={number('borderRadius', 6)}\\n        sourceUrl={text('sourceUrl', 'https://triple-corp.com')}\\n        ImageSource={\\n          IMAGE_SOURCE_COMPONENTS[\\n            select(\\n              'ImageSource',\\n              [\\n                IMAGE_SOURCE_TYPE.CORE_ELEMENTS,\\n                IMAGE_SOURCE_TYPE.CUSTOM_OLD,\\n                IMAGE_SOURCE_TYPE.CUSTOM_NEW,\\n                IMAGE_SOURCE_TYPE.UNDEFINED,\\n              ],\\n              IMAGE_SOURCE_TYPE.UNDEFINED,\\n            )\\n          ]\\n        }\\n        withLinkIndicator={boolean('withLinkIndicator', false)}\\n        floated={select('floated', ['right', 'left', 'none'], 'none')}\\n        margin={{\\n          top: number('margin-top', 0),\\n          right: number('margin-right', 0),\\n          bottom: number('margin-bottom', 0),\\n          left: number('margin-left', 0),\\n        }}\\n        asPlaceholder={boolean('asPlaceholder', false)}\\n        alt={text('alt', '')}\\n        frame={\\n          boolean('frame 사용', false, FRAME_GROUP)\\n            ? select('frame', FRAME_RATIO_AND_SIZES, 'original', FRAME_GROUP)\\n            : undefined\\n        }\\n        size={\\n          useFixedDemensions && !useDirectDemension\\n            ? select('size', GLOBAL_SIZES, 'medium', FRAME_GROUP)\\n            : undefined\\n        }\\n        width={\\n          useFixedDemensions && useDirectDemension\\n            ? number('width', 500, undefined, FRAME_GROUP)\\n            : undefined\\n        }\\n        height={\\n          useFixedDemensions && useDirectDemension\\n            ? number('height', 500, undefined, FRAME_GROUP)\\n            : undefined\\n        }\\n        onClick={action('onClick')}\\n      />\\n    )\\n  })\\n  .add('circular', () => {\\n    const useDirectWidth = boolean('크기 직접 입력', false)\\n\\n    return (\\n      <Image\\n        circular\\n        src={text('src', 'https://triple-corp.com/static/images/img-bg-0.jpg')}\\n        floated={select('floated', ['right', 'left', 'none'], 'none')}\\n        size={\\n          !useDirectWidth ? select('size', ROUND_SIZES, 'medium') : undefined\\n        }\\n        width={useDirectWidth ? number('width', 20) : undefined}\\n      />\\n    )\\n  })\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"core-elements-image--circular\":{\"startLoc\":{\"col\":7,\"line\":138},\"endLoc\":{\"col\":3,\"line\":152},\"startBody\":{\"col\":19,\"line\":138},\"endBody\":{\"col\":3,\"line\":152}},\"core-elements-image--기본\":{\"startLoc\":{\"col\":7,\"line\":80},\"endLoc\":{\"col\":3,\"line\":137},\"startBody\":{\"col\":13,\"line\":80},\"endBody\":{\"col\":3,\"line\":137}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/image.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { text, boolean, number, select } from '@storybook/addon-knobs'\nimport {\n  Image,\n  GlobalSizes,\n  FrameRatioAndSizes,\n  ImageSource,\n  ImageSourceType,\n} from '@titicaca/core-elements'\nimport { action } from '@storybook/addon-actions'\n\nconst GLOBAL_SIZES: GlobalSizes[] = [\n  'mini',\n  'tiny',\n  'small',\n  'medium',\n  'large',\n  'big',\n  'huge',\n  'massive',\n]\n\nconst ROUND_SIZES: GlobalSizes[] = ['small', 'medium']\n\nconst FRAME_RATIO_AND_SIZES: FrameRatioAndSizes[] = [\n  '10:11',\n  '11:7',\n  '1:1',\n  '4:1',\n  '4:3',\n  '5:3',\n  '5:8',\n  '9:5',\n  'big',\n  'huge',\n  'large',\n  'medium',\n  'mini',\n  'original',\n  'small',\n]\n\nconst FRAME_GROUP = '틀 관련 props'\n\nenum IMAGE_SOURCE_TYPE {\n  CORE_ELEMENTS = 'core-elements',\n  CUSTOM_NEW = 'custom_new',\n  CUSTOM_OLD = 'custom_old',\n  UNDEFINED = 'undefined',\n}\n\nconst IMAGE_SOURCE_COMPONENTS: {\n  [key in IMAGE_SOURCE_TYPE]: ImageSourceType | undefined\n} = {\n  [IMAGE_SOURCE_TYPE.CORE_ELEMENTS]: ImageSource,\n  [IMAGE_SOURCE_TYPE.CUSTOM_OLD]: function OldCustomImageSource({\n    children,\n  }: {\n    children: string\n  }) {\n    return `출처 ${children.replace(/^https?:\\/\\//, '')}`\n  },\n  [IMAGE_SOURCE_TYPE.CUSTOM_NEW]: function CustomImageSource({\n    sourceUrl,\n  }: {\n    sourceUrl?: string\n  }) {\n    return (\n      <div style={{ fontSize: 20, border: 'solid 1px red', overflow: 'auto' }}>\n        커스텀 컴포넌트입니다.\n        {sourceUrl}\n      </div>\n    )\n  },\n  [IMAGE_SOURCE_TYPE.UNDEFINED]: undefined,\n}\n\nstoriesOf('Core-Elements | Image', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('기본', () => {\n    const useFixedDemensions = boolean('틀 고정', true, FRAME_GROUP)\n    const useDirectDemension =\n      useFixedDemensions && boolean('width, height 사용', false, FRAME_GROUP)\n\n    return (\n      <Image\n        src={text('src', 'https://triple-corp.com/static/images/img-bg-0.jpg')}\n        borderRadius={number('borderRadius', 6)}\n        sourceUrl={text('sourceUrl', 'https://triple-corp.com')}\n        ImageSource={\n          IMAGE_SOURCE_COMPONENTS[\n            select(\n              'ImageSource',\n              [\n                IMAGE_SOURCE_TYPE.CORE_ELEMENTS,\n                IMAGE_SOURCE_TYPE.CUSTOM_OLD,\n                IMAGE_SOURCE_TYPE.CUSTOM_NEW,\n                IMAGE_SOURCE_TYPE.UNDEFINED,\n              ],\n              IMAGE_SOURCE_TYPE.UNDEFINED,\n            )\n          ]\n        }\n        withLinkIndicator={boolean('withLinkIndicator', false)}\n        floated={select('floated', ['right', 'left', 'none'], 'none')}\n        margin={{\n          top: number('margin-top', 0),\n          right: number('margin-right', 0),\n          bottom: number('margin-bottom', 0),\n          left: number('margin-left', 0),\n        }}\n        asPlaceholder={boolean('asPlaceholder', false)}\n        alt={text('alt', '')}\n        frame={\n          boolean('frame 사용', false, FRAME_GROUP)\n            ? select('frame', FRAME_RATIO_AND_SIZES, 'original', FRAME_GROUP)\n            : undefined\n        }\n        size={\n          useFixedDemensions && !useDirectDemension\n            ? select('size', GLOBAL_SIZES, 'medium', FRAME_GROUP)\n            : undefined\n        }\n        width={\n          useFixedDemensions && useDirectDemension\n            ? number('width', 500, undefined, FRAME_GROUP)\n            : undefined\n        }\n        height={\n          useFixedDemensions && useDirectDemension\n            ? number('height', 500, undefined, FRAME_GROUP)\n            : undefined\n        }\n        onClick={action('onClick')}\n      />\n    )\n  })\n  .add('circular', () => {\n    const useDirectWidth = boolean('크기 직접 입력', false)\n\n    return (\n      <Image\n        circular\n        src={text('src', 'https://triple-corp.com/static/images/img-bg-0.jpg')}\n        floated={select('floated', ['right', 'left', 'none'], 'none')}\n        size={\n          !useDirectWidth ? select('size', ROUND_SIZES, 'medium') : undefined\n        }\n        width={useDirectWidth ? number('width', 20) : undefined}\n      />\n    )\n  })\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/core-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { text, select, boolean } from '@storybook/addon-knobs'\\nimport { Label } from '@titicaca/core-elements'\\n\\nstoriesOf('Core-Elements | Label', module)\\n  .add('라디오', () => (\\n    <Label radio selected={boolean('선택됨', false)}>\\n      {text('텍스트', '최신순')}\\n    </Label>\\n  ))\\n  .add('프로모', () => (\\n    <Label\\n      promo\\n      size={select('크기', ['tiny', 'small', 'medium', 'large'], 'medium')}\\n      color={select(\\n        '색깔',\\n        ['white', 'purple', 'blue', 'red', 'gray', 'green'],\\n        'purple',\\n      )}\\n      emphasized={boolean('강조', true)}\\n    >\\n      {text('텍스트', '최대 24%')}\\n    </Label>\\n  ))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"core-elements-label--프로모\":{\"startLoc\":{\"col\":7,\"line\":12},\"endLoc\":{\"col\":3,\"line\":25},\"startBody\":{\"col\":14,\"line\":12},\"endBody\":{\"col\":3,\"line\":25}},\"core-elements-label--라디오\":{\"startLoc\":{\"col\":7,\"line\":7},\"endLoc\":{\"col\":3,\"line\":11},\"startBody\":{\"col\":14,\"line\":7},\"endBody\":{\"col\":3,\"line\":11}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/label.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { text, select, boolean } from '@storybook/addon-knobs'\nimport { Label } from '@titicaca/core-elements'\n\nstoriesOf('Core-Elements | Label', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('라디오', () => (\n    <Label radio selected={boolean('선택됨', false)}>\n      {text('텍스트', '최신순')}\n    </Label>\n  ))\n  .add('프로모', () => (\n    <Label\n      promo\n      size={select('크기', ['tiny', 'small', 'medium', 'large'], 'medium')}\n      color={select(\n        '색깔',\n        ['white', 'purple', 'blue', 'red', 'gray', 'green'],\n        'purple',\n      )}\n      emphasized={boolean('강조', true)}\n    >\n      {text('텍스트', '최대 24%')}\n    </Label>\n  ))\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs/blocks\";\n\nimport { Meta, Story, Preview } from '@storybook/addon-docs/blocks'\nimport { List } from '@titicaca/core-elements'\nimport { withKnobs, text, boolean, number } from '@storybook/addon-knobs'\nimport { ColorBox } from '../color-palette/color-box'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Core-Elements | List\" decorators={[withKnobs]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"list\"\n    }}>{`List`}</h1>\n    <br />\n    <h2 {...{\n      \"id\": \"divided--verticalgap\"\n    }}>{`Divided & VerticalGap`}</h2>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"List\" mdxType=\"Story\">\n    <List verticalGap={number('verticalGap(리스트 간격)', 20)} divided={boolean('divided', false)} dividerColor={text('deviderColor(구분선 색상)', '#ff0000')} dividerWeight={number('dividerWeight(구분선 두께)', 1)} mdxType=\"List\">\n      {[...Array(5).keys()].map((_, idx) => <List.Item key={idx} noDivider={boolean('짝수 번째 아래 라인 생략', false) && idx % 2 === 0}>\n          <ColorBox color=\"blue\" mdxType=\"ColorBox\" />\n        </List.Item>)}\n    </List>\n  </Story>\n    </Preview>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const list = () => (\n        <List verticalGap={number('verticalGap(리스트 간격)', 20)} divided={boolean('divided', false)} dividerColor={text('deviderColor(구분선 색상)', '#ff0000')} dividerWeight={number('dividerWeight(구분선 두께)', 1)}>\n      {[...Array(5).keys()].map((_, idx) => <List.Item key={idx} noDivider={boolean('짝수 번째 아래 라인 생략', false) && idx % 2 === 0}>\n          <ColorBox color=\"blue\" />\n        </List.Item>)}\n    </List>\n      );\nlist.story = {};\nlist.story.name = 'List';\nlist.story.parameters = { mdxSource: '<List verticalGap={number(\\'verticalGap(리스트 간격)\\', 20)} divided={boolean(\\'divided\\', false)} dividerColor={text(\\'deviderColor(구분선 색상)\\', \\'#ff0000\\')} dividerWeight={number(\\'dividerWeight(구분선 두께)\\', 1)}>\\n      {[...Array(5).keys()].map((_, idx) => <List.Item key={idx} noDivider={boolean(\\'짝수 번째 아래 라인 생략\\', false) && idx % 2 === 0}>\\n          <ColorBox color=\\\"blue\\\" />\\n        </List.Item>)}\\n    </List>' };\n\nconst componentMeta = { title: 'Core-Elements | List', decorators: [withKnobs], includeStories: [\"list\"],  };\n\nconst mdxStoryNameToKey = {\"List\":\"list\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentMeta={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/core-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { Container, HR1, longClickable } from '@titicaca/core-elements'\\nimport { action } from '@storybook/addon-actions'\\n\\nstoriesOf('Core-Elements | longClickable', module).add('Container', () => {\\n  const LongClickableContainer = longClickable(Container)\\n\\n  return (\\n    <>\\n      <LongClickableContainer\\n        onClick={action('LongClickable onClick')}\\n        onLongClick={action('LongClickable onLongClick')}\\n      >\\n        This receives long click\\n      </LongClickableContainer>\\n\\n      <HR1 />\\n\\n      <LongClickableContainer onClick={action('non-LongClickable onClick')}>\\n        This does not receive long click\\n      </LongClickableContainer>\\n    </>\\n  )\\n})\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"core-elements-longclickable--container\":{\"startLoc\":{\"col\":55,\"line\":6},\"endLoc\":{\"col\":1,\"line\":25},\"startBody\":{\"col\":68,\"line\":6},\"endBody\":{\"col\":1,\"line\":25}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/long-clickable.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { Container, HR1, longClickable } from '@titicaca/core-elements'\nimport { action } from '@storybook/addon-actions'\n\nstoriesOf('Core-Elements | longClickable', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).add('Container', () => {\n  const LongClickableContainer = longClickable(Container)\n\n  return (\n    <>\n      <LongClickableContainer\n        onClick={action('LongClickable onClick')}\n        onLongClick={action('LongClickable onLongClick')}\n      >\n        This receives long click\n      </LongClickableContainer>\n\n      <HR1 />\n\n      <LongClickableContainer onClick={action('non-LongClickable onClick')}>\n        This does not receive long click\n      </LongClickableContainer>\n    </>\n  )\n})\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/core-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { action } from '@storybook/addon-actions'\\nimport { Navbar, Text, SearchNavbar } from '@titicaca/core-elements'\\nimport ListingFilter from '@titicaca/listing-filter'\\nimport { text, boolean, select } from '@storybook/addon-knobs'\\nimport styled from 'styled-components'\\n\\nconst TOC = styled.div`\\n  position: absolute;\\n  left: 52px;\\n`\\n\\nconst ICON_LIST = [\\n  'more',\\n  'map',\\n  'write',\\n  'scraped',\\n  'unscraped',\\n  'share',\\n  'route',\\n  'search',\\n  'list',\\n  'hamburger',\\n]\\n\\nstoriesOf('Core-Elements | Navbar', module)\\n  .add('버튼 2개 (좌1+우1)', () => (\\n    <Navbar\\n      title={text('제목', '도쿄 관광지')}\\n      borderless={boolean('Border 생략', true)}\\n      backgroundColor={select(\\n        '배경 색',\\n        ['249, 250, 252(rgb코드)', 'gray', 'blue'],\\n        'white',\\n      )}\\n    >\\n      <Navbar.Item\\n        className=\\\"boxer gg\\\"\\n        icon={select('좌측 아이콘', ['back', 'close'], 'back')}\\n      />\\n      <Navbar.Item\\n        floated=\\\"right\\\"\\n        className=\\\"boxer gg\\\"\\n        icon={select('우측 아이콘', ICON_LIST, 'more')}\\n      />\\n    </Navbar>\\n  ))\\n  .add('버튼 3개 (좌1+우2)', () => (\\n    <Navbar\\n      title={text('제목', '도쿄 관광지')}\\n      borderless={boolean('Border 생략', true)}\\n    >\\n      <Navbar.Item icon={select('좌측 아이콘', ['back', 'close'], 'back')} />\\n      <Navbar.Item\\n        floated=\\\"right\\\"\\n        icon={select('우측 아이콘 1', ICON_LIST, 'more')}\\n      />\\n      <Navbar.Item\\n        floated=\\\"right\\\"\\n        icon={select('우측 아이콘 2', ICON_LIST, 'route')}\\n      />\\n    </Navbar>\\n  ))\\n  .add('버튼 4개 (좌1+우3)', () => (\\n    <Navbar\\n      title={text('제목', '도쿄 관광지')}\\n      borderless={boolean('Border 생략', true)}\\n    >\\n      <Navbar.Item icon={select('좌측 아이콘', ['back', 'close'], 'back')} />\\n      <Navbar.Item\\n        floated=\\\"right\\\"\\n        icon={select('우측 아이콘 1', ICON_LIST, 'more')}\\n      />\\n      <Navbar.Item\\n        floated=\\\"right\\\"\\n        icon={select('우측 아이콘 2', ICON_LIST, 'route')}\\n      />\\n      <Navbar.Item\\n        floated=\\\"right\\\"\\n        icon={select('우측 아이콘 3', ICON_LIST, 'list')}\\n      />\\n    </Navbar>\\n  ))\\n  .add('보조 Navbar (리스트 필터링)', () => (\\n    <>\\n      <Navbar title={text('제목', '도쿄 관광지')} borderless>\\n        <Navbar.Item icon={'back'} />\\n        <Navbar.Item floated=\\\"right\\\" icon={'more'} />\\n      </Navbar>\\n      <Navbar.Secondary>\\n        <ListingFilter>\\n          <ListingFilter.FilterEntry active expanding>\\n            전 지역\\n          </ListingFilter.FilterEntry>\\n        </ListingFilter>\\n      </Navbar.Secondary>\\n    </>\\n  ))\\n  .add('목차', () => (\\n    <Navbar\\n      renderTitle={() => (\\n        <TOC>\\n          <Text size=\\\"small\\\" bold alpha={1}>\\n            도쿄에서 반드시 먹어봐야 할 음식\\n          </Text>\\n\\n          <Text size=\\\"mini\\\" alpha={0.5} margin={{ top: 1 }}>\\n            라멘\\n          </Text>\\n        </TOC>\\n      )}\\n    >\\n      <Navbar.Item icon={'back'} />\\n      <Navbar.Item floated=\\\"right\\\" icon={'more'} />\\n    </Navbar>\\n  ))\\n  .add('backgroundColor=\\\"azul\\\" 적용', () => (\\n    <Navbar borderless backgroundColor=\\\"azul\\\" title=\\\"컬러가 적용된 Navbar\\\">\\n      <Navbar.Item icon={'back'} />\\n      <Navbar.Item floated=\\\"right\\\" icon={'more'} />\\n    </Navbar>\\n  ))\\n  .add('backgroundColor=\\\"teal\\\" 적용', () => (\\n    <Navbar borderless backgroundColor=\\\"teal\\\" title=\\\"컬러가 적용된 Navbar\\\">\\n      <Navbar.Item icon={'back'} />\\n      <Navbar.Item floated=\\\"right\\\" icon={'more'} />\\n    </Navbar>\\n  ))\\n  .add('검색', () => (\\n    <SearchNavbar\\n      inputPlaceholder={'“호텔예약” 도시이름으로 검색'}\\n      onBackClick={action('onBackClick')}\\n      onDeleteClick={action('onDeleteClick')}\\n      onInputChange={action('onInputChange')}\\n      onKeyUp={action('onKeyUp')}\\n      onBlur={action('onBlur')}\\n      onFocus={action('onFocus')}\\n    />\\n  ))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"core-elements-navbar--검색\":{\"startLoc\":{\"col\":7,\"line\":130},\"endLoc\":{\"col\":3,\"line\":140},\"startBody\":{\"col\":13,\"line\":130},\"endBody\":{\"col\":3,\"line\":140}},\"core-elements-navbar--backgroundcolor-teal-적용\":{\"startLoc\":{\"col\":7,\"line\":124},\"endLoc\":{\"col\":3,\"line\":129},\"startBody\":{\"col\":36,\"line\":124},\"endBody\":{\"col\":3,\"line\":129}},\"core-elements-navbar--backgroundcolor-azul-적용\":{\"startLoc\":{\"col\":7,\"line\":118},\"endLoc\":{\"col\":3,\"line\":123},\"startBody\":{\"col\":36,\"line\":118},\"endBody\":{\"col\":3,\"line\":123}},\"core-elements-navbar--목차\":{\"startLoc\":{\"col\":7,\"line\":100},\"endLoc\":{\"col\":3,\"line\":117},\"startBody\":{\"col\":13,\"line\":100},\"endBody\":{\"col\":3,\"line\":117}},\"core-elements-navbar--보조-navbar-리스트-필터링\":{\"startLoc\":{\"col\":7,\"line\":85},\"endLoc\":{\"col\":3,\"line\":99},\"startBody\":{\"col\":30,\"line\":85},\"endBody\":{\"col\":3,\"line\":99}},\"core-elements-navbar--버튼-4개-좌1-우3\":{\"startLoc\":{\"col\":7,\"line\":65},\"endLoc\":{\"col\":3,\"line\":84},\"startBody\":{\"col\":24,\"line\":65},\"endBody\":{\"col\":3,\"line\":84}},\"core-elements-navbar--버튼-3개-좌1-우2\":{\"startLoc\":{\"col\":7,\"line\":49},\"endLoc\":{\"col\":3,\"line\":64},\"startBody\":{\"col\":24,\"line\":49},\"endBody\":{\"col\":3,\"line\":64}},\"core-elements-navbar--버튼-2개-좌1-우1\":{\"startLoc\":{\"col\":7,\"line\":28},\"endLoc\":{\"col\":3,\"line\":48},\"startBody\":{\"col\":24,\"line\":28},\"endBody\":{\"col\":3,\"line\":48}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/navbar.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\nimport { Navbar, Text, SearchNavbar } from '@titicaca/core-elements'\nimport ListingFilter from '@titicaca/listing-filter'\nimport { text, boolean, select } from '@storybook/addon-knobs'\nimport styled from 'styled-components'\n\nconst TOC = styled.div`\n  position: absolute;\n  left: 52px;\n`\n\nconst ICON_LIST = [\n  'more',\n  'map',\n  'write',\n  'scraped',\n  'unscraped',\n  'share',\n  'route',\n  'search',\n  'list',\n  'hamburger',\n]\n\nstoriesOf('Core-Elements | Navbar', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('버튼 2개 (좌1+우1)', () => (\n    <Navbar\n      title={text('제목', '도쿄 관광지')}\n      borderless={boolean('Border 생략', true)}\n      backgroundColor={select(\n        '배경 색',\n        ['249, 250, 252(rgb코드)', 'gray', 'blue'],\n        'white',\n      )}\n    >\n      <Navbar.Item\n        className=\"boxer gg\"\n        icon={select('좌측 아이콘', ['back', 'close'], 'back')}\n      />\n      <Navbar.Item\n        floated=\"right\"\n        className=\"boxer gg\"\n        icon={select('우측 아이콘', ICON_LIST, 'more')}\n      />\n    </Navbar>\n  ))\n  .add('버튼 3개 (좌1+우2)', () => (\n    <Navbar\n      title={text('제목', '도쿄 관광지')}\n      borderless={boolean('Border 생략', true)}\n    >\n      <Navbar.Item icon={select('좌측 아이콘', ['back', 'close'], 'back')} />\n      <Navbar.Item\n        floated=\"right\"\n        icon={select('우측 아이콘 1', ICON_LIST, 'more')}\n      />\n      <Navbar.Item\n        floated=\"right\"\n        icon={select('우측 아이콘 2', ICON_LIST, 'route')}\n      />\n    </Navbar>\n  ))\n  .add('버튼 4개 (좌1+우3)', () => (\n    <Navbar\n      title={text('제목', '도쿄 관광지')}\n      borderless={boolean('Border 생략', true)}\n    >\n      <Navbar.Item icon={select('좌측 아이콘', ['back', 'close'], 'back')} />\n      <Navbar.Item\n        floated=\"right\"\n        icon={select('우측 아이콘 1', ICON_LIST, 'more')}\n      />\n      <Navbar.Item\n        floated=\"right\"\n        icon={select('우측 아이콘 2', ICON_LIST, 'route')}\n      />\n      <Navbar.Item\n        floated=\"right\"\n        icon={select('우측 아이콘 3', ICON_LIST, 'list')}\n      />\n    </Navbar>\n  ))\n  .add('보조 Navbar (리스트 필터링)', () => (\n    <>\n      <Navbar title={text('제목', '도쿄 관광지')} borderless>\n        <Navbar.Item icon={'back'} />\n        <Navbar.Item floated=\"right\" icon={'more'} />\n      </Navbar>\n      <Navbar.Secondary>\n        <ListingFilter>\n          <ListingFilter.FilterEntry active expanding>\n            전 지역\n          </ListingFilter.FilterEntry>\n        </ListingFilter>\n      </Navbar.Secondary>\n    </>\n  ))\n  .add('목차', () => (\n    <Navbar\n      renderTitle={() => (\n        <TOC>\n          <Text size=\"small\" bold alpha={1}>\n            도쿄에서 반드시 먹어봐야 할 음식\n          </Text>\n\n          <Text size=\"mini\" alpha={0.5} margin={{ top: 1 }}>\n            라멘\n          </Text>\n        </TOC>\n      )}\n    >\n      <Navbar.Item icon={'back'} />\n      <Navbar.Item floated=\"right\" icon={'more'} />\n    </Navbar>\n  ))\n  .add('backgroundColor=\"azul\" 적용', () => (\n    <Navbar borderless backgroundColor=\"azul\" title=\"컬러가 적용된 Navbar\">\n      <Navbar.Item icon={'back'} />\n      <Navbar.Item floated=\"right\" icon={'more'} />\n    </Navbar>\n  ))\n  .add('backgroundColor=\"teal\" 적용', () => (\n    <Navbar borderless backgroundColor=\"teal\" title=\"컬러가 적용된 Navbar\">\n      <Navbar.Item icon={'back'} />\n      <Navbar.Item floated=\"right\" icon={'more'} />\n    </Navbar>\n  ))\n  .add('검색', () => (\n    <SearchNavbar\n      inputPlaceholder={'“호텔예약” 도시이름으로 검색'}\n      onBackClick={action('onBackClick')}\n      onDeleteClick={action('onDeleteClick')}\n      onInputChange={action('onInputChange')}\n      onKeyUp={action('onKeyUp')}\n      onBlur={action('onBlur')}\n      onFocus={action('onFocus')}\n    />\n  ))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/core-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport styled from 'styled-components'\\nimport { storiesOf } from '@storybook/react'\\nimport { NumericSpinner } from '@titicaca/core-elements'\\n\\nstoriesOf('Core-Elements | NumericSpinner', module)\\n  .add('숙박 인원', () => (\\n    <NumericSpinner\\n      size=\\\"big\\\"\\n      label=\\\"성인\\\"\\n      min={1}\\n      max={8}\\n      value={2}\\n      padding={{ top: 15, right: 125, bottom: 15, left: 16 }}\\n    />\\n  ))\\n  .add('스타일 변경', () => {\\n    const NewStyledNumericSpinner = styled(NumericSpinner)`\\n      > div:first-child {\\n        color: red;\\n      }\\n    `\\n    return (\\n      <NewStyledNumericSpinner\\n        size=\\\"big\\\"\\n        label=\\\"성인\\\"\\n        min={1}\\n        max={8}\\n        value={2}\\n        padding={{ top: 15, right: 125, bottom: 15, left: 16 }}\\n      ></NewStyledNumericSpinner>\\n    )\\n  })\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"core-elements-numericspinner--스타일-변경\":{\"startLoc\":{\"col\":7,\"line\":17},\"endLoc\":{\"col\":3,\"line\":33},\"startBody\":{\"col\":17,\"line\":17},\"endBody\":{\"col\":3,\"line\":33}},\"core-elements-numericspinner--숙박-인원\":{\"startLoc\":{\"col\":7,\"line\":7},\"endLoc\":{\"col\":3,\"line\":16},\"startBody\":{\"col\":16,\"line\":7},\"endBody\":{\"col\":3,\"line\":16}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/numeric-spinner.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport styled from 'styled-components'\nimport { storiesOf } from '@storybook/react'\nimport { NumericSpinner } from '@titicaca/core-elements'\n\nstoriesOf('Core-Elements | NumericSpinner', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('숙박 인원', () => (\n    <NumericSpinner\n      size=\"big\"\n      label=\"성인\"\n      min={1}\n      max={8}\n      value={2}\n      padding={{ top: 15, right: 125, bottom: 15, left: 16 }}\n    />\n  ))\n  .add('스타일 변경', () => {\n    const NewStyledNumericSpinner = styled(NumericSpinner)`\n      > div:first-child {\n        color: red;\n      }\n    `\n    return (\n      <NewStyledNumericSpinner\n        size=\"big\"\n        label=\"성인\"\n        min={1}\n        max={8}\n        value={2}\n        padding={{ top: 15, right: 125, bottom: 15, left: 16 }}\n      ></NewStyledNumericSpinner>\n    )\n  })\n","import React, { useState } from 'react'\nimport { Radio } from '@titicaca/core-elements'\n\nexport default function RadioWrapper() {\n  const [value, setValue] = useState(undefined)\n\n  return (\n    <Radio\n      value={value}\n      name=\"지역_선택\"\n      options={[\n        {\n          text: '전 지역',\n          value: null,\n        },\n        {\n          text: '신주쿠',\n          value: '2',\n        },\n        {\n          text: '우에노',\n          value: '3',\n        },\n        {\n          text: '긴자',\n          value: '4',\n        },\n        {\n          text:\n            '아주 아주 아주 아주 아주 아주 아주 아주 아주 아주 아주 아주 아주 아주 아주 아주 긴 텍스트',\n          value: '5',\n        },\n      ]}\n      onChange={(e, value) => setValue(value)}\n    />\n  )\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/core-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { Rating } from '@titicaca/core-elements'\\nimport { number, select } from '@storybook/addon-knobs'\\n\\nstoriesOf('Core-Elements | Rating', module).add('리뷰점수', () => (\\n  <Rating\\n    size={select('크기', ['tiny', 'small', 'medium'])}\\n    score={number('점수', 5)}\\n  />\\n))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"core-elements-rating--리뷰점수\":{\"startLoc\":{\"col\":48,\"line\":6},\"endLoc\":{\"col\":1,\"line\":11},\"startBody\":{\"col\":56,\"line\":6},\"endBody\":{\"col\":1,\"line\":11}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/rating.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { Rating } from '@titicaca/core-elements'\nimport { number, select } from '@storybook/addon-knobs'\n\nstoriesOf('Core-Elements | Rating', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).add('리뷰점수', () => (\n  <Rating\n    size={select('크기', ['tiny', 'small', 'medium'])}\n    score={number('점수', 5)}\n  />\n))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/core-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { select } from '@storybook/addon-knobs'\\nimport { Section, Text } from '@titicaca/core-elements'\\n\\nstoriesOf('Core-Elements | Section', module).add('일반', () => (\\n  <Section divider={select('구분선', ['none', 'top', 'bottom'], 'none')}>\\n    <Text>\\n      기타노 이진칸 거리에 위치한 풍향계의 집은 1900년대에 독일인이 살았던\\n      저택이다. 기타노 지역에서 유일하게 벽돌로 만들어진 건물로, 지붕 꼭대기에\\n      있는 닭 모양의 풍향계가 유명하다. 풍향계의 집 내관은 독일의 전통 양식과\\n      20세기 전후의 아르누보 디자인으로 꾸며져 있다. 실내에는 각종 서양 가구 및\\n      생활용품들과 원래 주인의 가족 사진들이 전시되어 있다.\\n    </Text>\\n  </Section>\\n))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"core-elements-section--일반\":{\"startLoc\":{\"col\":49,\"line\":6},\"endLoc\":{\"col\":1,\"line\":16},\"startBody\":{\"col\":55,\"line\":6},\"endBody\":{\"col\":1,\"line\":16}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/section.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { select } from '@storybook/addon-knobs'\nimport { Section, Text } from '@titicaca/core-elements'\n\nstoriesOf('Core-Elements | Section', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).add('일반', () => (\n  <Section divider={select('구분선', ['none', 'top', 'bottom'], 'none')}>\n    <Text>\n      기타노 이진칸 거리에 위치한 풍향계의 집은 1900년대에 독일인이 살았던\n      저택이다. 기타노 지역에서 유일하게 벽돌로 만들어진 건물로, 지붕 꼭대기에\n      있는 닭 모양의 풍향계가 유명하다. 풍향계의 집 내관은 독일의 전통 양식과\n      20세기 전후의 아르누보 디자인으로 꾸며져 있다. 실내에는 각종 서양 가구 및\n      생활용품들과 원래 주인의 가족 사진들이 전시되어 있다.\n    </Text>\n  </Section>\n))\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs/blocks\";\n\nimport { Meta, Story, Preview } from '@storybook/addon-docs/blocks'\nimport { Card, Container } from '@titicaca/core-elements'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Core-Elements | Card\" component={Card} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"card\"\n    }}>{`Card`}</h1>\n    <p>{`Card 를 표현할때 사용하는 컴포넌트입니다.`}</p>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Basic\" mdxType=\"Story\">\n    <Container width={300} margin={{\n          bottom: 50\n        }} mdxType=\"Container\">\n      <Card mdxType=\"Card\">default card</Card>\n    </Container>\n  </Story>\n    </Preview>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Shadow Props\" mdxType=\"Story\">\n    {['small', 'medium', 'large'].map((item, i) => <Container key={item} width={300} margin={{\n          bottom: 50\n        }} mdxType=\"Container\">\n        <Card shadow={item} padding={{\n            top: 20,\n            left: 20,\n            right: 20,\n            bottom: 20\n          }} margin={{\n            top: i * 10 + 10,\n            bottom: i * 10 + 10\n          }} mdxType=\"Card\">\n          {item}/radius(default)\n        </Card>\n        <Card shadow={item} padding={{\n            top: 20,\n            left: 20,\n            right: 20,\n            bottom: 20\n          }} margin={{\n            top: i * 10 + 10,\n            bottom: i * 10 + 10\n          }} mdxType=\"Card\">\n          {item}/radius(default)\n        </Card>\n        <Card shadow={item} padding={{\n            top: 20,\n            left: 20,\n            right: 20,\n            bottom: 20\n          }} margin={{\n            top: i * 10 + 10,\n            bottom: i * 10 + 10\n          }} mdxType=\"Card\">\n          {item}/radius(default)\n        </Card>\n      </Container>)}\n  </Story>\n    </Preview>\n    <h2 {...{\n      \"id\": \"shadow-size\"\n    }}>{`Shadow Size`}</h2>\n    <Container width={200} mdxType=\"Container\">\n  <Card shadow=\"small\" padding={{\n        top: 20,\n        left: 20,\n        right: 20,\n        bottom: 20\n      }} margin={{\n        top: 10,\n        bottom: 10\n      }} mdxType=\"Card\">\n    shadow(small)\n  </Card>\n  <Card shadow=\"medium\" padding={{\n        top: 20,\n        left: 20,\n        right: 20,\n        bottom: 20\n      }} margin={{\n        top: 30,\n        bottom: 30\n      }} mdxType=\"Card\">\n    shadow(medium)\n  </Card>\n  <Card shadow=\"large\" padding={{\n        top: 20,\n        left: 20,\n        right: 20,\n        bottom: 20\n      }} margin={{\n        top: 50,\n        bottom: 50\n      }} mdxType=\"Card\">\n    shadow(large)\n  </Card>\n    </Container>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Card\n  shadow=\"small\"\n  padding={{ top: 20, left: 20, right: 20, bottom: 20 }}\n  margin={{ top: 10, bottom: 10 }}\n>\n  shadow(small)\n</Card>\n<Card\n  shadow=\"medium\"\n  padding={{ top: 20, left: 20, right: 20, bottom: 20 }}\n  margin={{ top: 30, bottom: 30 }}\n>\n  shadow(medium)\n</Card>\n<Card\n  shadow=\"large\"\n  padding={{ top: 20, left: 20, right: 20, bottom: 20 }}\n  margin={{ top: 50, bottom: 50 }}\n>\n  shadow(large)\n</Card>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"radius\"\n    }}>{`radius`}</h2>\n    <Card shadow=\"small\" radius={4} padding={{\n      top: 20,\n      left: 20,\n      right: 20,\n      bottom: 20\n    }} margin={{\n      top: 30,\n      bottom: 30\n    }} mdxType=\"Card\">\n  shadow(medium), radius(4)\n    </Card>\n    <Card shadow=\"medium\" radius={20} padding={{\n      top: 20,\n      left: 20,\n      right: 20,\n      bottom: 20\n    }} margin={{\n      top: 30,\n      bottom: 30\n    }} mdxType=\"Card\">\n  shadow(medium), radius(20)\n    </Card>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Card\n  shadow=\"small\"\n  radius={4}\n  padding={{ top: 20, left: 20, right: 20, bottom: 20 }}\n  margin={{ top: 30, bottom: 30 }}\n>\n  shadow(medium), radius(6)\n</Card>\n\n<Card\n  shadow=\"medium\"\n  radius={20}\n  padding={{ top: 20, left: 20, right: 20, bottom: 20 }}\n  margin={{ top: 30, bottom: 30 }}\n>\n  shadow(medium), radius(20)\n</Card>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h2>\n    <Card shadow=\"small\" padding={{\n      top: 10,\n      left: 10,\n      right: 10,\n      bottom: 10\n    }} onClick={() => {\n      alert('');\n    }} mdxType=\"Card\">\n  Click\n    </Card>\n    <h2 {...{\n      \"id\": \"container-shadow\"\n    }}>{`Container shadow`}</h2>\n    <Container shadow=\"small\" width={200} mdxType=\"Container\">\n  Container\n    </Container>\n    <Container shadow=\"large\" width={200} padding={{\n      top: 20,\n      left: 20,\n      right: 20,\n      bottom: 20\n    }} margin={{\n      top: 30,\n      bottom: 30\n    }} mdxType=\"Container\">\n  Container\n    </Container>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Container shadow=\"small\" width={200}>Container</Container>\n<Container shadow=\"large\" width={200}\n  padding={{ top: 20, left: 20, right: 20, bottom: 20 }}\n  margin={{ top: 30, bottom: 30 }}>Container</Container>\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const basic = () => (\n        <Container width={300} margin={{\n  bottom: 50\n}}>\n      <Card>default card</Card>\n    </Container>\n      );\nbasic.story = {};\nbasic.story.name = 'Basic';\nbasic.story.parameters = { mdxSource: '<Container width={300} margin={{\\n  bottom: 50\\n}}>\\n      <Card>default card</Card>\\n    </Container>' };\n\nexport const shadowProps = () => (\n        ['small', 'medium', 'large'].map((item, i) => <Container key={item} width={300} margin={{\n  bottom: 50\n}}>\n        <Card shadow={item} padding={{\n    top: 20,\n    left: 20,\n    right: 20,\n    bottom: 20\n  }} margin={{\n    top: i * 10 + 10,\n    bottom: i * 10 + 10\n  }}>\n          {item}/radius(default)\n        </Card>\n        <Card shadow={item} padding={{\n    top: 20,\n    left: 20,\n    right: 20,\n    bottom: 20\n  }} margin={{\n    top: i * 10 + 10,\n    bottom: i * 10 + 10\n  }}>\n          {item}/radius(default)\n        </Card>\n        <Card shadow={item} padding={{\n    top: 20,\n    left: 20,\n    right: 20,\n    bottom: 20\n  }} margin={{\n    top: i * 10 + 10,\n    bottom: i * 10 + 10\n  }}>\n          {item}/radius(default)\n        </Card>\n      </Container>)\n      );\nshadowProps.story = {};\nshadowProps.story.name = 'Shadow Props';\nshadowProps.story.parameters = { mdxSource: '[\\'small\\', \\'medium\\', \\'large\\'].map((item, i) => <Container key={item} width={300} margin={{\\n  bottom: 50\\n}}>\\n        <Card shadow={item} padding={{\\n    top: 20,\\n    left: 20,\\n    right: 20,\\n    bottom: 20\\n  }} margin={{\\n    top: i * 10 + 10,\\n    bottom: i * 10 + 10\\n  }}>\\n          {item}/radius(default)\\n        </Card>\\n        <Card shadow={item} padding={{\\n    top: 20,\\n    left: 20,\\n    right: 20,\\n    bottom: 20\\n  }} margin={{\\n    top: i * 10 + 10,\\n    bottom: i * 10 + 10\\n  }}>\\n          {item}/radius(default)\\n        </Card>\\n        <Card shadow={item} padding={{\\n    top: 20,\\n    left: 20,\\n    right: 20,\\n    bottom: 20\\n  }} margin={{\\n    top: i * 10 + 10,\\n    bottom: i * 10 + 10\\n  }}>\\n          {item}/radius(default)\\n        </Card>\\n      </Container>)' };\n\nconst componentMeta = { title: 'Core-Elements | Card', includeStories: [\"basic\",\"shadowProps\"],  };\n\nconst mdxStoryNameToKey = {\"Basic\":\"basic\",\"Shadow Props\":\"shadowProps\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentMeta={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/core-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport {\\n  Skeleton,\\n  SkeletonText,\\n  SkeletonCircle,\\n  SkeletonButton,\\n  Container,\\n} from '@titicaca/core-elements'\\n\\nexport default {\\n  title: 'core-elements | Skeleton',\\n}\\n\\nexport function BaseSkeleton() {\\n  return (\\n    <Container width=\\\"400px\\\" margin={{ top: 20, left: 20 }}>\\n      <Container margin={{ bottom: 50 }}>\\n        <Skeleton height=\\\"150px\\\" margin={{ bottom: 15 }} borderRadius={4} />\\n        <SkeletonText margin={{ bottom: 10 }} />\\n        <SkeletonText width=\\\"80%\\\" margin={{ bottom: 10 }} />\\n        <SkeletonButton />\\n      </Container>\\n      <Container>\\n        <SkeletonCircle margin={{ bottom: 15 }} />\\n        <SkeletonText margin={{ bottom: 10 }} />\\n        <SkeletonText width=\\\"80%\\\" margin={{ bottom: 10 }} />\\n      </Container>\\n    </Container>\\n  )\\n}\\n\\nBaseSkeleton.story = {\\n  name: '기본 스켈레톤',\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"core-elements-skeleton--base-skeleton\":{\"startLoc\":{\"col\":7,\"line\":14},\"endLoc\":{\"col\":1,\"line\":30},\"startBody\":{\"col\":7,\"line\":14},\"endBody\":{\"col\":1,\"line\":30}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/skeleton.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport {\n  Skeleton,\n  SkeletonText,\n  SkeletonCircle,\n  SkeletonButton,\n  Container,\n} from '@titicaca/core-elements'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport {\\n  Skeleton,\\n  SkeletonText,\\n  SkeletonCircle,\\n  SkeletonButton,\\n  Container,\\n} from '@titicaca/core-elements'\\n\\nexport default {\\n  title: 'core-elements | Skeleton',\\n}\\n\\nexport function BaseSkeleton() {\\n  return (\\n    <Container width=\\\"400px\\\" margin={{ top: 20, left: 20 }}>\\n      <Container margin={{ bottom: 50 }}>\\n        <Skeleton height=\\\"150px\\\" margin={{ bottom: 15 }} borderRadius={4} />\\n        <SkeletonText margin={{ bottom: 10 }} />\\n        <SkeletonText width=\\\"80%\\\" margin={{ bottom: 10 }} />\\n        <SkeletonButton />\\n      </Container>\\n      <Container>\\n        <SkeletonCircle margin={{ bottom: 15 }} />\\n        <SkeletonText margin={{ bottom: 10 }} />\\n        <SkeletonText width=\\\"80%\\\" margin={{ bottom: 10 }} />\\n      </Container>\\n    </Container>\\n  )\\n}\\n\\nBaseSkeleton.story = {\\n  name: '기본 스켈레톤',\\n}\\n\",\"locationsMap\":{\"core-elements-skeleton--base-skeleton\":{\"startLoc\":{\"col\":7,\"line\":14},\"endLoc\":{\"col\":1,\"line\":30},\"startBody\":{\"col\":7,\"line\":14},\"endBody\":{\"col\":1,\"line\":30}}}},},\n  title: 'core-elements | Skeleton',\n}\n\nexport const BaseSkeleton = addSourceDecorator(function BaseSkeleton() {\n  return (\n    <Container width=\"400px\" margin={{ top: 20, left: 20 }}>\n      <Container margin={{ bottom: 50 }}>\n        <Skeleton height=\"150px\" margin={{ bottom: 15 }} borderRadius={4} />\n        <SkeletonText margin={{ bottom: 10 }} />\n        <SkeletonText width=\"80%\" margin={{ bottom: 10 }} />\n        <SkeletonButton />\n      </Container>\n      <Container>\n        <SkeletonCircle margin={{ bottom: 15 }} />\n        <SkeletonText margin={{ bottom: 10 }} />\n        <SkeletonText width=\"80%\" margin={{ bottom: 10 }} />\n      </Container>\n    </Container>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nBaseSkeleton.story = {\n  name: '기본 스켈레톤',\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/core-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { boolean, text, number } from '@storybook/addon-knobs'\\nimport {\\n  Spinner,\\n  Text,\\n  Container,\\n  RollingSpinner,\\n} from '@titicaca/core-elements'\\n\\nexport default {\\n  title: 'Core-Elements | Spinner',\\n}\\n\\nconst TextElement = () => (\\n  <Container margin={{ top: 12 }}>\\n    <Text bold lineHeight={1.57}>\\n      {text('타이틀', '보이는 가격 그대로 결제!')}\\n    </Text>\\n    <Text lineHeight={1.57}>\\n      {text('서브 타이틀', '트리플 가격은 세금 및 봉사료 포함 가격입니다.')}\\n    </Text>\\n  </Container>\\n)\\n\\nexport function BaseSpinner() {\\n  return (\\n    <>\\n      <Text>겨울왕국</Text>\\n      <Spinner full={boolean('배경 채우기', false)}>\\n        {boolean('문구 노출', false) && <TextElement />}\\n      </Spinner>\\n    </>\\n  )\\n}\\n\\nBaseSpinner.story = {\\n  name: '기본 스피너',\\n}\\n\\nexport function BaseRollingSpinner() {\\n  const logos = [\\n    'https://triple-dev.titicaca-corp.com/air/static/images/airline-logos/7C.png',\\n    'https://triple-dev.titicaca-corp.com/air/static/images/airline-logos/TW.png',\\n    'https://triple-dev.titicaca-corp.com/air/static/images/airline-logos/AC.png',\\n  ]\\n  return (\\n    <RollingSpinner\\n      imageUrls={logos}\\n      duration={number('duration', 50)}\\n      size={number('size', 36)}\\n    >\\n      {boolean('children', false) ? (\\n        <Container textAlign=\\\"center\\\" margin={{ bottom: 20 }}>\\n          <Text size=\\\"huge\\\" lineHeight={1.29} bold>\\n            {`항공을 예약하면, \\\\n 나만의 여행일정이 생겨요!`}\\n          </Text>\\n          <Text size=\\\"small\\\" lineHeight={1.29} alpha={0.5} margin={{ top: 14 }}>\\n            {`200개 도시 무료가이드로 \\\\n 나머지 준비도 완성해보세요.`}\\n          </Text>\\n        </Container>\\n      ) : null}\\n    </RollingSpinner>\\n  )\\n}\\n\\nBaseRollingSpinner.story = {\\n  name: '롤링 스피너',\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"core-elements-spinner--base-spinner\":{\"startLoc\":{\"col\":7,\"line\":25},\"endLoc\":{\"col\":1,\"line\":34},\"startBody\":{\"col\":7,\"line\":25},\"endBody\":{\"col\":1,\"line\":34}},\"core-elements-spinner--base-rolling-spinner\":{\"startLoc\":{\"col\":7,\"line\":40},\"endLoc\":{\"col\":1,\"line\":64},\"startBody\":{\"col\":7,\"line\":40},\"endBody\":{\"col\":1,\"line\":64}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/spinner.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { boolean, text, number } from '@storybook/addon-knobs'\nimport {\n  Spinner,\n  Text,\n  Container,\n  RollingSpinner,\n} from '@titicaca/core-elements'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport { boolean, text, number } from '@storybook/addon-knobs'\\nimport {\\n  Spinner,\\n  Text,\\n  Container,\\n  RollingSpinner,\\n} from '@titicaca/core-elements'\\n\\nexport default {\\n  title: 'Core-Elements | Spinner',\\n}\\n\\nconst TextElement = () => (\\n  <Container margin={{ top: 12 }}>\\n    <Text bold lineHeight={1.57}>\\n      {text('타이틀', '보이는 가격 그대로 결제!')}\\n    </Text>\\n    <Text lineHeight={1.57}>\\n      {text('서브 타이틀', '트리플 가격은 세금 및 봉사료 포함 가격입니다.')}\\n    </Text>\\n  </Container>\\n)\\n\\nexport function BaseSpinner() {\\n  return (\\n    <>\\n      <Text>겨울왕국</Text>\\n      <Spinner full={boolean('배경 채우기', false)}>\\n        {boolean('문구 노출', false) && <TextElement />}\\n      </Spinner>\\n    </>\\n  )\\n}\\n\\nBaseSpinner.story = {\\n  name: '기본 스피너',\\n}\\n\\nexport function BaseRollingSpinner() {\\n  const logos = [\\n    'https://triple-dev.titicaca-corp.com/air/static/images/airline-logos/7C.png',\\n    'https://triple-dev.titicaca-corp.com/air/static/images/airline-logos/TW.png',\\n    'https://triple-dev.titicaca-corp.com/air/static/images/airline-logos/AC.png',\\n  ]\\n  return (\\n    <RollingSpinner\\n      imageUrls={logos}\\n      duration={number('duration', 50)}\\n      size={number('size', 36)}\\n    >\\n      {boolean('children', false) ? (\\n        <Container textAlign=\\\"center\\\" margin={{ bottom: 20 }}>\\n          <Text size=\\\"huge\\\" lineHeight={1.29} bold>\\n            {`항공을 예약하면, \\\\n 나만의 여행일정이 생겨요!`}\\n          </Text>\\n          <Text size=\\\"small\\\" lineHeight={1.29} alpha={0.5} margin={{ top: 14 }}>\\n            {`200개 도시 무료가이드로 \\\\n 나머지 준비도 완성해보세요.`}\\n          </Text>\\n        </Container>\\n      ) : null}\\n    </RollingSpinner>\\n  )\\n}\\n\\nBaseRollingSpinner.story = {\\n  name: '롤링 스피너',\\n}\\n\",\"locationsMap\":{\"core-elements-spinner--base-spinner\":{\"startLoc\":{\"col\":7,\"line\":25},\"endLoc\":{\"col\":1,\"line\":34},\"startBody\":{\"col\":7,\"line\":25},\"endBody\":{\"col\":1,\"line\":34}},\"core-elements-spinner--base-rolling-spinner\":{\"startLoc\":{\"col\":7,\"line\":40},\"endLoc\":{\"col\":1,\"line\":64},\"startBody\":{\"col\":7,\"line\":40},\"endBody\":{\"col\":1,\"line\":64}}}},},\n  title: 'Core-Elements | Spinner',\n}\n\nconst TextElement = () => (\n  <Container margin={{ top: 12 }}>\n    <Text bold lineHeight={1.57}>\n      {text('타이틀', '보이는 가격 그대로 결제!')}\n    </Text>\n    <Text lineHeight={1.57}>\n      {text('서브 타이틀', '트리플 가격은 세금 및 봉사료 포함 가격입니다.')}\n    </Text>\n  </Container>\n)\n\nexport const BaseSpinner = addSourceDecorator(function BaseSpinner() {\n  return (\n    <>\n      <Text>겨울왕국</Text>\n      <Spinner full={boolean('배경 채우기', false)}>\n        {boolean('문구 노출', false) && <TextElement />}\n      </Spinner>\n    </>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nBaseSpinner.story = {\n  name: '기본 스피너',\n}\n\nexport const BaseRollingSpinner = addSourceDecorator(function BaseRollingSpinner() {\n  const logos = [\n    'https://triple-dev.titicaca-corp.com/air/static/images/airline-logos/7C.png',\n    'https://triple-dev.titicaca-corp.com/air/static/images/airline-logos/TW.png',\n    'https://triple-dev.titicaca-corp.com/air/static/images/airline-logos/AC.png',\n  ]\n  return (\n    <RollingSpinner\n      imageUrls={logos}\n      duration={number('duration', 50)}\n      size={number('size', 36)}\n    >\n      {boolean('children', false) ? (\n        <Container textAlign=\"center\" margin={{ bottom: 20 }}>\n          <Text size=\"huge\" lineHeight={1.29} bold>\n            {`항공을 예약하면, \\n 나만의 여행일정이 생겨요!`}\n          </Text>\n          <Text size=\"small\" lineHeight={1.29} alpha={0.5} margin={{ top: 14 }}>\n            {`200개 도시 무료가이드로 \\n 나머지 준비도 완성해보세요.`}\n          </Text>\n        </Container>\n      ) : null}\n    </RollingSpinner>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nBaseRollingSpinner.story = {\n  name: '롤링 스피너',\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/core-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { Table } from '@titicaca/core-elements'\\n\\nimport SAMPLE from '../__mocks__/table.sample.json'\\n\\nstoriesOf('Core-Elements | Table', module)\\n  .add('가로 테이블', () => <Table {...SAMPLE[0]} />)\\n  .add('세로 테이블', () => <Table {...SAMPLE[1]} />)\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"core-elements-table--세로-테이블\":{\"startLoc\":{\"col\":7,\"line\":9},\"endLoc\":{\"col\":47,\"line\":9},\"startBody\":{\"col\":17,\"line\":9},\"endBody\":{\"col\":47,\"line\":9}},\"core-elements-table--가로-테이블\":{\"startLoc\":{\"col\":7,\"line\":8},\"endLoc\":{\"col\":47,\"line\":8},\"startBody\":{\"col\":17,\"line\":8},\"endBody\":{\"col\":47,\"line\":8}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/table.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { Table } from '@titicaca/core-elements'\n\nimport SAMPLE from '../__mocks__/table.sample.json'\n\nstoriesOf('Core-Elements | Table', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('가로 테이블', () => <Table {...SAMPLE[0]} />)\n  .add('세로 테이블', () => <Table {...SAMPLE[1]} />)\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/core-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { action } from '@storybook/addon-actions'\\nimport { select } from '@storybook/addon-knobs'\\nimport { Tabs } from '@titicaca/core-elements'\\n\\nstoriesOf('Core-Elements | Tabs', module)\\n  .add('이근처장소', () => (\\n    <Tabs\\n      value={select('현재 탭', ['attractions', 'restaurants'], 'attractions')}\\n      options={[\\n        { label: '관광지', value: 'attractions' },\\n        { label: '맛집', value: 'restaurants' },\\n      ]}\\n      onChange={action('change')}\\n    />\\n  ))\\n  .add('라인 탭', () => {\\n    const options = [\\n      { label: '투어티켓', value: '투어티켓' },\\n      { label: '호텔', value: '호텔' },\\n    ]\\n\\n    const options2 = [\\n      { label: '투어티켓1', value: '투어티켓' },\\n      { label: '호텔2', value: '호텔2' },\\n      { label: '투어티켓3', value: '투어티켓3' },\\n      { label: '호텔4', value: '호텔4' },\\n      { label: '투어티켓5', value: '투어티켓5' },\\n      { label: '호텔6', value: '호텔6' },\\n      { label: '투어티켓7', value: '투어티켓7' },\\n      { label: '호텔8', value: '호텔8' },\\n    ]\\n\\n    const values = options.map(({ value }) => value)\\n    const values2 = options2.map(({ value }) => value)\\n\\n    return (\\n      <>\\n        <Tabs\\n          type=\\\"pointing\\\"\\n          options={options}\\n          onChange={action('change')}\\n          value={select('버튼 크기', values, values[0])}\\n        />\\n        <br /> <br /> <br /> <br />\\n        <Tabs\\n          scroll\\n          type=\\\"pointing\\\"\\n          options={options2}\\n          onChange={action('change')}\\n          value={select('버튼 크기2', values2, values2[0])}\\n        />\\n      </>\\n    )\\n  })\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"core-elements-tabs--라인-탭\":{\"startLoc\":{\"col\":7,\"line\":18},\"endLoc\":{\"col\":3,\"line\":56},\"startBody\":{\"col\":15,\"line\":18},\"endBody\":{\"col\":3,\"line\":56}},\"core-elements-tabs--이근처장소\":{\"startLoc\":{\"col\":7,\"line\":8},\"endLoc\":{\"col\":3,\"line\":17},\"startBody\":{\"col\":16,\"line\":8},\"endBody\":{\"col\":3,\"line\":17}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/tabs.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\nimport { select } from '@storybook/addon-knobs'\nimport { Tabs } from '@titicaca/core-elements'\n\nstoriesOf('Core-Elements | Tabs', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('이근처장소', () => (\n    <Tabs\n      value={select('현재 탭', ['attractions', 'restaurants'], 'attractions')}\n      options={[\n        { label: '관광지', value: 'attractions' },\n        { label: '맛집', value: 'restaurants' },\n      ]}\n      onChange={action('change')}\n    />\n  ))\n  .add('라인 탭', () => {\n    const options = [\n      { label: '투어티켓', value: '투어티켓' },\n      { label: '호텔', value: '호텔' },\n    ]\n\n    const options2 = [\n      { label: '투어티켓1', value: '투어티켓' },\n      { label: '호텔2', value: '호텔2' },\n      { label: '투어티켓3', value: '투어티켓3' },\n      { label: '호텔4', value: '호텔4' },\n      { label: '투어티켓5', value: '투어티켓5' },\n      { label: '호텔6', value: '호텔6' },\n      { label: '투어티켓7', value: '투어티켓7' },\n      { label: '호텔8', value: '호텔8' },\n    ]\n\n    const values = options.map(({ value }) => value)\n    const values2 = options2.map(({ value }) => value)\n\n    return (\n      <>\n        <Tabs\n          type=\"pointing\"\n          options={options}\n          onChange={action('change')}\n          value={select('버튼 크기', values, values[0])}\n        />\n        <br /> <br /> <br /> <br />\n        <Tabs\n          scroll\n          type=\"pointing\"\n          options={options2}\n          onChange={action('change')}\n          value={select('버튼 크기2', values2, values2[0])}\n        />\n      </>\n    )\n  })\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs/blocks\";\n\nimport { Meta, Story, Preview } from '@storybook/addon-docs/blocks'\nimport { Text } from '@titicaca/core-elements'\nimport { action } from '@storybook/addon-actions'\nimport { select, text, boolean } from '@storybook/addon-knobs'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Core-Elements | Text\" component={Text} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"text\"\n    }}>{`Text`}</h1>\n    <p>{`Text 를 표현할때 사용하는 컴포넌트입니다.`}</p>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Basic\" mdxType=\"Story\">\n    <Text size={select('크기', ['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive'], 'tiny')} color={select('색깔', ['blue', 'gray', 'gray20', 'gray100', 'white'], 'gray')} center={boolean('중앙정렬')} textAlign={select('정렬', [undefined, 'left', 'center', 'right'])} onClick={action('clicked')} mdxType=\"Text\">\n      {text('텍스트', '호텔 최저가 보상!')}\n    </Text>\n  </Story>\n    </Preview>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Text size=\"medium\" color=\"blue\" onClick={() => 'clicked'}>\n  호텔 최저가 보상!\n</Text>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`size?: GlobalSizes | number\ntextStyle?: KeyOfTextStyleMap\nbold?: boolean\nalpha?: number\ncolor?: string\nfloated?: CSS.FloatProperty\nletterSpacing?: number\nlineHeight?: number | string\nwordBreak?: CSS.WordBreakProperty\nwhiteSpace?: CSS.WhiteSpaceProperty\ncenter?: boolean\ntextAlign?: CSS.TextAlignProperty\nunderline?: boolean\ninline?: boolean\ninlineBlock?: boolean\nmargin?: MarginPadding\npadding?: MarginPadding\nellipsis?: boolean\nmaxLines?: number\nstrikethrough?: boolean\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"size\"\n    }}>{`Size`}</h2>\n    <p>{`각 사이즈는 정해진 px 을 가지고 있습니다.`}</p>\n    <Text size=\"mini\" mdxType=\"Text\"> mini: 12px </Text>\n    <Text size=\"tiny\" mdxType=\"Text\"> tiny: 13px </Text>\n    <Text size=\"small\" mdxType=\"Text\"> small: 14px </Text>\n    <Text size=\"medium\" mdxType=\"Text\"> medium: 15px </Text>\n    <Text size=\"large\" mdxType=\"Text\"> large: 16px (default) </Text>\n    <Text size=\"big\" mdxType=\"Text\"> big: 19px </Text>\n    <Text size=\"huge\" mdxType=\"Text\"> huge: 21px </Text>\n    <Text size=\"massive\" mdxType=\"Text\"> massive: 24px </Text>\n    <Text size={50} mdxType=\"Text\">size={50}</Text>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Text size=\"mini\"> mini: 12px </Text>\n<Text size=\"tiny\"> tiny: 13px </Text>\n<Text size=\"small\"> small: 14px </Text>\n<Text size=\"medium\"> medium: 15px </Text>\n<Text size=\"large\"> large: 16px </Text>\n<Text>default size=\"large\"</Text>\n<Text size=\"big\"> big: 19px </Text>\n<Text size=\"huge\"> huge: 21px </Text>\n<Text size=\"massive\"> massive: 24px </Text>\n<Text size={50}>size={50}</Text>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"color\"\n    }}>{`Color`}</h2>\n    <Text size=\"big\" color=\"blue\" mdxType=\"Text\">\n  {' '}\n  color: blue{' '}\n    </Text>\n    <Text size=\"big\" color=\"gray\" mdxType=\"Text\">\n  {' '}\n  color: gray{' '}\n    </Text>\n    <Text size=\"big\" color=\"gray\" alpha={0.5} mdxType=\"Text\">\n  {' '}\n  color: gray alpha = 0.5{' '}\n    </Text>\n    <h2 {...{\n      \"id\": \"lineheight\"\n    }}>{`LineHeight`}</h2>\n    <Text style={{\n      border: '1px solid gray'\n    }} mdxType=\"Text\">\n  lineHeight default: 1.2 <br /> lineHeight\n    </Text>\n    <Text lineHeight={1.8} style={{\n      border: '1px solid gray'\n    }} mdxType=\"Text\">\n  lineHeight 1.8 <br /> lineHeight\n    </Text>\n    <Text lineHeight=\"50px\" style={{\n      border: '1px solid gray'\n    }} mdxType=\"Text\">\n  lineHeight 50px <br /> lineHeight\n    </Text>\n    <h2 {...{\n      \"id\": \"letterspacing\"\n    }}>{`LetterSpacing`}</h2>\n    <Text letterSpacing={5} mdxType=\"Text\">letterSpacing</Text>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Text letterSpacing={5}>letterSpacing</Text>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"textstyle\"\n    }}>{`TextStyle`}</h2>\n    <Text textStyle=\"L6\" mdxType=\"Text\">L6</Text>\n    <Text textStyle=\"M8\" mdxType=\"Text\">M8</Text>\n    <Text textStyle=\"M6\" mdxType=\"Text\">M6</Text>\n    <Text textStyle=\"M4\" mdxType=\"Text\">M4</Text>\n    <Text textStyle=\"M2\" mdxType=\"Text\">M2</Text>\n    <Text textStyle=\"M1\" mdxType=\"Text\">M1</Text>\n    <Text textStyle=\"M\" mdxType=\"Text\">M</Text>\n    <Text textStyle=\"S9\" mdxType=\"Text\">S9</Text>\n    <Text textStyle=\"S8\" mdxType=\"Text\">S8</Text>\n    <Text textStyle=\"S7\" mdxType=\"Text\">S7</Text>\n    <Text textStyle=\"S6\" mdxType=\"Text\">S6</Text>\n    <Text textStyle=\"S5\" mdxType=\"Text\">S5</Text>\n    <Text textStyle=\"S4\" mdxType=\"Text\">S4</Text>\n    <Text textStyle=\"S3\" mdxType=\"Text\">S3</Text>\n    <Text textStyle=\"S2\" mdxType=\"Text\">S2</Text>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Text textStyle=\"L6\">textStyle=\"L6\"</Text>\n<Text textStyle=\"M8\">textStyle=\"M8\"</Text>\n<Text textStyle=\"M6\">textStyle=\"M6\"</Text>\n<Text textStyle=\"M4\">textStyle=\"M4\"</Text>\n<Text textStyle=\"M2\">textStyle=\"M2\"</Text>\n<Text textStyle=\"M1\">textStyle=\"M1\"</Text>\n<Text textStyle=\"M\">textStyle=\"M\"</Text>\n<Text textStyle=\"S9\">textStyle=\"S9\"</Text>\n<Text textStyle=\"S8\">textStyle=\"S8\"</Text>\n<Text textStyle=\"S7\">textStyle=\"S7\"</Text>\n<Text textStyle=\"S6\">textStyle=\"S6\"</Text>\n<Text textStyle=\"S5\">textStyle=\"S5\"</Text>\n<Text textStyle=\"S4\">textStyle=\"S4\"</Text>\n<Text textStyle=\"S3\">textStyle=\"S3\"</Text>\n<Text textStyle=\"S2\">textStyle=\"S2\"</Text>\n`}</code></pre>\n    <Text textStyle=\"M8\" mdxType=\"Text\">서비스메인, 도시메인 타이틀</Text>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Text textStyle=\"M8\">서비스메인, 도시메인 타이틀</Text>\n`}</code></pre>\n    <Text size=\"tiny\" textStyle=\"S2\" mdxType=\"Text\">\n  Tiny Size Text\n    </Text>\n    <blockquote>\n      <p parentName=\"blockquote\"><inlineCode parentName=\"p\">{`size`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`lineHeight`}</inlineCode>{` 과 같은 기존 `}<inlineCode parentName=\"p\">{`props`}</inlineCode>{` 을 함께 사용할 경우 `}<inlineCode parentName=\"p\">{`textStyle`}</inlineCode>{` 이 최종 적용됩니다.`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Text size=\"tiny\" lineHeight={1.5} textStyle=\"S2\">\n  Tiny Size Text\n</Text>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"textalign\"\n    }}>{`TextAlign`}</h2>\n    <p><inlineCode parentName=\"p\">{`center`}</inlineCode>{` 는 deprecated property 입니다. (`}<inlineCode parentName=\"p\">{`textAlign`}</inlineCode>{` 이 없을때만 동작합니다.)`}</p>\n    <Text center margin={{\n      bottom: 10\n    }} style={{\n      border: '1px solid gray'\n    }} mdxType=\"Text\">\n  center\n    </Text>\n    <Text center textAlign=\"right\" margin={{\n      bottom: 10\n    }} style={{\n      border: '1px solid gray'\n    }} mdxType=\"Text\">\n  center and textAlign right\n    </Text>\n    <Text textAlign=\"center\" margin={{\n      bottom: 10\n    }} style={{\n      border: '1px solid gray'\n    }} mdxType=\"Text\">\n  textAlign center\n    </Text>\n    <Text center style={{\n      border: '1px solid gray'\n    }} mdxType=\"Text\">\n  center\n  <Text textAlign=\"left\" style={{\n        border: '1px solid lightgray'\n      }} mdxType=\"Text\">\n    textAlign left\n  </Text>\n    </Text>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Text center>center</Text>\n<Text center textAlign=\"right\">center textAlign=\"right\"</Text>\n<Text textAlign=\"center\">textAlign=\"center\"</Text>\n<Text center>\n  center\n  <Text textAlign=\"left\">textAlign=\"left\"</Text>\n</Text>\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const basic = () => (\n        <Text size={select('크기', ['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive'], 'tiny')} color={select('색깔', ['blue', 'gray', 'gray20', 'gray100', 'white'], 'gray')} center={boolean('중앙정렬')} textAlign={select('정렬', [undefined, 'left', 'center', 'right'])} onClick={action('clicked')}>\n      {text('텍스트', '호텔 최저가 보상!')}\n    </Text>\n      );\nbasic.story = {};\nbasic.story.name = 'Basic';\nbasic.story.parameters = { mdxSource: '<Text size={select(\\'크기\\', [\\'mini\\', \\'tiny\\', \\'small\\', \\'medium\\', \\'large\\', \\'big\\', \\'huge\\', \\'massive\\'], \\'tiny\\')} color={select(\\'색깔\\', [\\'blue\\', \\'gray\\', \\'gray20\\', \\'gray100\\', \\'white\\'], \\'gray\\')} center={boolean(\\'중앙정렬\\')} textAlign={select(\\'정렬\\', [undefined, \\'left\\', \\'center\\', \\'right\\'])} onClick={action(\\'clicked\\')}>\\n      {text(\\'텍스트\\', \\'호텔 최저가 보상!\\')}\\n    </Text>' };\n\nconst componentMeta = { title: 'Core-Elements | Text', includeStories: [\"basic\"],  };\n\nconst mdxStoryNameToKey = {\"Basic\":\"basic\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentMeta={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/core-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { number, text, select, boolean } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport { Tooltip, Navbar } from '@titicaca/core-elements'\\nimport styled from 'styled-components'\\n\\nconst Base = styled.div`\\n  position: relative;\\n  margin: 50px;\\n  border: solid 1px black;\\n  padding: 10px;\\n`\\n\\nstoriesOf('Core-Elements | Tooltip', module)\\n  .add('기본', () => (\\n    <Base>\\n      툴팁 표시 대상\\n      <Tooltip\\n        label={text('내용', '모든 호텔 보기')}\\n        borderRadius={text('border radius')}\\n        hasShadow={boolean('그림자 표시')}\\n        onClick={boolean('클릭 가능') ? action('툴팁 클릭') : undefined}\\n        positioning={\\n          boolean('위치 절대값 사용')\\n            ? {\\n                top: number('top'),\\n                right: number('right'),\\n                bottom: number('bottom'),\\n                left: number('left'),\\n              }\\n            : undefined\\n        }\\n        pointing={{\\n          vertical: select('포인팅 상하 위치', ['top', 'bottom'], 'bottom'),\\n          horizontal: select('포인팅 좌우 위치', ['left', 'right'], 'left'),\\n          horizontalOffset: number('포인팅 가로 오프셋', 26),\\n        }}\\n        backgroundColor={select(\\n          '툴팁 색',\\n          ['rgba(13, 208, 175, 1)', '#368fff'],\\n          'rgba(13, 208, 175, 1)',\\n        )}\\n        nowrap={boolean('텍스트 줄바꿈 없음', false)}\\n      />\\n    </Base>\\n  ))\\n  .add('가격', () => (\\n    <Base>\\n      툴팁 표시 대상\\n      <Tooltip\\n        borderRadius=\\\"30\\\"\\n        positioning={{ top: -12 }}\\n        label={text('툴팁 라벨', '쿠폰사용시 -15,000원 더 할인!')}\\n        onClick={action('툴팁 클릭')}\\n      />\\n    </Base>\\n  ))\\n  .add('호텔 목록 아이콘', () => (\\n    <Navbar>\\n      <Navbar.Item floated=\\\"right\\\" icon=\\\"list\\\" position=\\\"relative\\\">\\n        <Tooltip\\n          label={`${text('리전 이름', '호찌민')} 모든 호텔 보기`}\\n          borderRadius={12}\\n          positioning={{\\n            bottom: -25,\\n            right: -14,\\n          }}\\n          pointing={{\\n            vertical: 'top',\\n            horizontal: 'right',\\n            horizontalOffset: 24,\\n          }}\\n          hasShadow={true}\\n          backgroundColor=\\\"#368fff\\\"\\n          nowrap={true}\\n        />\\n      </Navbar.Item>\\n    </Navbar>\\n  ))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"core-elements-tooltip--호텔-목록-아이콘\":{\"startLoc\":{\"col\":7,\"line\":59},\"endLoc\":{\"col\":3,\"line\":80},\"startBody\":{\"col\":20,\"line\":59},\"endBody\":{\"col\":3,\"line\":80}},\"core-elements-tooltip--가격\":{\"startLoc\":{\"col\":7,\"line\":48},\"endLoc\":{\"col\":3,\"line\":58},\"startBody\":{\"col\":13,\"line\":48},\"endBody\":{\"col\":3,\"line\":58}},\"core-elements-tooltip--기본\":{\"startLoc\":{\"col\":7,\"line\":16},\"endLoc\":{\"col\":3,\"line\":47},\"startBody\":{\"col\":13,\"line\":16},\"endBody\":{\"col\":3,\"line\":47}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/tooltip.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { number, text, select, boolean } from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\nimport { Tooltip, Navbar } from '@titicaca/core-elements'\nimport styled from 'styled-components'\n\nconst Base = styled.div`\n  position: relative;\n  margin: 50px;\n  border: solid 1px black;\n  padding: 10px;\n`\n\nstoriesOf('Core-Elements | Tooltip', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('기본', () => (\n    <Base>\n      툴팁 표시 대상\n      <Tooltip\n        label={text('내용', '모든 호텔 보기')}\n        borderRadius={text('border radius')}\n        hasShadow={boolean('그림자 표시')}\n        onClick={boolean('클릭 가능') ? action('툴팁 클릭') : undefined}\n        positioning={\n          boolean('위치 절대값 사용')\n            ? {\n                top: number('top'),\n                right: number('right'),\n                bottom: number('bottom'),\n                left: number('left'),\n              }\n            : undefined\n        }\n        pointing={{\n          vertical: select('포인팅 상하 위치', ['top', 'bottom'], 'bottom'),\n          horizontal: select('포인팅 좌우 위치', ['left', 'right'], 'left'),\n          horizontalOffset: number('포인팅 가로 오프셋', 26),\n        }}\n        backgroundColor={select(\n          '툴팁 색',\n          ['rgba(13, 208, 175, 1)', '#368fff'],\n          'rgba(13, 208, 175, 1)',\n        )}\n        nowrap={boolean('텍스트 줄바꿈 없음', false)}\n      />\n    </Base>\n  ))\n  .add('가격', () => (\n    <Base>\n      툴팁 표시 대상\n      <Tooltip\n        borderRadius=\"30\"\n        positioning={{ top: -12 }}\n        label={text('툴팁 라벨', '쿠폰사용시 -15,000원 더 할인!')}\n        onClick={action('툴팁 클릭')}\n      />\n    </Base>\n  ))\n  .add('호텔 목록 아이콘', () => (\n    <Navbar>\n      <Navbar.Item floated=\"right\" icon=\"list\" position=\"relative\">\n        <Tooltip\n          label={`${text('리전 이름', '호찌민')} 모든 호텔 보기`}\n          borderRadius={12}\n          positioning={{\n            bottom: -25,\n            right: -14,\n          }}\n          pointing={{\n            vertical: 'top',\n            horizontal: 'right',\n            horizontalOffset: 24,\n          }}\n          hasShadow={true}\n          backgroundColor=\"#368fff\"\n          nowrap={true}\n        />\n      </Navbar.Item>\n    </Navbar>\n  ))\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs/blocks\";\n\nimport { Meta, Story, Preview } from '@storybook/addon-docs/blocks'\nimport { boolean, select, text } from '@storybook/addon-knobs'\nimport { Video } from '@titicaca/core-elements'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Core-Elements | Video\" component={Video} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"video\"\n    }}>{`Video`}</h1>\n    <p>{`영상을 표현하기 위해 사용하는 컴포넌트입니다.`}</p>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"비디오 with Autoplay\" mdxType=\"Story\">\n    {boolean('Visible', true) ? <Video autoPlay frame={select('Frame', ['mini', 'small', 'medium', 'large', 'big', 'huge'], 'small')} src={text('URL', 'https://media.triple.guide/triple-dev/video/upload/c_fill,h_256,w_256,f_auto/580e50be-d1d5-4ad8-a477-ad13f4faec9d.mp4')} fallbackImageUrl={text('Fallback URL', 'https://media.triple.guide/triple-dev/video/upload/c_limit,f_auto,h_1024,w_1024/580e50be-d1d5-4ad8-a477-ad13f4faec9d.jpeg')} cloudinaryId={text('Cloudinary ID', '580e50be-d1d5-4ad8-a477-ad13f4faec9d')} cloudinaryBucket={text('Cloudinary Bucket', 'triple-dev')} mdxType=\"Video\" /> : <div>Hidden</div>}\n  </Story>\n  <Story name=\"비디오 without Autoplay\" mdxType=\"Story\">\n    {boolean('Visible', true) ? <Video frame={select('Frame', ['mini', 'small', 'medium', 'large', 'big', 'huge'], 'small')} src={text('URL', 'https://media.triple.guide/triple-dev/video/upload/c_fill,h_256,w_256,f_auto/580e50be-d1d5-4ad8-a477-ad13f4faec9d.mp4')} fallbackImageUrl={text('Fallback URL', 'https://media.triple.guide/triple-dev/video/upload/c_limit,f_auto,h_1024,w_1024/580e50be-d1d5-4ad8-a477-ad13f4faec9d.jpeg')} cloudinaryId={text('Cloudinary ID', '580e50be-d1d5-4ad8-a477-ad13f4faec9d')} cloudinaryBucket={text('Cloudinary Bucket', 'triple-dev')} mdxType=\"Video\" /> : <div>Hidden</div>}\n  </Story>\n    </Preview>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Video\n  frame=\"medium\"\n  src=\"https://media.triple.guide/triple-dev/video/upload/c_fill,h_256,w_256,f_auto/580e50be-d1d5-4ad8-a477-ad13f4faec9d.mp4\"\n  fallbackImageUrl=\"https://media.triple.guide/triple-dev/video/upload/c_limit,f_auto,h_1024,w_1024/580e50be-d1d5-4ad8-a477-ad13f4faec9d.jpeg\"\n  cloudinaryId=\"580e50be-d1d5-4ad8-a477-ad13f4faec9d\"\n  cloudinaryBucket=\"triple-dev\"\n/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`frame: GlobalSizes`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`\"mini\"`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`\"small\"`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`\"medium\"`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`\"large\"`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`\"big\"`}</inlineCode>{`,\n`}<inlineCode parentName=\"li\">{`\"huge\"`}</inlineCode>{` 중 하나의 값을 가집니다.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`src: string`}</inlineCode>{`: 비디오 원본의 URL입니다.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`srcType: string`}</inlineCode>{`: 비디오 원본의 Content-Type입니다.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fallbackImageUrl: string`}</inlineCode>{`: 브라우저가 비디오를 지원하지 않거나, 파일이\n로딩 전일 때 보일 이미지 URL입니다.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cloudinaryBucket? string`}</inlineCode>{`: Cloudinary Bucket 이름입니다.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cloudinaryId: string`}</inlineCode>{`: 비디오 파일의 Cloudinary ID입니다.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"url-generation\"\n    }}>{`URL Generation`}</h2>\n    <p><inlineCode parentName=\"p\">{`cloudinaryBucket`}</inlineCode>{`과 `}<inlineCode parentName=\"p\">{`cloudinaryId`}</inlineCode>{`가 모두 주어진 경우, `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{`의 값이 있더라도\n그 값을 무시하고 `}<inlineCode parentName=\"p\">{`frame`}</inlineCode>{` 크기에 맞는 동영상을 렌더링합니다.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const 비디오WithAutoplay = () => (\n        boolean('Visible', true) ? <Video autoPlay frame={select('Frame', ['mini', 'small', 'medium', 'large', 'big', 'huge'], 'small')} src={text('URL', 'https://media.triple.guide/triple-dev/video/upload/c_fill,h_256,w_256,f_auto/580e50be-d1d5-4ad8-a477-ad13f4faec9d.mp4')} fallbackImageUrl={text('Fallback URL', 'https://media.triple.guide/triple-dev/video/upload/c_limit,f_auto,h_1024,w_1024/580e50be-d1d5-4ad8-a477-ad13f4faec9d.jpeg')} cloudinaryId={text('Cloudinary ID', '580e50be-d1d5-4ad8-a477-ad13f4faec9d')} cloudinaryBucket={text('Cloudinary Bucket', 'triple-dev')} /> : <div>Hidden</div>\n      );\n비디오WithAutoplay.story = {};\n비디오WithAutoplay.story.name = '비디오 with Autoplay';\n비디오WithAutoplay.story.parameters = { mdxSource: 'boolean(\\'Visible\\', true) ? <Video autoPlay frame={select(\\'Frame\\', [\\'mini\\', \\'small\\', \\'medium\\', \\'large\\', \\'big\\', \\'huge\\'], \\'small\\')} src={text(\\'URL\\', \\'https://media.triple.guide/triple-dev/video/upload/c_fill,h_256,w_256,f_auto/580e50be-d1d5-4ad8-a477-ad13f4faec9d.mp4\\')} fallbackImageUrl={text(\\'Fallback URL\\', \\'https://media.triple.guide/triple-dev/video/upload/c_limit,f_auto,h_1024,w_1024/580e50be-d1d5-4ad8-a477-ad13f4faec9d.jpeg\\')} cloudinaryId={text(\\'Cloudinary ID\\', \\'580e50be-d1d5-4ad8-a477-ad13f4faec9d\\')} cloudinaryBucket={text(\\'Cloudinary Bucket\\', \\'triple-dev\\')} /> : <div>Hidden</div>' };\n\nexport const 비디오WithoutAutoplay = () => (\n        boolean('Visible', true) ? <Video frame={select('Frame', ['mini', 'small', 'medium', 'large', 'big', 'huge'], 'small')} src={text('URL', 'https://media.triple.guide/triple-dev/video/upload/c_fill,h_256,w_256,f_auto/580e50be-d1d5-4ad8-a477-ad13f4faec9d.mp4')} fallbackImageUrl={text('Fallback URL', 'https://media.triple.guide/triple-dev/video/upload/c_limit,f_auto,h_1024,w_1024/580e50be-d1d5-4ad8-a477-ad13f4faec9d.jpeg')} cloudinaryId={text('Cloudinary ID', '580e50be-d1d5-4ad8-a477-ad13f4faec9d')} cloudinaryBucket={text('Cloudinary Bucket', 'triple-dev')} /> : <div>Hidden</div>\n      );\n비디오WithoutAutoplay.story = {};\n비디오WithoutAutoplay.story.name = '비디오 without Autoplay';\n비디오WithoutAutoplay.story.parameters = { mdxSource: 'boolean(\\'Visible\\', true) ? <Video frame={select(\\'Frame\\', [\\'mini\\', \\'small\\', \\'medium\\', \\'large\\', \\'big\\', \\'huge\\'], \\'small\\')} src={text(\\'URL\\', \\'https://media.triple.guide/triple-dev/video/upload/c_fill,h_256,w_256,f_auto/580e50be-d1d5-4ad8-a477-ad13f4faec9d.mp4\\')} fallbackImageUrl={text(\\'Fallback URL\\', \\'https://media.triple.guide/triple-dev/video/upload/c_limit,f_auto,h_1024,w_1024/580e50be-d1d5-4ad8-a477-ad13f4faec9d.jpeg\\')} cloudinaryId={text(\\'Cloudinary ID\\', \\'580e50be-d1d5-4ad8-a477-ad13f4faec9d\\')} cloudinaryBucket={text(\\'Cloudinary Bucket\\', \\'triple-dev\\')} /> : <div>Hidden</div>' };\n\nconst componentMeta = { title: 'Core-Elements | Video', includeStories: [\"비디오WithAutoplay\",\"비디오WithoutAutoplay\"],  };\n\nconst mdxStoryNameToKey = {\"비디오 with Autoplay\":\"비디오WithAutoplay\",\"비디오 without Autoplay\":\"비디오WithoutAutoplay\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentMeta={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/date-picker\";\n// @ts-ignore\nvar __STORY__ = \"import React, { useState } from 'react'\\nimport {\\n  date,\\n  array,\\n  text,\\n  number,\\n  button,\\n  boolean,\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport { DayPicker, RangePicker } from '@titicaca/date-picker'\\n\\n/**\\n * 유효한 날짜인지 확인하는 함수\\n */\\nfunction checkValidDate(date: string) {\\n  return !isNaN(new Date(date).getTime())\\n}\\n\\n/**\\n * ISO8601 날짜 포맷으로 되었는지 확인하는 함수\\n */\\nfunction checkValidISODateFormat(date: string) {\\n  return /^\\\\d{4}-\\\\d{2}-\\\\d{2}$/.test(date)\\n}\\n\\n/**\\n * 한자리수 숫자를 0으로 채워 두자리로 만들어주는 함수\\n */\\nfunction formatPaddedNumber(num: number) {\\n  if (num < 10) {\\n    return `0${num}`\\n  }\\n  return num.toString()\\n}\\n\\n/**\\n * YYYY-MM-DD 형식으로 포맷팅하는 함수\\n */\\nfunction formatDate(date: Date) {\\n  return `${date.getFullYear()}-${formatPaddedNumber(\\n    date.getMonth() + 1,\\n  )}-${formatPaddedNumber(date.getDate())}`\\n}\\n\\n/**\\n * prop에 undefined를 넣을 수 있게 해주는 react hook\\n */\\nfunction useOptionalKnob({\\n  name,\\n  knob,\\n  initialVisibility,\\n  initialValue,\\n  extraKnobParams,\\n}: {\\n  name: string\\n  knob: Function\\n  initialVisibility?: boolean\\n  initialValue: any\\n  extraKnobParams?: any\\n}) {\\n  return boolean(`${name} 활성화`, initialVisibility || false)\\n    ? knob(name, initialValue, ...(extraKnobParams || []))\\n    : undefined\\n}\\n\\nconst today = new Date()\\n\\nconst initialAfterBlock = new Date(\\n  today.getFullYear(),\\n  today.getMonth(),\\n  today.getDate() + 20,\\n)\\n\\nconst initialDisabledDates = [new Date(), new Date()]\\n  .map((date, index) => date.setDate(date.getDate() + index + 1))\\n  .map((offset) => new Date(offset))\\n  .map(formatDate)\\n\\nconst initialHolidays = [\\n  new Date().setDate(1),\\n  new Date().setDate(12),\\n  new Date().setDate(25),\\n]\\n  .map((offset) => new Date(offset))\\n  .map((date) => formatDate(date))\\n\\nexport default {\\n  title: 'date-picker | DatePicker',\\n}\\n\\nexport function DayPickerStory() {\\n  const [selectedDate, setSelectedDate] = useState<string | null>(null)\\n  const beforeBlock = useOptionalKnob({\\n    name: 'beforeBlock',\\n    knob: date,\\n    initialValue: today,\\n  })\\n  const afterBlock = useOptionalKnob({\\n    name: 'afterBlock',\\n    knob: date,\\n    initialValue: initialAfterBlock,\\n  })\\n  const disabledDays = useOptionalKnob({\\n    name: 'disabledDays',\\n    knob: array,\\n    initialValue: initialDisabledDates,\\n    extraKnobParams: ['\\\\n'],\\n  })\\n\\n  button('날짜 선택 리셋', () => {\\n    setSelectedDate(null)\\n  })\\n\\n  return (\\n    <DayPicker\\n      day={selectedDate}\\n      onDateChange={(date) => {\\n        action('날짜 선택')(date)\\n        setSelectedDate(date.toISOString())\\n      }}\\n      beforeBlock={beforeBlock ? new Date(beforeBlock) : undefined}\\n      afterBlock={afterBlock ? new Date(afterBlock) : undefined}\\n      disabledDays={\\n        disabledDays\\n          ? disabledDays.filter(checkValidISODateFormat).filter(checkValidDate)\\n          : undefined\\n      }\\n      height={text('높이', '300px')}\\n      publicHolidays={array('공휴일', initialHolidays, '\\\\n')\\n        .filter(checkValidDate)\\n        .map((date) => new Date(date))}\\n      numberOfMonths={number('표시할 개월 수', 3)}\\n    />\\n  )\\n}\\n\\nDayPickerStory.story = {\\n  name: '단일 날짜 선택 컴포넌트',\\n}\\n\\nexport function RangePickerStory() {\\n  const [{ startDate, endDate }, setDateRange] = useState<{\\n    startDate: string | null\\n    endDate: string | null\\n  }>({\\n    startDate: null,\\n    endDate: null,\\n  })\\n\\n  const beforeBlock = useOptionalKnob({\\n    name: 'beforeBlock',\\n    knob: date,\\n    initialValue: today,\\n  })\\n  const afterBlock = useOptionalKnob({\\n    name: 'afterBlock',\\n    knob: date,\\n    initialValue: initialAfterBlock,\\n  })\\n  const disabledDays = useOptionalKnob({\\n    name: 'disabledDays',\\n    knob: array,\\n    initialValue: initialDisabledDates,\\n    extraKnobParams: ['\\\\n'],\\n  })\\n\\n  button('날짜 선택 리셋', () => {\\n    setDateRange({\\n      startDate: null,\\n      endDate: null,\\n    })\\n  })\\n\\n  return (\\n    <RangePicker\\n      startDate={startDate}\\n      endDate={endDate}\\n      startDateLabel={text('startDateLabel', '출국일')}\\n      endDateLabel={text('endDateLabel', '귀국일')}\\n      sameDateLabel={text('sameDateLabel', '당일 왕복')}\\n      onDatesChange={({ startDate, endDate, nights }) => {\\n        action('날짜 선택')({ startDate, endDate, nights })\\n        setDateRange({ startDate, endDate })\\n      }}\\n      beforeBlock={beforeBlock ? new Date(beforeBlock) : undefined}\\n      afterBlock={afterBlock ? new Date(afterBlock) : undefined}\\n      disabledDays={\\n        disabledDays\\n          ? disabledDays.filter(checkValidISODateFormat).filter(checkValidDate)\\n          : undefined\\n      }\\n      publicHolidays={array('공휴일', initialHolidays, '\\\\n')\\n        .filter(checkValidDate)\\n        .map((date) => new Date(date))}\\n      numberOfMonths={number('표시할 개월 수', 3)}\\n      height={text('높이', '300px')}\\n      enableSameDay={boolean('enableSameDay 활성화', false)}\\n    />\\n  )\\n}\\n\\nRangePickerStory.story = {\\n  name: '날짜 구간 선택 컴포넌트',\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"date-picker-datepicker--day-picker-story\":{\"startLoc\":{\"col\":7,\"line\":92},\"endLoc\":{\"col\":1,\"line\":136},\"startBody\":{\"col\":7,\"line\":92},\"endBody\":{\"col\":1,\"line\":136}},\"date-picker-datepicker--range-picker-story\":{\"startLoc\":{\"col\":7,\"line\":142},\"endLoc\":{\"col\":1,\"line\":201},\"startBody\":{\"col\":7,\"line\":142},\"endBody\":{\"col\":1,\"line\":201}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/date-picker.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React, { useState } from 'react'\nimport {\n  date,\n  array,\n  text,\n  number,\n  button,\n  boolean,\n} from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\nimport { DayPicker, RangePicker } from '@titicaca/date-picker'\n\n/**\n * 유효한 날짜인지 확인하는 함수\n */\nfunction checkValidDate(date: string) {\n  return !isNaN(new Date(date).getTime())\n}\n\n/**\n * ISO8601 날짜 포맷으로 되었는지 확인하는 함수\n */\nfunction checkValidISODateFormat(date: string) {\n  return /^\\d{4}-\\d{2}-\\d{2}$/.test(date)\n}\n\n/**\n * 한자리수 숫자를 0으로 채워 두자리로 만들어주는 함수\n */\nfunction formatPaddedNumber(num: number) {\n  if (num < 10) {\n    return `0${num}`\n  }\n  return num.toString()\n}\n\n/**\n * YYYY-MM-DD 형식으로 포맷팅하는 함수\n */\nfunction formatDate(date: Date) {\n  return `${date.getFullYear()}-${formatPaddedNumber(\n    date.getMonth() + 1,\n  )}-${formatPaddedNumber(date.getDate())}`\n}\n\n/**\n * prop에 undefined를 넣을 수 있게 해주는 react hook\n */\nfunction useOptionalKnob({\n  name,\n  knob,\n  initialVisibility,\n  initialValue,\n  extraKnobParams,\n}: {\n  name: string\n  knob: Function\n  initialVisibility?: boolean\n  initialValue: any\n  extraKnobParams?: any\n}) {\n  return boolean(`${name} 활성화`, initialVisibility || false)\n    ? knob(name, initialValue, ...(extraKnobParams || []))\n    : undefined\n}\n\nconst today = new Date()\n\nconst initialAfterBlock = new Date(\n  today.getFullYear(),\n  today.getMonth(),\n  today.getDate() + 20,\n)\n\nconst initialDisabledDates = [new Date(), new Date()]\n  .map((date, index) => date.setDate(date.getDate() + index + 1))\n  .map((offset) => new Date(offset))\n  .map(formatDate)\n\nconst initialHolidays = [\n  new Date().setDate(1),\n  new Date().setDate(12),\n  new Date().setDate(25),\n]\n  .map((offset) => new Date(offset))\n  .map((date) => formatDate(date))\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React, { useState } from 'react'\\nimport {\\n  date,\\n  array,\\n  text,\\n  number,\\n  button,\\n  boolean,\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport { DayPicker, RangePicker } from '@titicaca/date-picker'\\n\\n/**\\n * 유효한 날짜인지 확인하는 함수\\n */\\nfunction checkValidDate(date: string) {\\n  return !isNaN(new Date(date).getTime())\\n}\\n\\n/**\\n * ISO8601 날짜 포맷으로 되었는지 확인하는 함수\\n */\\nfunction checkValidISODateFormat(date: string) {\\n  return /^\\\\d{4}-\\\\d{2}-\\\\d{2}$/.test(date)\\n}\\n\\n/**\\n * 한자리수 숫자를 0으로 채워 두자리로 만들어주는 함수\\n */\\nfunction formatPaddedNumber(num: number) {\\n  if (num < 10) {\\n    return `0${num}`\\n  }\\n  return num.toString()\\n}\\n\\n/**\\n * YYYY-MM-DD 형식으로 포맷팅하는 함수\\n */\\nfunction formatDate(date: Date) {\\n  return `${date.getFullYear()}-${formatPaddedNumber(\\n    date.getMonth() + 1,\\n  )}-${formatPaddedNumber(date.getDate())}`\\n}\\n\\n/**\\n * prop에 undefined를 넣을 수 있게 해주는 react hook\\n */\\nfunction useOptionalKnob({\\n  name,\\n  knob,\\n  initialVisibility,\\n  initialValue,\\n  extraKnobParams,\\n}: {\\n  name: string\\n  knob: Function\\n  initialVisibility?: boolean\\n  initialValue: any\\n  extraKnobParams?: any\\n}) {\\n  return boolean(`${name} 활성화`, initialVisibility || false)\\n    ? knob(name, initialValue, ...(extraKnobParams || []))\\n    : undefined\\n}\\n\\nconst today = new Date()\\n\\nconst initialAfterBlock = new Date(\\n  today.getFullYear(),\\n  today.getMonth(),\\n  today.getDate() + 20,\\n)\\n\\nconst initialDisabledDates = [new Date(), new Date()]\\n  .map((date, index) => date.setDate(date.getDate() + index + 1))\\n  .map((offset) => new Date(offset))\\n  .map(formatDate)\\n\\nconst initialHolidays = [\\n  new Date().setDate(1),\\n  new Date().setDate(12),\\n  new Date().setDate(25),\\n]\\n  .map((offset) => new Date(offset))\\n  .map((date) => formatDate(date))\\n\\nexport default {\\n  title: 'date-picker | DatePicker',\\n}\\n\\nexport function DayPickerStory() {\\n  const [selectedDate, setSelectedDate] = useState<string | null>(null)\\n  const beforeBlock = useOptionalKnob({\\n    name: 'beforeBlock',\\n    knob: date,\\n    initialValue: today,\\n  })\\n  const afterBlock = useOptionalKnob({\\n    name: 'afterBlock',\\n    knob: date,\\n    initialValue: initialAfterBlock,\\n  })\\n  const disabledDays = useOptionalKnob({\\n    name: 'disabledDays',\\n    knob: array,\\n    initialValue: initialDisabledDates,\\n    extraKnobParams: ['\\\\n'],\\n  })\\n\\n  button('날짜 선택 리셋', () => {\\n    setSelectedDate(null)\\n  })\\n\\n  return (\\n    <DayPicker\\n      day={selectedDate}\\n      onDateChange={(date) => {\\n        action('날짜 선택')(date)\\n        setSelectedDate(date.toISOString())\\n      }}\\n      beforeBlock={beforeBlock ? new Date(beforeBlock) : undefined}\\n      afterBlock={afterBlock ? new Date(afterBlock) : undefined}\\n      disabledDays={\\n        disabledDays\\n          ? disabledDays.filter(checkValidISODateFormat).filter(checkValidDate)\\n          : undefined\\n      }\\n      height={text('높이', '300px')}\\n      publicHolidays={array('공휴일', initialHolidays, '\\\\n')\\n        .filter(checkValidDate)\\n        .map((date) => new Date(date))}\\n      numberOfMonths={number('표시할 개월 수', 3)}\\n    />\\n  )\\n}\\n\\nDayPickerStory.story = {\\n  name: '단일 날짜 선택 컴포넌트',\\n}\\n\\nexport function RangePickerStory() {\\n  const [{ startDate, endDate }, setDateRange] = useState<{\\n    startDate: string | null\\n    endDate: string | null\\n  }>({\\n    startDate: null,\\n    endDate: null,\\n  })\\n\\n  const beforeBlock = useOptionalKnob({\\n    name: 'beforeBlock',\\n    knob: date,\\n    initialValue: today,\\n  })\\n  const afterBlock = useOptionalKnob({\\n    name: 'afterBlock',\\n    knob: date,\\n    initialValue: initialAfterBlock,\\n  })\\n  const disabledDays = useOptionalKnob({\\n    name: 'disabledDays',\\n    knob: array,\\n    initialValue: initialDisabledDates,\\n    extraKnobParams: ['\\\\n'],\\n  })\\n\\n  button('날짜 선택 리셋', () => {\\n    setDateRange({\\n      startDate: null,\\n      endDate: null,\\n    })\\n  })\\n\\n  return (\\n    <RangePicker\\n      startDate={startDate}\\n      endDate={endDate}\\n      startDateLabel={text('startDateLabel', '출국일')}\\n      endDateLabel={text('endDateLabel', '귀국일')}\\n      sameDateLabel={text('sameDateLabel', '당일 왕복')}\\n      onDatesChange={({ startDate, endDate, nights }) => {\\n        action('날짜 선택')({ startDate, endDate, nights })\\n        setDateRange({ startDate, endDate })\\n      }}\\n      beforeBlock={beforeBlock ? new Date(beforeBlock) : undefined}\\n      afterBlock={afterBlock ? new Date(afterBlock) : undefined}\\n      disabledDays={\\n        disabledDays\\n          ? disabledDays.filter(checkValidISODateFormat).filter(checkValidDate)\\n          : undefined\\n      }\\n      publicHolidays={array('공휴일', initialHolidays, '\\\\n')\\n        .filter(checkValidDate)\\n        .map((date) => new Date(date))}\\n      numberOfMonths={number('표시할 개월 수', 3)}\\n      height={text('높이', '300px')}\\n      enableSameDay={boolean('enableSameDay 활성화', false)}\\n    />\\n  )\\n}\\n\\nRangePickerStory.story = {\\n  name: '날짜 구간 선택 컴포넌트',\\n}\\n\",\"locationsMap\":{\"date-picker-datepicker--day-picker-story\":{\"startLoc\":{\"col\":7,\"line\":92},\"endLoc\":{\"col\":1,\"line\":136},\"startBody\":{\"col\":7,\"line\":92},\"endBody\":{\"col\":1,\"line\":136}},\"date-picker-datepicker--range-picker-story\":{\"startLoc\":{\"col\":7,\"line\":142},\"endLoc\":{\"col\":1,\"line\":201},\"startBody\":{\"col\":7,\"line\":142},\"endBody\":{\"col\":1,\"line\":201}}}},},\n  title: 'date-picker | DatePicker',\n}\n\nexport const DayPickerStory = addSourceDecorator(function DayPickerStory() {\n  const [selectedDate, setSelectedDate] = useState<string | null>(null)\n  const beforeBlock = useOptionalKnob({\n    name: 'beforeBlock',\n    knob: date,\n    initialValue: today,\n  })\n  const afterBlock = useOptionalKnob({\n    name: 'afterBlock',\n    knob: date,\n    initialValue: initialAfterBlock,\n  })\n  const disabledDays = useOptionalKnob({\n    name: 'disabledDays',\n    knob: array,\n    initialValue: initialDisabledDates,\n    extraKnobParams: ['\\n'],\n  })\n\n  button('날짜 선택 리셋', () => {\n    setSelectedDate(null)\n  })\n\n  return (\n    <DayPicker\n      day={selectedDate}\n      onDateChange={(date) => {\n        action('날짜 선택')(date)\n        setSelectedDate(date.toISOString())\n      }}\n      beforeBlock={beforeBlock ? new Date(beforeBlock) : undefined}\n      afterBlock={afterBlock ? new Date(afterBlock) : undefined}\n      disabledDays={\n        disabledDays\n          ? disabledDays.filter(checkValidISODateFormat).filter(checkValidDate)\n          : undefined\n      }\n      height={text('높이', '300px')}\n      publicHolidays={array('공휴일', initialHolidays, '\\n')\n        .filter(checkValidDate)\n        .map((date) => new Date(date))}\n      numberOfMonths={number('표시할 개월 수', 3)}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nDayPickerStory.story = {\n  name: '단일 날짜 선택 컴포넌트',\n}\n\nexport const RangePickerStory = addSourceDecorator(function RangePickerStory() {\n  const [{ startDate, endDate }, setDateRange] = useState<{\n    startDate: string | null\n    endDate: string | null\n  }>({\n    startDate: null,\n    endDate: null,\n  })\n\n  const beforeBlock = useOptionalKnob({\n    name: 'beforeBlock',\n    knob: date,\n    initialValue: today,\n  })\n  const afterBlock = useOptionalKnob({\n    name: 'afterBlock',\n    knob: date,\n    initialValue: initialAfterBlock,\n  })\n  const disabledDays = useOptionalKnob({\n    name: 'disabledDays',\n    knob: array,\n    initialValue: initialDisabledDates,\n    extraKnobParams: ['\\n'],\n  })\n\n  button('날짜 선택 리셋', () => {\n    setDateRange({\n      startDate: null,\n      endDate: null,\n    })\n  })\n\n  return (\n    <RangePicker\n      startDate={startDate}\n      endDate={endDate}\n      startDateLabel={text('startDateLabel', '출국일')}\n      endDateLabel={text('endDateLabel', '귀국일')}\n      sameDateLabel={text('sameDateLabel', '당일 왕복')}\n      onDatesChange={({ startDate, endDate, nights }) => {\n        action('날짜 선택')({ startDate, endDate, nights })\n        setDateRange({ startDate, endDate })\n      }}\n      beforeBlock={beforeBlock ? new Date(beforeBlock) : undefined}\n      afterBlock={afterBlock ? new Date(afterBlock) : undefined}\n      disabledDays={\n        disabledDays\n          ? disabledDays.filter(checkValidISODateFormat).filter(checkValidDate)\n          : undefined\n      }\n      publicHolidays={array('공휴일', initialHolidays, '\\n')\n        .filter(checkValidDate)\n        .map((date) => new Date(date))}\n      numberOfMonths={number('표시할 개월 수', 3)}\n      height={text('높이', '300px')}\n      enableSameDay={boolean('enableSameDay 활성화', false)}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nRangePickerStory.story = {\n  name: '날짜 구간 선택 컴포넌트',\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/date-picker\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { StoryFn } from '@storybook/addons'\\nimport { array } from '@storybook/addon-knobs'\\nimport styled from 'styled-components'\\nimport PickerFrame, {\\n  generateSelectedCircleStyle,\\n  rangeStyle,\\n  generateDateLabelStyle,\\n} from '@titicaca/date-picker/lib/picker-frame'\\n\\nconst Table = styled.table`\\n  table-layout: fixed;\\n  border-collapse: separate;\\n  border-spacing: 8px;\\n  text-align: center;\\n  empty-cells: show;\\n\\n  td {\\n    width: auto !important;\\n  }\\n`\\n\\nexport default {\\n  title: 'date-picker | 날짜 스타일',\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <PickerFrame height=\\\"500px\\\" sideSpacing={10} monthPadding=\\\"0\\\">\\n        <div className=\\\"DayPicker\\\">\\n          <Table className=\\\"DayPicker-Month\\\">{storyFn()}</Table>\\n        </div>\\n      </PickerFrame>\\n    ),\\n  ],\\n}\\n\\nexport function common() {\\n  return (\\n    <tbody className=\\\"DayPicker-Body\\\">\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>기본</td>\\n        <td className=\\\"DayPicker-Day\\\">1</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--disabled\\\">2</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--saturday\\\">3</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--sunday\\\">4</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--publicHolidays\\\">5</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--today\\\">6</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected\\\">7</td>\\n      </tr>\\n\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>outside</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside\\\" />\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--disabled\\\" />\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--saturday\\\" />\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--sunday\\\" />\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--publicHolidays\\\" />\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--today\\\" />\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--selected\\\" />\\n      </tr>\\n\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>오늘</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--today\\\">1</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--today DayPicker-Day--disabled\\\">\\n          2\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--today DayPicker-Day--saturday\\\">\\n          3\\n        </td>\\n      </tr>\\n\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>knob</td>\\n        <td\\n          className={[\\n            'DayPicker-Day',\\n            ...array('조건', ['']).map((type) => `DayPicker-Day--${type}`),\\n          ].join(' ')}\\n        >\\n          42\\n        </td>\\n      </tr>\\n    </tbody>\\n  )\\n}\\n\\nexport function dayPicker() {\\n  return (\\n    <>\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>selected</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected\\\">1</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--disabled\\\">\\n          2\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--saturday\\\">\\n          3\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--sunday\\\">\\n          4\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--publicHolidays\\\">\\n          5\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--today\\\">\\n          6\\n        </td>\\n      </tr>\\n\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>knob</td>\\n        <td\\n          className={[\\n            'DayPicker-Day',\\n            ...array('조건', ['']).map((type) => `DayPicker-Day--${type}`),\\n          ].join(' ')}\\n        >\\n          42\\n        </td>\\n      </tr>\\n    </>\\n  )\\n}\\n\\nconst DayContainer = styled.tbody`\\n  ${generateSelectedCircleStyle('.DayPicker-Day--selected')}\\n`\\n\\ndayPicker.story = {\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <DayContainer className=\\\"DayPicker-Body\\\">{storyFn()}</DayContainer>\\n    ),\\n  ],\\n}\\n\\nexport function rangePicker() {\\n  return (\\n    <>\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>outside 구간</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--from DayPicker-Day--selected DayPicker-Day--included-range\\\"></td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--publicHolidays DayPicker-Day--outside DayPicker-Day--selected DayPicker-Day--included-range\\\"></td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--disabled DayPicker-Day--outside DayPicker-Day--selected DayPicker-Day--included-range\\\"></td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--today DayPicker-Day--selected DayPicker-Day--included-range\\\"></td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--today DayPicker-Day--publicHolidays  DayPicker-Day--selected DayPicker-Day--included-range\\\"></td>\\n      </tr>\\n\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>구간</td>\\n\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected\\\">1</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--disabled\\\">\\n          2\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--saturday\\\">\\n          3\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--sunday\\\">\\n          4\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--publicHolidays\\\">\\n          5\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--today\\\">\\n          6\\n        </td>\\n      </tr>\\n\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>from, to</td>\\n        <td></td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--from\\\">\\n          1\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--to\\\">\\n          2\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--from DayPicker-Day--to\\\">\\n          3\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--from DayPicker-Day--saturday\\\">\\n          4\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--from DayPicker-Day--today\\\">\\n          5\\n        </td>\\n      </tr>\\n\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>knob</td>\\n        <td\\n          className={[\\n            'DayPicker-Day',\\n            ...array('조건', ['']).map((type) => `DayPicker-Day--${type}`),\\n          ].join(' ')}\\n        >\\n          42\\n        </td>\\n      </tr>\\n    </>\\n  )\\n}\\n\\nconst RangeContainer = styled.tbody`\\n  ${generateSelectedCircleStyle('.DayPicker-Day--from,.DayPicker-Day--to')}\\n\\n  ${rangeStyle}\\n\\n  ${generateDateLabelStyle('.DayPicker-Day--from', '출발일')}\\n\\n  ${generateDateLabelStyle('.DayPicker-Day--to', '귀국일')}\\n\\n  ${generateDateLabelStyle(\\n    '.DayPicker-Day--from.DayPicker-Day--to',\\n    '당일왕복',\\n  )}\\n`\\n\\nrangePicker.story = {\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <RangeContainer className=\\\"DayPicker-Body\\\">{storyFn()}</RangeContainer>\\n    ),\\n  ],\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"date-picker-날짜-스타일--common\":{\"startLoc\":{\"col\":7,\"line\":36},\"endLoc\":{\"col\":1,\"line\":85},\"startBody\":{\"col\":7,\"line\":36},\"endBody\":{\"col\":1,\"line\":85}},\"date-picker-날짜-스타일--day-picker\":{\"startLoc\":{\"col\":7,\"line\":87},\"endLoc\":{\"col\":1,\"line\":123},\"startBody\":{\"col\":7,\"line\":87},\"endBody\":{\"col\":1,\"line\":123}},\"date-picker-날짜-스타일--range-picker\":{\"startLoc\":{\"col\":7,\"line\":137},\"endLoc\":{\"col\":1,\"line\":203},\"startBody\":{\"col\":7,\"line\":137},\"endBody\":{\"col\":1,\"line\":203}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/date-styles.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { StoryFn } from '@storybook/addons'\nimport { array } from '@storybook/addon-knobs'\nimport styled from 'styled-components'\nimport PickerFrame, {\n  generateSelectedCircleStyle,\n  rangeStyle,\n  generateDateLabelStyle,\n} from '@titicaca/date-picker/lib/picker-frame'\n\nconst Table = styled.table`\n  table-layout: fixed;\n  border-collapse: separate;\n  border-spacing: 8px;\n  text-align: center;\n  empty-cells: show;\n\n  td {\n    width: auto !important;\n  }\n`\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport { StoryFn } from '@storybook/addons'\\nimport { array } from '@storybook/addon-knobs'\\nimport styled from 'styled-components'\\nimport PickerFrame, {\\n  generateSelectedCircleStyle,\\n  rangeStyle,\\n  generateDateLabelStyle,\\n} from '@titicaca/date-picker/lib/picker-frame'\\n\\nconst Table = styled.table`\\n  table-layout: fixed;\\n  border-collapse: separate;\\n  border-spacing: 8px;\\n  text-align: center;\\n  empty-cells: show;\\n\\n  td {\\n    width: auto !important;\\n  }\\n`\\n\\nexport default {\\n  title: 'date-picker | 날짜 스타일',\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <PickerFrame height=\\\"500px\\\" sideSpacing={10} monthPadding=\\\"0\\\">\\n        <div className=\\\"DayPicker\\\">\\n          <Table className=\\\"DayPicker-Month\\\">{storyFn()}</Table>\\n        </div>\\n      </PickerFrame>\\n    ),\\n  ],\\n}\\n\\nexport function common() {\\n  return (\\n    <tbody className=\\\"DayPicker-Body\\\">\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>기본</td>\\n        <td className=\\\"DayPicker-Day\\\">1</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--disabled\\\">2</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--saturday\\\">3</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--sunday\\\">4</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--publicHolidays\\\">5</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--today\\\">6</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected\\\">7</td>\\n      </tr>\\n\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>outside</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside\\\" />\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--disabled\\\" />\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--saturday\\\" />\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--sunday\\\" />\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--publicHolidays\\\" />\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--today\\\" />\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--selected\\\" />\\n      </tr>\\n\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>오늘</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--today\\\">1</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--today DayPicker-Day--disabled\\\">\\n          2\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--today DayPicker-Day--saturday\\\">\\n          3\\n        </td>\\n      </tr>\\n\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>knob</td>\\n        <td\\n          className={[\\n            'DayPicker-Day',\\n            ...array('조건', ['']).map((type) => `DayPicker-Day--${type}`),\\n          ].join(' ')}\\n        >\\n          42\\n        </td>\\n      </tr>\\n    </tbody>\\n  )\\n}\\n\\nexport function dayPicker() {\\n  return (\\n    <>\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>selected</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected\\\">1</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--disabled\\\">\\n          2\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--saturday\\\">\\n          3\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--sunday\\\">\\n          4\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--publicHolidays\\\">\\n          5\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--today\\\">\\n          6\\n        </td>\\n      </tr>\\n\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>knob</td>\\n        <td\\n          className={[\\n            'DayPicker-Day',\\n            ...array('조건', ['']).map((type) => `DayPicker-Day--${type}`),\\n          ].join(' ')}\\n        >\\n          42\\n        </td>\\n      </tr>\\n    </>\\n  )\\n}\\n\\nconst DayContainer = styled.tbody`\\n  ${generateSelectedCircleStyle('.DayPicker-Day--selected')}\\n`\\n\\ndayPicker.story = {\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <DayContainer className=\\\"DayPicker-Body\\\">{storyFn()}</DayContainer>\\n    ),\\n  ],\\n}\\n\\nexport function rangePicker() {\\n  return (\\n    <>\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>outside 구간</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--from DayPicker-Day--selected DayPicker-Day--included-range\\\"></td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--publicHolidays DayPicker-Day--outside DayPicker-Day--selected DayPicker-Day--included-range\\\"></td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--disabled DayPicker-Day--outside DayPicker-Day--selected DayPicker-Day--included-range\\\"></td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--today DayPicker-Day--selected DayPicker-Day--included-range\\\"></td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--today DayPicker-Day--publicHolidays  DayPicker-Day--selected DayPicker-Day--included-range\\\"></td>\\n      </tr>\\n\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>구간</td>\\n\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected\\\">1</td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--disabled\\\">\\n          2\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--saturday\\\">\\n          3\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--sunday\\\">\\n          4\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--publicHolidays\\\">\\n          5\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--today\\\">\\n          6\\n        </td>\\n      </tr>\\n\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>from, to</td>\\n        <td></td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--from\\\">\\n          1\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--to\\\">\\n          2\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--from DayPicker-Day--to\\\">\\n          3\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--from DayPicker-Day--saturday\\\">\\n          4\\n        </td>\\n        <td className=\\\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--from DayPicker-Day--today\\\">\\n          5\\n        </td>\\n      </tr>\\n\\n      <tr className=\\\"DayPicker-Week\\\">\\n        <td>knob</td>\\n        <td\\n          className={[\\n            'DayPicker-Day',\\n            ...array('조건', ['']).map((type) => `DayPicker-Day--${type}`),\\n          ].join(' ')}\\n        >\\n          42\\n        </td>\\n      </tr>\\n    </>\\n  )\\n}\\n\\nconst RangeContainer = styled.tbody`\\n  ${generateSelectedCircleStyle('.DayPicker-Day--from,.DayPicker-Day--to')}\\n\\n  ${rangeStyle}\\n\\n  ${generateDateLabelStyle('.DayPicker-Day--from', '출발일')}\\n\\n  ${generateDateLabelStyle('.DayPicker-Day--to', '귀국일')}\\n\\n  ${generateDateLabelStyle(\\n    '.DayPicker-Day--from.DayPicker-Day--to',\\n    '당일왕복',\\n  )}\\n`\\n\\nrangePicker.story = {\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <RangeContainer className=\\\"DayPicker-Body\\\">{storyFn()}</RangeContainer>\\n    ),\\n  ],\\n}\\n\",\"locationsMap\":{\"date-picker-날짜-스타일--common\":{\"startLoc\":{\"col\":7,\"line\":36},\"endLoc\":{\"col\":1,\"line\":85},\"startBody\":{\"col\":7,\"line\":36},\"endBody\":{\"col\":1,\"line\":85}},\"date-picker-날짜-스타일--day-picker\":{\"startLoc\":{\"col\":7,\"line\":87},\"endLoc\":{\"col\":1,\"line\":123},\"startBody\":{\"col\":7,\"line\":87},\"endBody\":{\"col\":1,\"line\":123}},\"date-picker-날짜-스타일--range-picker\":{\"startLoc\":{\"col\":7,\"line\":137},\"endLoc\":{\"col\":1,\"line\":203},\"startBody\":{\"col\":7,\"line\":137},\"endBody\":{\"col\":1,\"line\":203}}}},},\n  title: 'date-picker | 날짜 스타일',\n  decorators: [\n    (storyFn: StoryFn<JSX.Element>) => (\n      <PickerFrame height=\"500px\" sideSpacing={10} monthPadding=\"0\">\n        <div className=\"DayPicker\">\n          <Table className=\"DayPicker-Month\">{storyFn()}</Table>\n        </div>\n      </PickerFrame>\n    ),\n  ],\n}\n\nexport const common = addSourceDecorator(function common() {\n  return (\n    <tbody className=\"DayPicker-Body\">\n      <tr className=\"DayPicker-Week\">\n        <td>기본</td>\n        <td className=\"DayPicker-Day\">1</td>\n        <td className=\"DayPicker-Day DayPicker-Day--disabled\">2</td>\n        <td className=\"DayPicker-Day DayPicker-Day--saturday\">3</td>\n        <td className=\"DayPicker-Day DayPicker-Day--sunday\">4</td>\n        <td className=\"DayPicker-Day DayPicker-Day--publicHolidays\">5</td>\n        <td className=\"DayPicker-Day DayPicker-Day--today\">6</td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected\">7</td>\n      </tr>\n\n      <tr className=\"DayPicker-Week\">\n        <td>outside</td>\n        <td className=\"DayPicker-Day DayPicker-Day--outside\" />\n        <td className=\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--disabled\" />\n        <td className=\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--saturday\" />\n        <td className=\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--sunday\" />\n        <td className=\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--publicHolidays\" />\n        <td className=\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--today\" />\n        <td className=\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--selected\" />\n      </tr>\n\n      <tr className=\"DayPicker-Week\">\n        <td>오늘</td>\n        <td className=\"DayPicker-Day DayPicker-Day--today\">1</td>\n        <td className=\"DayPicker-Day DayPicker-Day--today DayPicker-Day--disabled\">\n          2\n        </td>\n        <td className=\"DayPicker-Day DayPicker-Day--today DayPicker-Day--saturday\">\n          3\n        </td>\n      </tr>\n\n      <tr className=\"DayPicker-Week\">\n        <td>knob</td>\n        <td\n          className={[\n            'DayPicker-Day',\n            ...array('조건', ['']).map((type) => `DayPicker-Day--${type}`),\n          ].join(' ')}\n        >\n          42\n        </td>\n      </tr>\n    </tbody>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nexport const dayPicker = addSourceDecorator(function dayPicker() {\n  return (\n    <>\n      <tr className=\"DayPicker-Week\">\n        <td>selected</td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected\">1</td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--disabled\">\n          2\n        </td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--saturday\">\n          3\n        </td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--sunday\">\n          4\n        </td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--publicHolidays\">\n          5\n        </td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--today\">\n          6\n        </td>\n      </tr>\n\n      <tr className=\"DayPicker-Week\">\n        <td>knob</td>\n        <td\n          className={[\n            'DayPicker-Day',\n            ...array('조건', ['']).map((type) => `DayPicker-Day--${type}`),\n          ].join(' ')}\n        >\n          42\n        </td>\n      </tr>\n    </>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nconst DayContainer = styled.tbody`\n  ${generateSelectedCircleStyle('.DayPicker-Day--selected')}\n`\n\ndayPicker.story = {\n  decorators: [\n    (storyFn: StoryFn<JSX.Element>) => (\n      <DayContainer className=\"DayPicker-Body\">{storyFn()}</DayContainer>\n    ),\n  ],\n}\n\nexport const rangePicker = addSourceDecorator(function rangePicker() {\n  return (\n    <>\n      <tr className=\"DayPicker-Week\">\n        <td>outside 구간</td>\n        <td className=\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--from DayPicker-Day--selected DayPicker-Day--included-range\"></td>\n        <td className=\"DayPicker-Day DayPicker-Day--publicHolidays DayPicker-Day--outside DayPicker-Day--selected DayPicker-Day--included-range\"></td>\n        <td className=\"DayPicker-Day DayPicker-Day--disabled DayPicker-Day--outside DayPicker-Day--selected DayPicker-Day--included-range\"></td>\n        <td className=\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--today DayPicker-Day--selected DayPicker-Day--included-range\"></td>\n        <td className=\"DayPicker-Day DayPicker-Day--outside DayPicker-Day--today DayPicker-Day--publicHolidays  DayPicker-Day--selected DayPicker-Day--included-range\"></td>\n      </tr>\n\n      <tr className=\"DayPicker-Week\">\n        <td>구간</td>\n\n        <td className=\"DayPicker-Day DayPicker-Day--selected\">1</td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--disabled\">\n          2\n        </td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--saturday\">\n          3\n        </td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--sunday\">\n          4\n        </td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--publicHolidays\">\n          5\n        </td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--today\">\n          6\n        </td>\n      </tr>\n\n      <tr className=\"DayPicker-Week\">\n        <td>from, to</td>\n        <td></td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--from\">\n          1\n        </td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--to\">\n          2\n        </td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--from DayPicker-Day--to\">\n          3\n        </td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--from DayPicker-Day--saturday\">\n          4\n        </td>\n        <td className=\"DayPicker-Day DayPicker-Day--selected DayPicker-Day--from DayPicker-Day--today\">\n          5\n        </td>\n      </tr>\n\n      <tr className=\"DayPicker-Week\">\n        <td>knob</td>\n        <td\n          className={[\n            'DayPicker-Day',\n            ...array('조건', ['']).map((type) => `DayPicker-Day--${type}`),\n          ].join(' ')}\n        >\n          42\n        </td>\n      </tr>\n    </>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nconst RangeContainer = styled.tbody`\n  ${generateSelectedCircleStyle('.DayPicker-Day--from,.DayPicker-Day--to')}\n\n  ${rangeStyle}\n\n  ${generateDateLabelStyle('.DayPicker-Day--from', '출발일')}\n\n  ${generateDateLabelStyle('.DayPicker-Day--to', '귀국일')}\n\n  ${generateDateLabelStyle(\n    '.DayPicker-Day--from.DayPicker-Day--to',\n    '당일왕복',\n  )}\n`\n\nrangePicker.story = {\n  decorators: [\n    (storyFn: StoryFn<JSX.Element>) => (\n      <RangeContainer className=\"DayPicker-Body\">{storyFn()}</RangeContainer>\n    ),\n  ],\n}\n","\nimport React from 'react'\nimport styled from 'styled-components'\nimport { action } from '@storybook/addon-actions'\nimport { text, boolean } from '@storybook/addon-knobs'\nimport { StoryFn } from '@storybook/addons'\nimport { HistoryProvider } from '@titicaca/react-contexts'\nimport DirectionsFinder from '@titicaca/directions-finder'\n\nconst LongPage = styled.div`\n  height: 4000px;\n`\n\nexport default {\n  title: 'directions-finder | DirectionsFinder',\n}\n\nfunction BaseDirectionsFinder() {\n  return (\n    <DirectionsFinder\n      onDirectionsClick={action('onDirectionsClick')}\n      primaryName={text('primaryName', '도쿄 디즈니 랜드')}\n      localName={text('localName', '東京ディズニーランド')}\n      localAddress={text('localAddress', '〒279-0031 東京都千葉県浦安市舞浜11')}\n      phoneNumber={text('phoneNumber', '+81453305211')}\n      isDomestic={boolean('isDomestic', false)}\n    />\n  )\n}\n\nBaseDirectionsFinder.story = {\n  decorators: [\n    (storyFn: StoryFn<JSX.Element>) => (\n      <HistoryProvider\n        appUrlScheme=\"\"\n        webUrlBase=\"\"\n        isPublic={false}\n        isAndroid={false}\n        transitionModalHash=\"transition.general\"\n      >\n        <LongPage>{storyFn()}</LongPage>\n      </HistoryProvider>\n    ),\n  ],\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/drawer-button\";\n// @ts-ignore\nvar __STORY__ = \"import React, { useState } from 'react'\\nimport styled from 'styled-components'\\nimport { action } from '@storybook/addon-actions'\\nimport DrawerButton from '@titicaca/drawer-button'\\n\\nconst LongPage = styled.div`\\n  height: 4000px;\\n`\\n\\nexport default {\\n  title: 'drawer-button | DrawerButton',\\n}\\n\\nexport function BaseDrawerButton() {\\n  const [active, setActive] = useState(true)\\n\\n  return (\\n    <LongPage>\\n      {!active && <button onClick={() => setActive(true)}>열기</button>}\\n      <br />\\n      아이폰 X으로 접속한 다음 우측 상단 새창으로 열기를 사용하여\\n      safe-area-inset을 테스트 할 수 있습니다.\\n      <DrawerButton\\n        active={active}\\n        onClick={() => {\\n          action('클릭')()\\n          setActive(false)\\n        }}\\n      >\\n        선택 완료\\n      </DrawerButton>\\n    </LongPage>\\n  )\\n}\\n\\nBaseDrawerButton.story = {\\n  name: '기본 버튼',\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"drawer-button-drawerbutton--base-drawer-button\":{\"startLoc\":{\"col\":7,\"line\":14},\"endLoc\":{\"col\":1,\"line\":34},\"startBody\":{\"col\":7,\"line\":14},\"endBody\":{\"col\":1,\"line\":34}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/drawer-button.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { action } from '@storybook/addon-actions'\nimport DrawerButton from '@titicaca/drawer-button'\n\nconst LongPage = styled.div`\n  height: 4000px;\n`\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React, { useState } from 'react'\\nimport styled from 'styled-components'\\nimport { action } from '@storybook/addon-actions'\\nimport DrawerButton from '@titicaca/drawer-button'\\n\\nconst LongPage = styled.div`\\n  height: 4000px;\\n`\\n\\nexport default {\\n  title: 'drawer-button | DrawerButton',\\n}\\n\\nexport function BaseDrawerButton() {\\n  const [active, setActive] = useState(true)\\n\\n  return (\\n    <LongPage>\\n      {!active && <button onClick={() => setActive(true)}>열기</button>}\\n      <br />\\n      아이폰 X으로 접속한 다음 우측 상단 새창으로 열기를 사용하여\\n      safe-area-inset을 테스트 할 수 있습니다.\\n      <DrawerButton\\n        active={active}\\n        onClick={() => {\\n          action('클릭')()\\n          setActive(false)\\n        }}\\n      >\\n        선택 완료\\n      </DrawerButton>\\n    </LongPage>\\n  )\\n}\\n\\nBaseDrawerButton.story = {\\n  name: '기본 버튼',\\n}\\n\",\"locationsMap\":{\"drawer-button-drawerbutton--base-drawer-button\":{\"startLoc\":{\"col\":7,\"line\":14},\"endLoc\":{\"col\":1,\"line\":34},\"startBody\":{\"col\":7,\"line\":14},\"endBody\":{\"col\":1,\"line\":34}}}},},\n  title: 'drawer-button | DrawerButton',\n}\n\nexport const BaseDrawerButton = addSourceDecorator(function BaseDrawerButton() {\n  const [active, setActive] = useState(true)\n\n  return (\n    <LongPage>\n      {!active && <button onClick={() => setActive(true)}>열기</button>}\n      <br />\n      아이폰 X으로 접속한 다음 우측 상단 새창으로 열기를 사용하여\n      safe-area-inset을 테스트 할 수 있습니다.\n      <DrawerButton\n        active={active}\n        onClick={() => {\n          action('클릭')()\n          setActive(false)\n        }}\n      >\n        선택 완료\n      </DrawerButton>\n    </LongPage>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nBaseDrawerButton.story = {\n  name: '기본 버튼',\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/footer\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport DefaultFooter, { LogoFooter, CSFooter } from '@titicaca/footer'\\nimport { select, boolean } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {\\n  title: 'footer | Footer',\\n}\\n\\nexport function BaseFooter() {\\n  return <DefaultFooter />\\n}\\n\\nBaseFooter.story = {\\n  name: '기본 푸터',\\n}\\n\\nexport function BaseCSFooter() {\\n  return (\\n    <CSFooter\\n      appUrlScheme=\\\"\\\"\\n      serviceType={select('서비스', ['AIR', 'TNA', 'HOTEL'], 'AIR')}\\n      csTime={'오전 9시 - 오후 6시 (한국시간 기준, 연중무휴)'}\\n      csMessage={\\n        '현지사용 긴급문의 카카오톡 @트리플서비스\\\\n(오전 9시 - 오후 10시)'\\n      }\\n      showCSButton={boolean('1:1 문의 버튼 표시 여부', true)}\\n      onFAQButtonClick={action('자주묻는 질문 버튼 클릭')}\\n      onCSButtonClick={action('1:1 문의 버튼 클릭')}\\n    />\\n  )\\n}\\n\\nBaseCSFooter.story = {\\n  name: 'CS 푸터',\\n}\\n\\nexport function BaseLogoFooter() {\\n  return <LogoFooter />\\n}\\nBaseLogoFooter.story = {\\n  name: '로고 푸터',\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"footer-footer--base-footer\":{\"startLoc\":{\"col\":7,\"line\":10},\"endLoc\":{\"col\":1,\"line\":12},\"startBody\":{\"col\":7,\"line\":10},\"endBody\":{\"col\":1,\"line\":12}},\"footer-footer--base-cs-footer\":{\"startLoc\":{\"col\":7,\"line\":18},\"endLoc\":{\"col\":1,\"line\":32},\"startBody\":{\"col\":7,\"line\":18},\"endBody\":{\"col\":1,\"line\":32}},\"footer-footer--base-logo-footer\":{\"startLoc\":{\"col\":7,\"line\":38},\"endLoc\":{\"col\":1,\"line\":40},\"startBody\":{\"col\":7,\"line\":38},\"endBody\":{\"col\":1,\"line\":40}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/footer.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport DefaultFooter, { LogoFooter, CSFooter } from '@titicaca/footer'\nimport { select, boolean } from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport DefaultFooter, { LogoFooter, CSFooter } from '@titicaca/footer'\\nimport { select, boolean } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {\\n  title: 'footer | Footer',\\n}\\n\\nexport function BaseFooter() {\\n  return <DefaultFooter />\\n}\\n\\nBaseFooter.story = {\\n  name: '기본 푸터',\\n}\\n\\nexport function BaseCSFooter() {\\n  return (\\n    <CSFooter\\n      appUrlScheme=\\\"\\\"\\n      serviceType={select('서비스', ['AIR', 'TNA', 'HOTEL'], 'AIR')}\\n      csTime={'오전 9시 - 오후 6시 (한국시간 기준, 연중무휴)'}\\n      csMessage={\\n        '현지사용 긴급문의 카카오톡 @트리플서비스\\\\n(오전 9시 - 오후 10시)'\\n      }\\n      showCSButton={boolean('1:1 문의 버튼 표시 여부', true)}\\n      onFAQButtonClick={action('자주묻는 질문 버튼 클릭')}\\n      onCSButtonClick={action('1:1 문의 버튼 클릭')}\\n    />\\n  )\\n}\\n\\nBaseCSFooter.story = {\\n  name: 'CS 푸터',\\n}\\n\\nexport function BaseLogoFooter() {\\n  return <LogoFooter />\\n}\\nBaseLogoFooter.story = {\\n  name: '로고 푸터',\\n}\\n\",\"locationsMap\":{\"footer-footer--base-footer\":{\"startLoc\":{\"col\":7,\"line\":10},\"endLoc\":{\"col\":1,\"line\":12},\"startBody\":{\"col\":7,\"line\":10},\"endBody\":{\"col\":1,\"line\":12}},\"footer-footer--base-cs-footer\":{\"startLoc\":{\"col\":7,\"line\":18},\"endLoc\":{\"col\":1,\"line\":32},\"startBody\":{\"col\":7,\"line\":18},\"endBody\":{\"col\":1,\"line\":32}},\"footer-footer--base-logo-footer\":{\"startLoc\":{\"col\":7,\"line\":38},\"endLoc\":{\"col\":1,\"line\":40},\"startBody\":{\"col\":7,\"line\":38},\"endBody\":{\"col\":1,\"line\":40}}}},},\n  title: 'footer | Footer',\n}\n\nexport const BaseFooter = addSourceDecorator(function BaseFooter() {\n  return <DefaultFooter />\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nBaseFooter.story = {\n  name: '기본 푸터',\n}\n\nexport const BaseCSFooter = addSourceDecorator(function BaseCSFooter() {\n  return (\n    <CSFooter\n      appUrlScheme=\"\"\n      serviceType={select('서비스', ['AIR', 'TNA', 'HOTEL'], 'AIR')}\n      csTime={'오전 9시 - 오후 6시 (한국시간 기준, 연중무휴)'}\n      csMessage={\n        '현지사용 긴급문의 카카오톡 @트리플서비스\\n(오전 9시 - 오후 10시)'\n      }\n      showCSButton={boolean('1:1 문의 버튼 표시 여부', true)}\n      onFAQButtonClick={action('자주묻는 질문 버튼 클릭')}\n      onCSButtonClick={action('1:1 문의 버튼 클릭')}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nBaseCSFooter.story = {\n  name: 'CS 푸터',\n}\n\nexport const BaseLogoFooter = addSourceDecorator(function BaseLogoFooter() {\n  return <LogoFooter />\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});BaseLogoFooter.story = {\n  name: '로고 푸터',\n}\n","import React, { useState } from 'react'\nimport { Checkbox } from '@titicaca/form'\n\nexport default function CheckboxWrapper() {\n  const [checkedList, setCheckedList] = useState<string[]>([])\n\n  return (\n    <Checkbox\n      name=\"tour_time\"\n      options={[\n        { key: '0', label: '12:10', value: '12:10' },\n        { key: '1', label: '12:20', value: '12:20' },\n        {\n          key: '2',\n          label: '12:30',\n          value: '12:30',\n        },\n      ]}\n      value={checkedList}\n      onChange={(value) => {\n        setCheckedList(value)\n      }}\n    />\n  )\n}\n","import React, { useState } from 'react'\nimport { Radio } from '@titicaca/form'\n\nexport default function RadioWrapper() {\n  const [value, setValue] = useState<string | null>(null)\n\n  return (\n    <Radio\n      value={value}\n      name=\"지역_선택\"\n      options={[\n        {\n          key: '0',\n          label: '전 지역',\n          value: null,\n        },\n        {\n          key: '1',\n          label: '신주쿠',\n          value: '2',\n        },\n        {\n          key: '2',\n          label: '우에노',\n          value: '3',\n        },\n        {\n          key: '3',\n          label: '긴자',\n          value: '4',\n        },\n        {\n          key: '4',\n          label:\n            '아주 아주 아주 아주 아주 아주 아주 아주 아주 아주 아주 아주 아주 아주 아주 아주 긴 텍스트',\n          value: '5',\n        },\n      ]}\n      onChange={(value) => {\n        setValue(value)\n      }}\n    />\n  )\n}\n","import React, { useState } from 'react'\nimport { text, boolean } from '@storybook/addon-knobs'\nimport { ActionSheetSelector } from '@titicaca/form'\n\ntype Option = {\n  key: string\n  label: string\n  value: string | null\n}\n\nexport default function SelectActionSheetWraaper() {\n  const [open, setOpen] = useState(false)\n  const [selectedValue, setSelectedValue] = useState<Option['value']>(null)\n\n  return (\n    <ActionSheetSelector\n      onOpen={() => {\n        setOpen(true)\n      }}\n      title=\"투어티켓 시간\"\n      label=\"투어티켓 시간\"\n      error={text('에러 메세지', '')}\n      open={open}\n      onClose={() => {\n        setOpen(false)\n      }}\n      required={boolean('required', false)}\n      onChange={(value) => setSelectedValue(value)}\n      help={text(\n        'placeholder',\n        '고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.',\n      )}\n      value={selectedValue}\n      options={[\n        {\n          key: '12:00',\n          label: '12:00',\n          value: '12:00',\n        },\n        {\n          key: '12:10',\n          label: '12:10',\n          value: '12:10',\n        },\n        {\n          key: '12:20',\n          label: '12:20',\n          value: '12:20',\n        },\n      ]}\n    />\n  )\n}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs/blocks\";\n\nimport { Meta, Story, Preview } from '@storybook/addon-docs/blocks'\nimport { text, boolean, select as selectAddons } from '@storybook/addon-knobs'\nimport {\n  Input,\n  Select,\n  Textarea,\n  ConfirmCheckbox,\n  GenderRadio,\n} from '@titicaca/form'\nimport RadioWrapper from './components/radio.tsx'\nimport SelectActionSheetWrapper from './components/select-action-sheet.tsx'\nimport CheckboxWrapper from './components/checkbox.tsx'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"form | Form\" mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"form\"\n    }}>{`Form`}</h1>\n    <br />\n    <h2 {...{\n      \"id\": \"input\"\n    }}>{`Input`}</h2>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Input\" mdxType=\"Story\">\n    <Input error={text('에러 메세지', '')} label={text('label', '이름')} placeholder={text('placeholder', '이름을 입력해주세요')} mask={text('mask', '')} maskChar={null} help={text('placeholder', '고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.')} mdxType=\"Input\" />\n  </Story>\n    </Preview>\n    <h2 {...{\n      \"id\": \"textarea\"\n    }}>{`Textarea`}</h2>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Textarea\" mdxType=\"Story\">\n    <Textarea error={boolean('error', false)} label={text('label', '요청사항')} placeholder={text('placeholder', '요청사항을 입력해주세요')} help={text('placeholder', '고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.')} mdxType=\"Textarea\" />\n  </Story>\n    </Preview>\n    <h2 {...{\n      \"id\": \"select\"\n    }}>{`Select`}</h2>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Select\" mdxType=\"Story\">\n    <Select error={text('에러 메세지', '')} label=\"투어티켓 시간\" help={text('placeholder', '고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.')} placeholder=\"시간을 선택해주세요\" value={selectAddons('value', ['12:00', '12:10', '12:20'], '12:00')} options={[{\n          label: '12:00',\n          value: '12:00'\n        }, {\n          label: '12:10',\n          value: '12:10'\n        }, {\n          label: '12:20',\n          value: '12:20'\n        }]} mdxType=\"Select\" />\n  </Story>\n    </Preview>\n    <h2 {...{\n      \"id\": \"select---action-sheet\"\n    }}>{`Select - Action Sheet`}</h2>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Select - ActionSheet\" mdxType=\"Story\">\n    <SelectActionSheetWrapper mdxType=\"SelectActionSheetWrapper\" />\n  </Story>\n    </Preview>\n    <h2 {...{\n      \"id\": \"radio\"\n    }}>{`Radio`}</h2>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Radio\" mdxType=\"Story\">\n    <RadioWrapper mdxType=\"RadioWrapper\" />\n  </Story>\n    </Preview>\n    <h1 {...{\n      \"id\": \"genderradio\"\n    }}>{`GenderRadio`}</h1>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Gender Radio\" mdxType=\"Story\">\n    <GenderRadio value={selectAddons('value', ['MALE', 'FEMALE'], 'MALE')} mdxType=\"GenderRadio\" />\n  </Story>\n    </Preview>\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`CheckBox`}</h1>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Checkbox\" mdxType=\"Story\">\n    <CheckboxWrapper mdxType=\"CheckboxWrapper\" />\n  </Story>\n    </Preview>\n    <h1 {...{\n      \"id\": \"confirmcheckbox\"\n    }}>{`ConfirmCheckbox`}</h1>\n    <Preview mdxType=\"Preview\">\n  <Story name=\"Confirm Checkbox\" mdxType=\"Story\">\n    <ConfirmCheckbox value={boolean('value', false)} borderless={boolean('borderless', false)} textAlign={selectAddons('textAlign', ['left', 'right'], 'left')} fillType={selectAddons('fillType', ['full', 'border', 'text'], 'full')} padding={{\n          top: 16,\n          right: 50,\n          left: 16,\n          bottom: 16\n        }} mdxType=\"ConfirmCheckbox\">\n      <div>예약자 정보를 업데이트 합니다.</div>\n    </ConfirmCheckbox>\n  </Story>\n    </Preview>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const input = () => (\n        <Input error={text('에러 메세지', '')} label={text('label', '이름')} placeholder={text('placeholder', '이름을 입력해주세요')} mask={text('mask', '')} maskChar={null} help={text('placeholder', '고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.')} />\n      );\ninput.story = {};\ninput.story.name = 'Input';\ninput.story.parameters = { mdxSource: '<Input error={text(\\'에러 메세지\\', \\'\\')} label={text(\\'label\\', \\'이름\\')} placeholder={text(\\'placeholder\\', \\'이름을 입력해주세요\\')} mask={text(\\'mask\\', \\'\\')} maskChar={null} help={text(\\'placeholder\\', \\'고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.\\')} />' };\n\nexport const textarea = () => (\n        <Textarea error={boolean('error', false)} label={text('label', '요청사항')} placeholder={text('placeholder', '요청사항을 입력해주세요')} help={text('placeholder', '고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.')} />\n      );\ntextarea.story = {};\ntextarea.story.name = 'Textarea';\ntextarea.story.parameters = { mdxSource: '<Textarea error={boolean(\\'error\\', false)} label={text(\\'label\\', \\'요청사항\\')} placeholder={text(\\'placeholder\\', \\'요청사항을 입력해주세요\\')} help={text(\\'placeholder\\', \\'고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.\\')} />' };\n\nexport const select = () => (\n        <Select error={text('에러 메세지', '')} label=\"투어티켓 시간\" help={text('placeholder', '고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.')} placeholder=\"시간을 선택해주세요\" value={selectAddons('value', ['12:00', '12:10', '12:20'], '12:00')} options={[{\n  label: '12:00',\n  value: '12:00'\n}, {\n  label: '12:10',\n  value: '12:10'\n}, {\n  label: '12:20',\n  value: '12:20'\n}]} />\n      );\nselect.story = {};\nselect.story.name = 'Select';\nselect.story.parameters = { mdxSource: '<Select error={text(\\'에러 메세지\\', \\'\\')} label=\\\"투어티켓 시간\\\" help={text(\\'placeholder\\', \\'고객님의 요청사항은 해당 호텔에 전달됩니다만 호텔 사정에 따라 필요하신 내용이 이루어지지 않을 수 있으니 많은 양해 바랍니다.\\')} placeholder=\\\"시간을 선택해주세요\\\" value={selectAddons(\\'value\\', [\\'12:00\\', \\'12:10\\', \\'12:20\\'], \\'12:00\\')} options={[{\\n  label: \\'12:00\\',\\n  value: \\'12:00\\'\\n}, {\\n  label: \\'12:10\\',\\n  value: \\'12:10\\'\\n}, {\\n  label: \\'12:20\\',\\n  value: \\'12:20\\'\\n}]} />' };\n\nexport const selectActionSheet = () => (\n        <SelectActionSheetWrapper />\n      );\nselectActionSheet.story = {};\nselectActionSheet.story.name = 'Select - ActionSheet';\nselectActionSheet.story.parameters = { mdxSource: '<SelectActionSheetWrapper />' };\n\nexport const radio = () => (\n        <RadioWrapper />\n      );\nradio.story = {};\nradio.story.name = 'Radio';\nradio.story.parameters = { mdxSource: '<RadioWrapper />' };\n\nexport const genderRadio = () => (\n        <GenderRadio value={selectAddons('value', ['MALE', 'FEMALE'], 'MALE')} />\n      );\ngenderRadio.story = {};\ngenderRadio.story.name = 'Gender Radio';\ngenderRadio.story.parameters = { mdxSource: '<GenderRadio value={selectAddons(\\'value\\', [\\'MALE\\', \\'FEMALE\\'], \\'MALE\\')} />' };\n\nexport const checkbox = () => (\n        <CheckboxWrapper />\n      );\ncheckbox.story = {};\ncheckbox.story.name = 'Checkbox';\ncheckbox.story.parameters = { mdxSource: '<CheckboxWrapper />' };\n\nexport const confirmCheckbox = () => (\n        <ConfirmCheckbox value={boolean('value', false)} borderless={boolean('borderless', false)} textAlign={selectAddons('textAlign', ['left', 'right'], 'left')} fillType={selectAddons('fillType', ['full', 'border', 'text'], 'full')} padding={{\n  top: 16,\n  right: 50,\n  left: 16,\n  bottom: 16\n}}>\n      <div>예약자 정보를 업데이트 합니다.</div>\n    </ConfirmCheckbox>\n      );\nconfirmCheckbox.story = {};\nconfirmCheckbox.story.name = 'Confirm Checkbox';\nconfirmCheckbox.story.parameters = { mdxSource: '<ConfirmCheckbox value={boolean(\\'value\\', false)} borderless={boolean(\\'borderless\\', false)} textAlign={selectAddons(\\'textAlign\\', [\\'left\\', \\'right\\'], \\'left\\')} fillType={selectAddons(\\'fillType\\', [\\'full\\', \\'border\\', \\'text\\'], \\'full\\')} padding={{\\n  top: 16,\\n  right: 50,\\n  left: 16,\\n  bottom: 16\\n}}>\\n      <div>예약자 정보를 업데이트 합니다.</div>\\n    </ConfirmCheckbox>' };\n\nconst componentMeta = { title: 'form | Form', includeStories: [\"input\",\"textarea\",\"select\",\"selectActionSheet\",\"radio\",\"genderRadio\",\"checkbox\",\"confirmCheckbox\"],  };\n\nconst mdxStoryNameToKey = {\"Input\":\"input\",\"Textarea\":\"textarea\",\"Select\":\"select\",\"Select - ActionSheet\":\"selectActionSheet\",\"Radio\":\"radio\",\"Gender Radio\":\"genderRadio\",\"Checkbox\":\"checkbox\",\"Confirm Checkbox\":\"confirmCheckbox\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentMeta={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/hub-form\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { text, boolean } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport { HubForm, Cell, Cta } from '@titicaca/hub-form'\\n\\nexport default {\\n  title: 'hub-form | HubForm',\\n}\\n\\nexport function HotelHubForm() {\\n  return (\\n    <>\\n      <HubForm shadow={text('shadow', '')}>\\n        <Cell\\n          type=\\\"DESTINATION\\\"\\n          placeholder={text('목적지 Placeholder', '도시, 또는 호텔')}\\n          value={text('목적지', '')}\\n          onClick={action('목적지 onClick')}\\n        />\\n        <Cell\\n          type=\\\"SCHEDULE\\\"\\n          placeholder={text('일정 Placeholder', '날짜')}\\n          value={text('일정', '')}\\n          onClick={action('일정 onClick')}\\n        />\\n        <Cell\\n          type=\\\"PEOPLE\\\"\\n          placeholder={text('투숙인원 Placeholder', '')}\\n          value={text('투숙인원', '인원 2명')}\\n          onClick={action('투숙인원 onClick')}\\n        />\\n      </HubForm>\\n      <Cta\\n        available={boolean('available', false)}\\n        onSubmit={action('onSubmit')}\\n      >\\n        호텔 검색\\n      </Cta>\\n    </>\\n  )\\n}\\n\\nexport function AirHubForm() {\\n  return (\\n    <>\\n      <HubForm shadow={text('shadow', '')}>\\n        <Cell\\n          type=\\\"ORIGIN\\\"\\n          placeholder={text('출발지 Placeholder', '출발 도시')}\\n          value={text('출발지', '')}\\n          onClick={action('출발지 onClick')}\\n        />\\n        <Cell\\n          type=\\\"DESTINATION\\\"\\n          placeholder={text('목적지 Placeholder', '도착 도시')}\\n          value={text('목적지', '')}\\n          onClick={action('목적지 onClick')}\\n        />\\n        <Cell\\n          type=\\\"SCHEDULE\\\"\\n          placeholder={text('일정 Placeholder', '날짜')}\\n          value={text('일정', '')}\\n          onClick={action('일정 onClick')}\\n        />\\n        <Cell\\n          type=\\\"PEOPLE\\\"\\n          placeholder={text('탑승객 Placeholder', '')}\\n          value={text('탑승객', '탑승객 1명, 일반석 외 1')}\\n          onClick={action('탑승객 onClick')}\\n        />\\n      </HubForm>\\n      <Cta\\n        available={boolean('available', false)}\\n        onSubmit={action('onSubmit')}\\n      >\\n        항공권 검색\\n      </Cta>\\n    </>\\n  )\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"hub-form-hubform--hotel-hub-form\":{\"startLoc\":{\"col\":7,\"line\":10},\"endLoc\":{\"col\":1,\"line\":41},\"startBody\":{\"col\":7,\"line\":10},\"endBody\":{\"col\":1,\"line\":41}},\"hub-form-hubform--air-hub-form\":{\"startLoc\":{\"col\":7,\"line\":43},\"endLoc\":{\"col\":1,\"line\":80},\"startBody\":{\"col\":7,\"line\":43},\"endBody\":{\"col\":1,\"line\":80}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/hub-form.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { text, boolean } from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\nimport { HubForm, Cell, Cta } from '@titicaca/hub-form'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport { text, boolean } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport { HubForm, Cell, Cta } from '@titicaca/hub-form'\\n\\nexport default {\\n  title: 'hub-form | HubForm',\\n}\\n\\nexport function HotelHubForm() {\\n  return (\\n    <>\\n      <HubForm shadow={text('shadow', '')}>\\n        <Cell\\n          type=\\\"DESTINATION\\\"\\n          placeholder={text('목적지 Placeholder', '도시, 또는 호텔')}\\n          value={text('목적지', '')}\\n          onClick={action('목적지 onClick')}\\n        />\\n        <Cell\\n          type=\\\"SCHEDULE\\\"\\n          placeholder={text('일정 Placeholder', '날짜')}\\n          value={text('일정', '')}\\n          onClick={action('일정 onClick')}\\n        />\\n        <Cell\\n          type=\\\"PEOPLE\\\"\\n          placeholder={text('투숙인원 Placeholder', '')}\\n          value={text('투숙인원', '인원 2명')}\\n          onClick={action('투숙인원 onClick')}\\n        />\\n      </HubForm>\\n      <Cta\\n        available={boolean('available', false)}\\n        onSubmit={action('onSubmit')}\\n      >\\n        호텔 검색\\n      </Cta>\\n    </>\\n  )\\n}\\n\\nexport function AirHubForm() {\\n  return (\\n    <>\\n      <HubForm shadow={text('shadow', '')}>\\n        <Cell\\n          type=\\\"ORIGIN\\\"\\n          placeholder={text('출발지 Placeholder', '출발 도시')}\\n          value={text('출발지', '')}\\n          onClick={action('출발지 onClick')}\\n        />\\n        <Cell\\n          type=\\\"DESTINATION\\\"\\n          placeholder={text('목적지 Placeholder', '도착 도시')}\\n          value={text('목적지', '')}\\n          onClick={action('목적지 onClick')}\\n        />\\n        <Cell\\n          type=\\\"SCHEDULE\\\"\\n          placeholder={text('일정 Placeholder', '날짜')}\\n          value={text('일정', '')}\\n          onClick={action('일정 onClick')}\\n        />\\n        <Cell\\n          type=\\\"PEOPLE\\\"\\n          placeholder={text('탑승객 Placeholder', '')}\\n          value={text('탑승객', '탑승객 1명, 일반석 외 1')}\\n          onClick={action('탑승객 onClick')}\\n        />\\n      </HubForm>\\n      <Cta\\n        available={boolean('available', false)}\\n        onSubmit={action('onSubmit')}\\n      >\\n        항공권 검색\\n      </Cta>\\n    </>\\n  )\\n}\\n\",\"locationsMap\":{\"hub-form-hubform--hotel-hub-form\":{\"startLoc\":{\"col\":7,\"line\":10},\"endLoc\":{\"col\":1,\"line\":41},\"startBody\":{\"col\":7,\"line\":10},\"endBody\":{\"col\":1,\"line\":41}},\"hub-form-hubform--air-hub-form\":{\"startLoc\":{\"col\":7,\"line\":43},\"endLoc\":{\"col\":1,\"line\":80},\"startBody\":{\"col\":7,\"line\":43},\"endBody\":{\"col\":1,\"line\":80}}}},},\n  title: 'hub-form | HubForm',\n}\n\nexport const HotelHubForm = addSourceDecorator(function HotelHubForm() {\n  return (\n    <>\n      <HubForm shadow={text('shadow', '')}>\n        <Cell\n          type=\"DESTINATION\"\n          placeholder={text('목적지 Placeholder', '도시, 또는 호텔')}\n          value={text('목적지', '')}\n          onClick={action('목적지 onClick')}\n        />\n        <Cell\n          type=\"SCHEDULE\"\n          placeholder={text('일정 Placeholder', '날짜')}\n          value={text('일정', '')}\n          onClick={action('일정 onClick')}\n        />\n        <Cell\n          type=\"PEOPLE\"\n          placeholder={text('투숙인원 Placeholder', '')}\n          value={text('투숙인원', '인원 2명')}\n          onClick={action('투숙인원 onClick')}\n        />\n      </HubForm>\n      <Cta\n        available={boolean('available', false)}\n        onSubmit={action('onSubmit')}\n      >\n        호텔 검색\n      </Cta>\n    </>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nexport const AirHubForm = addSourceDecorator(function AirHubForm() {\n  return (\n    <>\n      <HubForm shadow={text('shadow', '')}>\n        <Cell\n          type=\"ORIGIN\"\n          placeholder={text('출발지 Placeholder', '출발 도시')}\n          value={text('출발지', '')}\n          onClick={action('출발지 onClick')}\n        />\n        <Cell\n          type=\"DESTINATION\"\n          placeholder={text('목적지 Placeholder', '도착 도시')}\n          value={text('목적지', '')}\n          onClick={action('목적지 onClick')}\n        />\n        <Cell\n          type=\"SCHEDULE\"\n          placeholder={text('일정 Placeholder', '날짜')}\n          value={text('일정', '')}\n          onClick={action('일정 onClick')}\n        />\n        <Cell\n          type=\"PEOPLE\"\n          placeholder={text('탑승객 Placeholder', '')}\n          value={text('탑승객', '탑승객 1명, 일반석 외 1')}\n          onClick={action('탑승객 onClick')}\n        />\n      </HubForm>\n      <Cta\n        available={boolean('available', false)}\n        onSubmit={action('onSubmit')}\n      >\n        항공권 검색\n      </Cta>\n    </>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/i18n\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport I18nProvider from '@titicaca/i18n/lib/provider'\\nimport NearbyPois from '@titicaca/nearby-pois'\\nimport { select } from '@storybook/addon-knobs'\\n\\nexport default {\\n  title: 'i18n | I18nProvider',\\n}\\n\\nexport function ComponentWithI18nProvider() {\\n  return (\\n    <I18nProvider language={select('언어', ['ko', 'en', 'zh-TW'], 'en')}>\\n      <NearbyPois\\n        poiId=\\\"a86a3f55-9f89-4540-a124-f8c4db07ab34\\\"\\n        geolocation={{\\n          type: 'Point',\\n          coordinates: [125.50129726256557, 34.668727308992935],\\n        }}\\n        regionId=\\\"71476976-cf9a-4ae8-a60f-76e6fb26900d\\\"\\n        scraps={{}}\\n        onScrapedChange={() => {}}\\n      />\\n    </I18nProvider>\\n  )\\n}\\n\\nComponentWithI18nProvider.story = {\\n  name: '다국어 지원',\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"i18n-i18nprovider--component-with-i-18-n-provider\":{\"startLoc\":{\"col\":7,\"line\":10},\"endLoc\":{\"col\":1,\"line\":25},\"startBody\":{\"col\":7,\"line\":10},\"endBody\":{\"col\":1,\"line\":25}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/i18n.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport I18nProvider from '@titicaca/i18n/lib/provider'\nimport NearbyPois from '@titicaca/nearby-pois'\nimport { select } from '@storybook/addon-knobs'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport I18nProvider from '@titicaca/i18n/lib/provider'\\nimport NearbyPois from '@titicaca/nearby-pois'\\nimport { select } from '@storybook/addon-knobs'\\n\\nexport default {\\n  title: 'i18n | I18nProvider',\\n}\\n\\nexport function ComponentWithI18nProvider() {\\n  return (\\n    <I18nProvider language={select('언어', ['ko', 'en', 'zh-TW'], 'en')}>\\n      <NearbyPois\\n        poiId=\\\"a86a3f55-9f89-4540-a124-f8c4db07ab34\\\"\\n        geolocation={{\\n          type: 'Point',\\n          coordinates: [125.50129726256557, 34.668727308992935],\\n        }}\\n        regionId=\\\"71476976-cf9a-4ae8-a60f-76e6fb26900d\\\"\\n        scraps={{}}\\n        onScrapedChange={() => {}}\\n      />\\n    </I18nProvider>\\n  )\\n}\\n\\nComponentWithI18nProvider.story = {\\n  name: '다국어 지원',\\n}\\n\",\"locationsMap\":{\"i18n-i18nprovider--component-with-i-18-n-provider\":{\"startLoc\":{\"col\":7,\"line\":10},\"endLoc\":{\"col\":1,\"line\":25},\"startBody\":{\"col\":7,\"line\":10},\"endBody\":{\"col\":1,\"line\":25}}}},},\n  title: 'i18n | I18nProvider',\n}\n\nexport const ComponentWithI18nProvider = addSourceDecorator(function ComponentWithI18nProvider() {\n  return (\n    <I18nProvider language={select('언어', ['ko', 'en', 'zh-TW'], 'en')}>\n      <NearbyPois\n        poiId=\"a86a3f55-9f89-4540-a124-f8c4db07ab34\"\n        geolocation={{\n          type: 'Point',\n          coordinates: [125.50129726256557, 34.668727308992935],\n        }}\n        regionId=\"71476976-cf9a-4ae8-a60f-76e6fb26900d\"\n        scraps={{}}\n        onScrapedChange={() => {}}\n      />\n    </I18nProvider>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nComponentWithI18nProvider.story = {\n  name: '다국어 지원',\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/image-carousel\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport styled from 'styled-components'\\nimport { storiesOf } from '@storybook/react'\\nimport { action } from '@storybook/addon-actions'\\nimport ImageCarousel, { PageLabel } from '@titicaca/image-carousel'\\n\\nimport IMAGES from '../__mocks__/image-carousel.sample.json'\\n\\nconst MoreImageOverlayLink = styled.a`\\n  width: 100%;\\n  text-align: center;\\n  color: white;\\n  vertical-align: middle;\\n  top: 50%;\\n  position: absolute;\\n  transform: translateY(-50%);\\n  text-decoration: none;\\n`\\n\\nconst MoreImageOverlayLinkIcon = styled.img`\\n  width: 20px;\\n  height: 20px;\\n  vertical-align: sub;\\n`\\nconst OverlayContent = () => {\\n  return (\\n    <MoreImageOverlayLink href=\\\"https://triple.guide\\\">\\n      트리플 앱에서 더보기\\n      <MoreImageOverlayLinkIcon\\n        src={'https://assets.triple.guide/images/ico-arrow@4x.png'}\\n      />\\n    </MoreImageOverlayLink>\\n  )\\n}\\n\\nstoriesOf('image-carousel | Image Carousel', module).add('일반', () => {\\n  return (\\n    <ImageCarousel\\n      size=\\\"medium\\\"\\n      images={IMAGES}\\n      currentPage={0}\\n      borderRadius={6}\\n      onImageClick={action('image-click')}\\n      onMoveStart={action('move-start')}\\n      onMove={action('move')}\\n      onMoveEnd={action('move-end')}\\n      ImageSource={({ children }) =>\\n        `출처 ${(children || '').replace(/^https?:\\\\/\\\\//, '')}`\\n      }\\n      showMoreRenderer={({ currentIndex, totalCount }) => {\\n        const result =\\n          totalCount > 5 && currentIndex === totalCount - 1 ? (\\n            <OverlayContent />\\n          ) : null\\n        return result\\n      }}\\n      pageLabelRenderer={({ currentIndex, totalCount }) =>\\n        totalCount <= 5 || currentIndex < totalCount - 1 ? (\\n          <PageLabel currentIndex={currentIndex} totalCount={totalCount} />\\n        ) : null\\n      }\\n    ></ImageCarousel>\\n  )\\n})\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"image-carousel-image-carousel--일반\":{\"startLoc\":{\"col\":57,\"line\":36},\"endLoc\":{\"col\":1,\"line\":64},\"startBody\":{\"col\":63,\"line\":36},\"endBody\":{\"col\":1,\"line\":64}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/image-carousel.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport styled from 'styled-components'\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\nimport ImageCarousel, { PageLabel } from '@titicaca/image-carousel'\n\nimport IMAGES from '../__mocks__/image-carousel.sample.json'\n\nconst MoreImageOverlayLink = styled.a`\n  width: 100%;\n  text-align: center;\n  color: white;\n  vertical-align: middle;\n  top: 50%;\n  position: absolute;\n  transform: translateY(-50%);\n  text-decoration: none;\n`\n\nconst MoreImageOverlayLinkIcon = styled.img`\n  width: 20px;\n  height: 20px;\n  vertical-align: sub;\n`\nconst OverlayContent = () => {\n  return (\n    <MoreImageOverlayLink href=\"https://triple.guide\">\n      트리플 앱에서 더보기\n      <MoreImageOverlayLinkIcon\n        src={'https://assets.triple.guide/images/ico-arrow@4x.png'}\n      />\n    </MoreImageOverlayLink>\n  )\n}\n\nstoriesOf('image-carousel | Image Carousel', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).add('일반', () => {\n  return (\n    <ImageCarousel\n      size=\"medium\"\n      images={IMAGES}\n      currentPage={0}\n      borderRadius={6}\n      onImageClick={action('image-click')}\n      onMoveStart={action('move-start')}\n      onMove={action('move')}\n      onMoveEnd={action('move-end')}\n      ImageSource={({ children }) =>\n        `출처 ${(children || '').replace(/^https?:\\/\\//, '')}`\n      }\n      showMoreRenderer={({ currentIndex, totalCount }) => {\n        const result =\n          totalCount > 5 && currentIndex === totalCount - 1 ? (\n            <OverlayContent />\n          ) : null\n        return result\n      }}\n      pageLabelRenderer={({ currentIndex, totalCount }) =>\n        totalCount <= 5 || currentIndex < totalCount - 1 ? (\n          <PageLabel currentIndex={currentIndex} totalCount={totalCount} />\n        ) : null\n      }\n    ></ImageCarousel>\n  )\n})\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/listing-filter\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport { text, boolean } from '@storybook/addon-knobs'\\nimport ListingFilter from '@titicaca/listing-filter'\\n\\nexport default {\\n  title: 'listing-filter | ListingFilter',\\n}\\n\\nexport function BaseListingFilter() {\\n  return (\\n    <ListingFilter>\\n      <ListingFilter.PrimaryFilterEntry\\n        onClick={action('click:PrimaryFilterEntry')}\\n      >\\n        5.17-5.20, 3명\\n      </ListingFilter.PrimaryFilterEntry>\\n      <ListingFilter.ExpandingFilterEntry\\n        onClick={action('click:ExpandingFilterEntry')}\\n        onMouseUp={action('mouseUp:ExpandingFilterEntry')}\\n      >\\n        침대타입\\n      </ListingFilter.ExpandingFilterEntry>\\n      <ListingFilter.FilterEntry\\n        onClick={action('click:FilterEntry')}\\n        onMouseDown={action('mouseDown:FilterEntry')}\\n      >\\n        무료취소\\n      </ListingFilter.FilterEntry>\\n      <ListingFilter.FilterEntry\\n        active={false}\\n        activeIconImage=\\\"/ico-category-food-on.svg\\\"\\n        inactiveIconImage=\\\"/ico-category-food.svg\\\"\\n      >\\n        {text('레이블', '음식점')}\\n      </ListingFilter.FilterEntry>\\n    </ListingFilter>\\n  )\\n}\\n\\nBaseListingFilter.story = {\\n  name: '전체 필터 타입',\\n}\\n\\nexport function BaseFilterEntry() {\\n  return (\\n    <ListingFilter>\\n      <ListingFilter.FilterEntry\\n        active={boolean('active', true)}\\n        disabled={boolean('disabled', false)}\\n      >\\n        {text('레이블', '부티크 호텔')}\\n      </ListingFilter.FilterEntry>\\n    </ListingFilter>\\n  )\\n}\\n\\nBaseFilterEntry.story = {\\n  name: '기본 FilterEntry',\\n}\\n\\nexport function UnderlineFilterEntry() {\\n  return (\\n    <ListingFilter>\\n      <ListingFilter.FilterEntry\\n        underline\\n        active={boolean('active', true)}\\n        disabled={boolean('disabled', false)}\\n      >\\n        {text('레이블', '부티크 호텔')}\\n      </ListingFilter.FilterEntry>\\n    </ListingFilter>\\n  )\\n}\\n\\nUnderlineFilterEntry.story = {\\n  name: 'Underline FilterEntry',\\n}\\n\\nexport function FilterEntryWithIconImage() {\\n  return (\\n    <ListingFilter>\\n      <ListingFilter.FilterEntry\\n        active={boolean('active', true)}\\n        activeIconImage=\\\"/ico-category-food-on.svg\\\"\\n        inactiveIconImage=\\\"/ico-category-food.svg\\\"\\n        disabled={boolean('disabled', false)}\\n      >\\n        {text('레이블', '음식점')}\\n      </ListingFilter.FilterEntry>\\n    </ListingFilter>\\n  )\\n}\\n\\nFilterEntryWithIconImage.story = {\\n  name: 'FilterEntry (with Icon Image)',\\n}\\n\\nexport function ExpandingFilter() {\\n  return (\\n    <ListingFilter>\\n      <ListingFilter.ExpandingFilterEntry\\n        active={boolean('active', true)}\\n        disabled={boolean('disabled', false)}\\n        badge={text('badge', '0')}\\n      >\\n        {text('레이블', '성급 및 필터')}\\n      </ListingFilter.ExpandingFilterEntry>\\n    </ListingFilter>\\n  )\\n}\\n\\nExpandingFilter.story = {\\n  name: 'Expanding 타입',\\n}\\n\\nexport function PrimaryFilter() {\\n  return (\\n    <ListingFilter>\\n      <ListingFilter.PrimaryFilterEntry disabled={boolean('disabled', false)}>\\n        {text('레이블', '5.17-5.20, 3명')}\\n      </ListingFilter.PrimaryFilterEntry>\\n    </ListingFilter>\\n  )\\n}\\n\\nPrimaryFilter.story = {\\n  name: 'Primary 타입',\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"listing-filter-listingfilter--base-listing-filter\":{\"startLoc\":{\"col\":7,\"line\":10},\"endLoc\":{\"col\":1,\"line\":39},\"startBody\":{\"col\":7,\"line\":10},\"endBody\":{\"col\":1,\"line\":39}},\"listing-filter-listingfilter--base-filter-entry\":{\"startLoc\":{\"col\":7,\"line\":45},\"endLoc\":{\"col\":1,\"line\":56},\"startBody\":{\"col\":7,\"line\":45},\"endBody\":{\"col\":1,\"line\":56}},\"listing-filter-listingfilter--underline-filter-entry\":{\"startLoc\":{\"col\":7,\"line\":62},\"endLoc\":{\"col\":1,\"line\":74},\"startBody\":{\"col\":7,\"line\":62},\"endBody\":{\"col\":1,\"line\":74}},\"listing-filter-listingfilter--filter-entry-with-icon-image\":{\"startLoc\":{\"col\":7,\"line\":80},\"endLoc\":{\"col\":1,\"line\":93},\"startBody\":{\"col\":7,\"line\":80},\"endBody\":{\"col\":1,\"line\":93}},\"listing-filter-listingfilter--expanding-filter\":{\"startLoc\":{\"col\":7,\"line\":99},\"endLoc\":{\"col\":1,\"line\":111},\"startBody\":{\"col\":7,\"line\":99},\"endBody\":{\"col\":1,\"line\":111}},\"listing-filter-listingfilter--primary-filter\":{\"startLoc\":{\"col\":7,\"line\":117},\"endLoc\":{\"col\":1,\"line\":125},\"startBody\":{\"col\":7,\"line\":117},\"endBody\":{\"col\":1,\"line\":125}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/listing-filter.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { action } from '@storybook/addon-actions'\nimport { text, boolean } from '@storybook/addon-knobs'\nimport ListingFilter from '@titicaca/listing-filter'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport { text, boolean } from '@storybook/addon-knobs'\\nimport ListingFilter from '@titicaca/listing-filter'\\n\\nexport default {\\n  title: 'listing-filter | ListingFilter',\\n}\\n\\nexport function BaseListingFilter() {\\n  return (\\n    <ListingFilter>\\n      <ListingFilter.PrimaryFilterEntry\\n        onClick={action('click:PrimaryFilterEntry')}\\n      >\\n        5.17-5.20, 3명\\n      </ListingFilter.PrimaryFilterEntry>\\n      <ListingFilter.ExpandingFilterEntry\\n        onClick={action('click:ExpandingFilterEntry')}\\n        onMouseUp={action('mouseUp:ExpandingFilterEntry')}\\n      >\\n        침대타입\\n      </ListingFilter.ExpandingFilterEntry>\\n      <ListingFilter.FilterEntry\\n        onClick={action('click:FilterEntry')}\\n        onMouseDown={action('mouseDown:FilterEntry')}\\n      >\\n        무료취소\\n      </ListingFilter.FilterEntry>\\n      <ListingFilter.FilterEntry\\n        active={false}\\n        activeIconImage=\\\"/ico-category-food-on.svg\\\"\\n        inactiveIconImage=\\\"/ico-category-food.svg\\\"\\n      >\\n        {text('레이블', '음식점')}\\n      </ListingFilter.FilterEntry>\\n    </ListingFilter>\\n  )\\n}\\n\\nBaseListingFilter.story = {\\n  name: '전체 필터 타입',\\n}\\n\\nexport function BaseFilterEntry() {\\n  return (\\n    <ListingFilter>\\n      <ListingFilter.FilterEntry\\n        active={boolean('active', true)}\\n        disabled={boolean('disabled', false)}\\n      >\\n        {text('레이블', '부티크 호텔')}\\n      </ListingFilter.FilterEntry>\\n    </ListingFilter>\\n  )\\n}\\n\\nBaseFilterEntry.story = {\\n  name: '기본 FilterEntry',\\n}\\n\\nexport function UnderlineFilterEntry() {\\n  return (\\n    <ListingFilter>\\n      <ListingFilter.FilterEntry\\n        underline\\n        active={boolean('active', true)}\\n        disabled={boolean('disabled', false)}\\n      >\\n        {text('레이블', '부티크 호텔')}\\n      </ListingFilter.FilterEntry>\\n    </ListingFilter>\\n  )\\n}\\n\\nUnderlineFilterEntry.story = {\\n  name: 'Underline FilterEntry',\\n}\\n\\nexport function FilterEntryWithIconImage() {\\n  return (\\n    <ListingFilter>\\n      <ListingFilter.FilterEntry\\n        active={boolean('active', true)}\\n        activeIconImage=\\\"/ico-category-food-on.svg\\\"\\n        inactiveIconImage=\\\"/ico-category-food.svg\\\"\\n        disabled={boolean('disabled', false)}\\n      >\\n        {text('레이블', '음식점')}\\n      </ListingFilter.FilterEntry>\\n    </ListingFilter>\\n  )\\n}\\n\\nFilterEntryWithIconImage.story = {\\n  name: 'FilterEntry (with Icon Image)',\\n}\\n\\nexport function ExpandingFilter() {\\n  return (\\n    <ListingFilter>\\n      <ListingFilter.ExpandingFilterEntry\\n        active={boolean('active', true)}\\n        disabled={boolean('disabled', false)}\\n        badge={text('badge', '0')}\\n      >\\n        {text('레이블', '성급 및 필터')}\\n      </ListingFilter.ExpandingFilterEntry>\\n    </ListingFilter>\\n  )\\n}\\n\\nExpandingFilter.story = {\\n  name: 'Expanding 타입',\\n}\\n\\nexport function PrimaryFilter() {\\n  return (\\n    <ListingFilter>\\n      <ListingFilter.PrimaryFilterEntry disabled={boolean('disabled', false)}>\\n        {text('레이블', '5.17-5.20, 3명')}\\n      </ListingFilter.PrimaryFilterEntry>\\n    </ListingFilter>\\n  )\\n}\\n\\nPrimaryFilter.story = {\\n  name: 'Primary 타입',\\n}\\n\",\"locationsMap\":{\"listing-filter-listingfilter--base-listing-filter\":{\"startLoc\":{\"col\":7,\"line\":10},\"endLoc\":{\"col\":1,\"line\":39},\"startBody\":{\"col\":7,\"line\":10},\"endBody\":{\"col\":1,\"line\":39}},\"listing-filter-listingfilter--base-filter-entry\":{\"startLoc\":{\"col\":7,\"line\":45},\"endLoc\":{\"col\":1,\"line\":56},\"startBody\":{\"col\":7,\"line\":45},\"endBody\":{\"col\":1,\"line\":56}},\"listing-filter-listingfilter--underline-filter-entry\":{\"startLoc\":{\"col\":7,\"line\":62},\"endLoc\":{\"col\":1,\"line\":74},\"startBody\":{\"col\":7,\"line\":62},\"endBody\":{\"col\":1,\"line\":74}},\"listing-filter-listingfilter--filter-entry-with-icon-image\":{\"startLoc\":{\"col\":7,\"line\":80},\"endLoc\":{\"col\":1,\"line\":93},\"startBody\":{\"col\":7,\"line\":80},\"endBody\":{\"col\":1,\"line\":93}},\"listing-filter-listingfilter--expanding-filter\":{\"startLoc\":{\"col\":7,\"line\":99},\"endLoc\":{\"col\":1,\"line\":111},\"startBody\":{\"col\":7,\"line\":99},\"endBody\":{\"col\":1,\"line\":111}},\"listing-filter-listingfilter--primary-filter\":{\"startLoc\":{\"col\":7,\"line\":117},\"endLoc\":{\"col\":1,\"line\":125},\"startBody\":{\"col\":7,\"line\":117},\"endBody\":{\"col\":1,\"line\":125}}}},},\n  title: 'listing-filter | ListingFilter',\n}\n\nexport const BaseListingFilter = addSourceDecorator(function BaseListingFilter() {\n  return (\n    <ListingFilter>\n      <ListingFilter.PrimaryFilterEntry\n        onClick={action('click:PrimaryFilterEntry')}\n      >\n        5.17-5.20, 3명\n      </ListingFilter.PrimaryFilterEntry>\n      <ListingFilter.ExpandingFilterEntry\n        onClick={action('click:ExpandingFilterEntry')}\n        onMouseUp={action('mouseUp:ExpandingFilterEntry')}\n      >\n        침대타입\n      </ListingFilter.ExpandingFilterEntry>\n      <ListingFilter.FilterEntry\n        onClick={action('click:FilterEntry')}\n        onMouseDown={action('mouseDown:FilterEntry')}\n      >\n        무료취소\n      </ListingFilter.FilterEntry>\n      <ListingFilter.FilterEntry\n        active={false}\n        activeIconImage=\"/ico-category-food-on.svg\"\n        inactiveIconImage=\"/ico-category-food.svg\"\n      >\n        {text('레이블', '음식점')}\n      </ListingFilter.FilterEntry>\n    </ListingFilter>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nBaseListingFilter.story = {\n  name: '전체 필터 타입',\n}\n\nexport const BaseFilterEntry = addSourceDecorator(function BaseFilterEntry() {\n  return (\n    <ListingFilter>\n      <ListingFilter.FilterEntry\n        active={boolean('active', true)}\n        disabled={boolean('disabled', false)}\n      >\n        {text('레이블', '부티크 호텔')}\n      </ListingFilter.FilterEntry>\n    </ListingFilter>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nBaseFilterEntry.story = {\n  name: '기본 FilterEntry',\n}\n\nexport const UnderlineFilterEntry = addSourceDecorator(function UnderlineFilterEntry() {\n  return (\n    <ListingFilter>\n      <ListingFilter.FilterEntry\n        underline\n        active={boolean('active', true)}\n        disabled={boolean('disabled', false)}\n      >\n        {text('레이블', '부티크 호텔')}\n      </ListingFilter.FilterEntry>\n    </ListingFilter>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nUnderlineFilterEntry.story = {\n  name: 'Underline FilterEntry',\n}\n\nexport const FilterEntryWithIconImage = addSourceDecorator(function FilterEntryWithIconImage() {\n  return (\n    <ListingFilter>\n      <ListingFilter.FilterEntry\n        active={boolean('active', true)}\n        activeIconImage=\"/ico-category-food-on.svg\"\n        inactiveIconImage=\"/ico-category-food.svg\"\n        disabled={boolean('disabled', false)}\n      >\n        {text('레이블', '음식점')}\n      </ListingFilter.FilterEntry>\n    </ListingFilter>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nFilterEntryWithIconImage.story = {\n  name: 'FilterEntry (with Icon Image)',\n}\n\nexport const ExpandingFilter = addSourceDecorator(function ExpandingFilter() {\n  return (\n    <ListingFilter>\n      <ListingFilter.ExpandingFilterEntry\n        active={boolean('active', true)}\n        disabled={boolean('disabled', false)}\n        badge={text('badge', '0')}\n      >\n        {text('레이블', '성급 및 필터')}\n      </ListingFilter.ExpandingFilterEntry>\n    </ListingFilter>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nExpandingFilter.story = {\n  name: 'Expanding 타입',\n}\n\nexport const PrimaryFilter = addSourceDecorator(function PrimaryFilter() {\n  return (\n    <ListingFilter>\n      <ListingFilter.PrimaryFilterEntry disabled={boolean('disabled', false)}>\n        {text('레이블', '5.17-5.20, 3명')}\n      </ListingFilter.PrimaryFilterEntry>\n    </ListingFilter>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nPrimaryFilter.story = {\n  name: 'Primary 타입',\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/location-properties\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean } from '@storybook/addon-knobs'\\nimport { HistoryProvider, UserAgentProvider } from '@titicaca/react-contexts'\\nimport LocationProperties from '@titicaca/location-properties'\\nimport { StoryFn } from '@storybook/addons'\\n\\nexport default {\\n  title: 'Location-Properties | LocationProperties',\\n}\\n\\nexport function BaseLocationProperties() {\\n  return (\\n    <LocationProperties\\n      addresses={\\n        boolean('주소 있음', true)\\n          ? {\\n              primary: null,\\n              ko: null,\\n              en: '1-1 Maihama, Urayasu, Chiba Prefecture 279-0031',\\n              local: '〒279-0031 東京都千葉県浦安市舞浜11',\\n            }\\n          : undefined\\n      }\\n      onAddressesClick={action('onAddressesClick')}\\n      phoneNumber={boolean('전화번호 있음', true) ? '+81453305211' : undefined}\\n      onPhoneNumberClick={action('onPhoneNumberClick')}\\n      officialSiteUrl={\\n        boolean('홈페이지 있음', true)\\n          ? 'http://www.tokyodisneyresort.jp/tdl/index.html'\\n          : undefined\\n      }\\n      onOfficialSiteUrlClick={action('onOfficialSiteUrlClick')}\\n      extraProperties={\\n        boolean('추가속성 있음', true)\\n          ? [\\n              {\\n                description: '내비게이션용 맵코드',\\n                value: '349 569 814*88',\\n              },\\n            ]\\n          : undefined\\n      }\\n      onExtraPropertyClick={action('onExtraPropertyClick')}\\n      onCopy={action('onCopy')}\\n    />\\n  )\\n}\\n\\nBaseLocationProperties.story = {\\n  name: '기본 LocationProperties',\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <HistoryProvider\\n        appUrlScheme=\\\"dev-soto\\\"\\n        webUrlBase=\\\"https://triple-dev.titicaca-corp.com\\\"\\n      >\\n        <UserAgentProvider\\n          value={{\\n            isPublic: boolean('isPublic', true),\\n            isMobile: true,\\n            os: {},\\n            app: null,\\n          }}\\n        >\\n          <div>{storyFn()}</div>\\n        </UserAgentProvider>\\n      </HistoryProvider>\\n    ),\\n  ],\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"location-properties-locationproperties--base-location-properties\":{\"startLoc\":{\"col\":7,\"line\":12},\"endLoc\":{\"col\":1,\"line\":48},\"startBody\":{\"col\":7,\"line\":12},\"endBody\":{\"col\":1,\"line\":48}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/location-properties.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { action } from '@storybook/addon-actions'\nimport { boolean } from '@storybook/addon-knobs'\nimport { HistoryProvider, UserAgentProvider } from '@titicaca/react-contexts'\nimport LocationProperties from '@titicaca/location-properties'\nimport { StoryFn } from '@storybook/addons'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean } from '@storybook/addon-knobs'\\nimport { HistoryProvider, UserAgentProvider } from '@titicaca/react-contexts'\\nimport LocationProperties from '@titicaca/location-properties'\\nimport { StoryFn } from '@storybook/addons'\\n\\nexport default {\\n  title: 'Location-Properties | LocationProperties',\\n}\\n\\nexport function BaseLocationProperties() {\\n  return (\\n    <LocationProperties\\n      addresses={\\n        boolean('주소 있음', true)\\n          ? {\\n              primary: null,\\n              ko: null,\\n              en: '1-1 Maihama, Urayasu, Chiba Prefecture 279-0031',\\n              local: '〒279-0031 東京都千葉県浦安市舞浜11',\\n            }\\n          : undefined\\n      }\\n      onAddressesClick={action('onAddressesClick')}\\n      phoneNumber={boolean('전화번호 있음', true) ? '+81453305211' : undefined}\\n      onPhoneNumberClick={action('onPhoneNumberClick')}\\n      officialSiteUrl={\\n        boolean('홈페이지 있음', true)\\n          ? 'http://www.tokyodisneyresort.jp/tdl/index.html'\\n          : undefined\\n      }\\n      onOfficialSiteUrlClick={action('onOfficialSiteUrlClick')}\\n      extraProperties={\\n        boolean('추가속성 있음', true)\\n          ? [\\n              {\\n                description: '내비게이션용 맵코드',\\n                value: '349 569 814*88',\\n              },\\n            ]\\n          : undefined\\n      }\\n      onExtraPropertyClick={action('onExtraPropertyClick')}\\n      onCopy={action('onCopy')}\\n    />\\n  )\\n}\\n\\nBaseLocationProperties.story = {\\n  name: '기본 LocationProperties',\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <HistoryProvider\\n        appUrlScheme=\\\"dev-soto\\\"\\n        webUrlBase=\\\"https://triple-dev.titicaca-corp.com\\\"\\n      >\\n        <UserAgentProvider\\n          value={{\\n            isPublic: boolean('isPublic', true),\\n            isMobile: true,\\n            os: {},\\n            app: null,\\n          }}\\n        >\\n          <div>{storyFn()}</div>\\n        </UserAgentProvider>\\n      </HistoryProvider>\\n    ),\\n  ],\\n}\\n\",\"locationsMap\":{\"location-properties-locationproperties--base-location-properties\":{\"startLoc\":{\"col\":7,\"line\":12},\"endLoc\":{\"col\":1,\"line\":48},\"startBody\":{\"col\":7,\"line\":12},\"endBody\":{\"col\":1,\"line\":48}}}},},\n  title: 'Location-Properties | LocationProperties',\n}\n\nexport const BaseLocationProperties = addSourceDecorator(function BaseLocationProperties() {\n  return (\n    <LocationProperties\n      addresses={\n        boolean('주소 있음', true)\n          ? {\n              primary: null,\n              ko: null,\n              en: '1-1 Maihama, Urayasu, Chiba Prefecture 279-0031',\n              local: '〒279-0031 東京都千葉県浦安市舞浜11',\n            }\n          : undefined\n      }\n      onAddressesClick={action('onAddressesClick')}\n      phoneNumber={boolean('전화번호 있음', true) ? '+81453305211' : undefined}\n      onPhoneNumberClick={action('onPhoneNumberClick')}\n      officialSiteUrl={\n        boolean('홈페이지 있음', true)\n          ? 'http://www.tokyodisneyresort.jp/tdl/index.html'\n          : undefined\n      }\n      onOfficialSiteUrlClick={action('onOfficialSiteUrlClick')}\n      extraProperties={\n        boolean('추가속성 있음', true)\n          ? [\n              {\n                description: '내비게이션용 맵코드',\n                value: '349 569 814*88',\n              },\n            ]\n          : undefined\n      }\n      onExtraPropertyClick={action('onExtraPropertyClick')}\n      onCopy={action('onCopy')}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nBaseLocationProperties.story = {\n  name: '기본 LocationProperties',\n  decorators: [\n    (storyFn: StoryFn<JSX.Element>) => (\n      <HistoryProvider\n        appUrlScheme=\"dev-soto\"\n        webUrlBase=\"https://triple-dev.titicaca-corp.com\"\n      >\n        <UserAgentProvider\n          value={{\n            isPublic: boolean('isPublic', true),\n            isMobile: true,\n            os: {},\n            app: null,\n          }}\n        >\n          <div>{storyFn()}</div>\n        </UserAgentProvider>\n      </HistoryProvider>\n    ),\n  ],\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/modals\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { Text } from '@titicaca/core-elements'\\nimport { Modal, Confirm, Alert } from '@titicaca/modals'\\n\\nexport default {\\n  title: 'modals | Modal',\\n}\\n\\nexport function BaseModal() {\\n  return (\\n    <Modal open>\\n      <Text\\n        center\\n        size=\\\"large\\\"\\n        lineHeight={1.38}\\n        color=\\\"gray\\\"\\n        padding={{ top: 40, bottom: 40, left: 30, right: 30 }}\\n      >\\n        안녕\\n      </Text>\\n    </Modal>\\n  )\\n}\\n\\nBaseModal.story = {\\n  name: 'Modal',\\n}\\n\\nexport function BaseConfirm() {\\n  return (\\n    <Confirm open>\\n      삭제하겠습니까? 삭제하면 적립된 리뷰 포인트도 함께 사라집니다.\\n    </Confirm>\\n  )\\n}\\n\\nBaseConfirm.story = {\\n  name: 'Confirm',\\n}\\n\\nexport function BaseAlert() {\\n  return (\\n    <Alert\\n      title=\\\"장애공지\\n    타이틀이 두줄일수도\\\"\\n      open\\n    >\\n      실시간 객실정보가 변경되어 안내드려요.\\n    </Alert>\\n  )\\n}\\n\\nBaseAlert.story = {\\n  name: 'Alert',\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"modals-modal--base-modal\":{\"startLoc\":{\"col\":7,\"line\":9},\"endLoc\":{\"col\":1,\"line\":23},\"startBody\":{\"col\":7,\"line\":9},\"endBody\":{\"col\":1,\"line\":23}},\"modals-modal--base-confirm\":{\"startLoc\":{\"col\":7,\"line\":29},\"endLoc\":{\"col\":1,\"line\":35},\"startBody\":{\"col\":7,\"line\":29},\"endBody\":{\"col\":1,\"line\":35}},\"modals-modal--base-alert\":{\"startLoc\":{\"col\":7,\"line\":41},\"endLoc\":{\"col\":1,\"line\":51},\"startBody\":{\"col\":7,\"line\":41},\"endBody\":{\"col\":1,\"line\":51}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/modals.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { Text } from '@titicaca/core-elements'\nimport { Modal, Confirm, Alert } from '@titicaca/modals'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport { Text } from '@titicaca/core-elements'\\nimport { Modal, Confirm, Alert } from '@titicaca/modals'\\n\\nexport default {\\n  title: 'modals | Modal',\\n}\\n\\nexport function BaseModal() {\\n  return (\\n    <Modal open>\\n      <Text\\n        center\\n        size=\\\"large\\\"\\n        lineHeight={1.38}\\n        color=\\\"gray\\\"\\n        padding={{ top: 40, bottom: 40, left: 30, right: 30 }}\\n      >\\n        안녕\\n      </Text>\\n    </Modal>\\n  )\\n}\\n\\nBaseModal.story = {\\n  name: 'Modal',\\n}\\n\\nexport function BaseConfirm() {\\n  return (\\n    <Confirm open>\\n      삭제하겠습니까? 삭제하면 적립된 리뷰 포인트도 함께 사라집니다.\\n    </Confirm>\\n  )\\n}\\n\\nBaseConfirm.story = {\\n  name: 'Confirm',\\n}\\n\\nexport function BaseAlert() {\\n  return (\\n    <Alert\\n      title=\\\"장애공지\\n    타이틀이 두줄일수도\\\"\\n      open\\n    >\\n      실시간 객실정보가 변경되어 안내드려요.\\n    </Alert>\\n  )\\n}\\n\\nBaseAlert.story = {\\n  name: 'Alert',\\n}\\n\",\"locationsMap\":{\"modals-modal--base-modal\":{\"startLoc\":{\"col\":7,\"line\":9},\"endLoc\":{\"col\":1,\"line\":23},\"startBody\":{\"col\":7,\"line\":9},\"endBody\":{\"col\":1,\"line\":23}},\"modals-modal--base-confirm\":{\"startLoc\":{\"col\":7,\"line\":29},\"endLoc\":{\"col\":1,\"line\":35},\"startBody\":{\"col\":7,\"line\":29},\"endBody\":{\"col\":1,\"line\":35}},\"modals-modal--base-alert\":{\"startLoc\":{\"col\":7,\"line\":41},\"endLoc\":{\"col\":1,\"line\":51},\"startBody\":{\"col\":7,\"line\":41},\"endBody\":{\"col\":1,\"line\":51}}}},},\n  title: 'modals | Modal',\n}\n\nexport const BaseModal = addSourceDecorator(function BaseModal() {\n  return (\n    <Modal open>\n      <Text\n        center\n        size=\"large\"\n        lineHeight={1.38}\n        color=\"gray\"\n        padding={{ top: 40, bottom: 40, left: 30, right: 30 }}\n      >\n        안녕\n      </Text>\n    </Modal>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nBaseModal.story = {\n  name: 'Modal',\n}\n\nexport const BaseConfirm = addSourceDecorator(function BaseConfirm() {\n  return (\n    <Confirm open>\n      삭제하겠습니까? 삭제하면 적립된 리뷰 포인트도 함께 사라집니다.\n    </Confirm>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nBaseConfirm.story = {\n  name: 'Confirm',\n}\n\nexport const BaseAlert = addSourceDecorator(function BaseAlert() {\n  return (\n    <Alert\n      title=\"장애공지\n    타이틀이 두줄일수도\"\n      open\n    >\n      실시간 객실정보가 변경되어 안내드려요.\n    </Alert>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nBaseAlert.story = {\n  name: 'Alert',\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/modals\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { HistoryProvider } from '@titicaca/react-contexts'\\nimport {\\n  TransitionModal,\\n  TransitionType,\\n  useTransitionModal,\\n} from '@titicaca/modals'\\nimport { select } from '@storybook/addon-knobs'\\nimport { StoryFn } from '@storybook/addons'\\n\\nexport default {\\n  title: 'modals | Modal',\\n}\\n\\nexport function BaseTransitionModal() {\\n  return (\\n    <div>\\n      <UriHashHistoryManipulator\\n        uriHash={select(\\n          'Hash',\\n          Object.keys(TransitionType).map(\\n            (key) => TransitionType[key as keyof typeof TransitionType],\\n          ),\\n          TransitionType.General,\\n        )}\\n      />\\n      <TransitionModal deepLink=\\\"\\\" />\\n    </div>\\n  )\\n}\\n\\nBaseTransitionModal.story = {\\n  name: 'TransitionModal',\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <HistoryProvider\\n        appUrlScheme=\\\"dev-soto\\\"\\n        webUrlBase=\\\"https://triple-dev.titicaca-corp.com\\\"\\n        isPublic={false}\\n        isAndroid={false}\\n        transitionModalHash=\\\"transition.general\\\"\\n      >\\n        <div>{storyFn()}</div>\\n      </HistoryProvider>\\n    ),\\n  ],\\n}\\n\\nfunction UriHashHistoryManipulator({ uriHash }: { uriHash: string }) {\\n  const { show } = useTransitionModal()\\n\\n  return (\\n    <button onClick={() => uriHash && show(uriHash as TransitionType)}>\\n      Show [{uriHash}] type\\n    </button>\\n  )\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"modals-modal--base-transition-modal\":{\"startLoc\":{\"col\":7,\"line\":15},\"endLoc\":{\"col\":1,\"line\":30},\"startBody\":{\"col\":7,\"line\":15},\"endBody\":{\"col\":1,\"line\":30}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/modals.transition-modal.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { HistoryProvider } from '@titicaca/react-contexts'\nimport {\n  TransitionModal,\n  TransitionType,\n  useTransitionModal,\n} from '@titicaca/modals'\nimport { select } from '@storybook/addon-knobs'\nimport { StoryFn } from '@storybook/addons'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport { HistoryProvider } from '@titicaca/react-contexts'\\nimport {\\n  TransitionModal,\\n  TransitionType,\\n  useTransitionModal,\\n} from '@titicaca/modals'\\nimport { select } from '@storybook/addon-knobs'\\nimport { StoryFn } from '@storybook/addons'\\n\\nexport default {\\n  title: 'modals | Modal',\\n}\\n\\nexport function BaseTransitionModal() {\\n  return (\\n    <div>\\n      <UriHashHistoryManipulator\\n        uriHash={select(\\n          'Hash',\\n          Object.keys(TransitionType).map(\\n            (key) => TransitionType[key as keyof typeof TransitionType],\\n          ),\\n          TransitionType.General,\\n        )}\\n      />\\n      <TransitionModal deepLink=\\\"\\\" />\\n    </div>\\n  )\\n}\\n\\nBaseTransitionModal.story = {\\n  name: 'TransitionModal',\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <HistoryProvider\\n        appUrlScheme=\\\"dev-soto\\\"\\n        webUrlBase=\\\"https://triple-dev.titicaca-corp.com\\\"\\n        isPublic={false}\\n        isAndroid={false}\\n        transitionModalHash=\\\"transition.general\\\"\\n      >\\n        <div>{storyFn()}</div>\\n      </HistoryProvider>\\n    ),\\n  ],\\n}\\n\\nfunction UriHashHistoryManipulator({ uriHash }: { uriHash: string }) {\\n  const { show } = useTransitionModal()\\n\\n  return (\\n    <button onClick={() => uriHash && show(uriHash as TransitionType)}>\\n      Show [{uriHash}] type\\n    </button>\\n  )\\n}\\n\",\"locationsMap\":{\"modals-modal--base-transition-modal\":{\"startLoc\":{\"col\":7,\"line\":15},\"endLoc\":{\"col\":1,\"line\":30},\"startBody\":{\"col\":7,\"line\":15},\"endBody\":{\"col\":1,\"line\":30}}}},},\n  title: 'modals | Modal',\n}\n\nexport const BaseTransitionModal = addSourceDecorator(function BaseTransitionModal() {\n  return (\n    <div>\n      <UriHashHistoryManipulator\n        uriHash={select(\n          'Hash',\n          Object.keys(TransitionType).map(\n            (key) => TransitionType[key as keyof typeof TransitionType],\n          ),\n          TransitionType.General,\n        )}\n      />\n      <TransitionModal deepLink=\"\" />\n    </div>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nBaseTransitionModal.story = {\n  name: 'TransitionModal',\n  decorators: [\n    (storyFn: StoryFn<JSX.Element>) => (\n      <HistoryProvider\n        appUrlScheme=\"dev-soto\"\n        webUrlBase=\"https://triple-dev.titicaca-corp.com\"\n        isPublic={false}\n        isAndroid={false}\n        transitionModalHash=\"transition.general\"\n      >\n        <div>{storyFn()}</div>\n      </HistoryProvider>\n    ),\n  ],\n}\n\nfunction UriHashHistoryManipulator({ uriHash }: { uriHash: string }) {\n  const { show } = useTransitionModal()\n\n  return (\n    <button onClick={() => uriHash && show(uriHash as TransitionType)}>\n      Show [{uriHash}] type\n    </button>\n  )\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/nearby-pois\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport { HistoryProvider } from '@titicaca/react-contexts'\\nimport NearbyPois from '@titicaca/nearby-pois'\\nimport { StoryFn } from '@storybook/addons'\\n\\nexport default {\\n  title: 'Nearby-Pois | NearbyPois',\\n}\\n\\nfunction HistoryProviderWrapper({ children }: { children: React.ReactNode }) {\\n  return (\\n    <HistoryProvider\\n      appUrlScheme=\\\"dev-soto\\\"\\n      webUrlBase=\\\"https://triple-dev.titicaca-corp.com\\\"\\n      isPublic={false}\\n      isAndroid={false}\\n      transitionModalHash=\\\"transition.general\\\"\\n    >\\n      <div>{children}</div>\\n    </HistoryProvider>\\n  )\\n}\\n\\nexport function BaseNearbyPois() {\\n  return (\\n    <NearbyPois\\n      poiId=\\\"a86a3f55-9f89-4540-a124-f8c4db07ab34\\\"\\n      geolocation={{\\n        type: 'Point',\\n        coordinates: [125.50129726256557, 34.668727308992935],\\n      }}\\n      regionId=\\\"71476976-cf9a-4ae8-a60f-76e6fb26900d\\\"\\n      scraps={{}}\\n      onScrapedChange={action('onScrapedChange')}\\n    />\\n  )\\n}\\n\\nBaseNearbyPois.story = {\\n  name: '기본 NearbyPois',\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <HistoryProviderWrapper>\\n        <div>{storyFn()}</div>\\n      </HistoryProviderWrapper>\\n    ),\\n  ],\\n}\\n\\nexport function NearbyPoisWithRecommended() {\\n  return (\\n    <NearbyPois\\n      poiId=\\\"a86a3f55-9f89-4540-a124-f8c4db07ab34\\\"\\n      geolocation={{\\n        type: 'Point',\\n        coordinates: [135.50129726256557, 34.668727308992935],\\n      }}\\n      regionId=\\\"71476976-cf9a-4ae8-a60f-76e6fb26900d\\\"\\n      scraps={{}}\\n      onScrapedChange={action('onScrapedChange')}\\n    />\\n  )\\n}\\n\\nNearbyPoisWithRecommended.story = {\\n  name: '추천 일정이 있는',\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <HistoryProviderWrapper>\\n        <div>{storyFn()}</div>\\n      </HistoryProviderWrapper>\\n    ),\\n  ],\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"nearby-pois-nearbypois--base-nearby-pois\":{\"startLoc\":{\"col\":7,\"line\":25},\"endLoc\":{\"col\":1,\"line\":38},\"startBody\":{\"col\":7,\"line\":25},\"endBody\":{\"col\":1,\"line\":38}},\"nearby-pois-nearbypois--nearby-pois-with-recommended\":{\"startLoc\":{\"col\":7,\"line\":51},\"endLoc\":{\"col\":1,\"line\":64},\"startBody\":{\"col\":7,\"line\":51},\"endBody\":{\"col\":1,\"line\":64}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/nearby-pois.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { action } from '@storybook/addon-actions'\nimport { HistoryProvider } from '@titicaca/react-contexts'\nimport NearbyPois from '@titicaca/nearby-pois'\nimport { StoryFn } from '@storybook/addons'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport { HistoryProvider } from '@titicaca/react-contexts'\\nimport NearbyPois from '@titicaca/nearby-pois'\\nimport { StoryFn } from '@storybook/addons'\\n\\nexport default {\\n  title: 'Nearby-Pois | NearbyPois',\\n}\\n\\nfunction HistoryProviderWrapper({ children }: { children: React.ReactNode }) {\\n  return (\\n    <HistoryProvider\\n      appUrlScheme=\\\"dev-soto\\\"\\n      webUrlBase=\\\"https://triple-dev.titicaca-corp.com\\\"\\n      isPublic={false}\\n      isAndroid={false}\\n      transitionModalHash=\\\"transition.general\\\"\\n    >\\n      <div>{children}</div>\\n    </HistoryProvider>\\n  )\\n}\\n\\nexport function BaseNearbyPois() {\\n  return (\\n    <NearbyPois\\n      poiId=\\\"a86a3f55-9f89-4540-a124-f8c4db07ab34\\\"\\n      geolocation={{\\n        type: 'Point',\\n        coordinates: [125.50129726256557, 34.668727308992935],\\n      }}\\n      regionId=\\\"71476976-cf9a-4ae8-a60f-76e6fb26900d\\\"\\n      scraps={{}}\\n      onScrapedChange={action('onScrapedChange')}\\n    />\\n  )\\n}\\n\\nBaseNearbyPois.story = {\\n  name: '기본 NearbyPois',\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <HistoryProviderWrapper>\\n        <div>{storyFn()}</div>\\n      </HistoryProviderWrapper>\\n    ),\\n  ],\\n}\\n\\nexport function NearbyPoisWithRecommended() {\\n  return (\\n    <NearbyPois\\n      poiId=\\\"a86a3f55-9f89-4540-a124-f8c4db07ab34\\\"\\n      geolocation={{\\n        type: 'Point',\\n        coordinates: [135.50129726256557, 34.668727308992935],\\n      }}\\n      regionId=\\\"71476976-cf9a-4ae8-a60f-76e6fb26900d\\\"\\n      scraps={{}}\\n      onScrapedChange={action('onScrapedChange')}\\n    />\\n  )\\n}\\n\\nNearbyPoisWithRecommended.story = {\\n  name: '추천 일정이 있는',\\n  decorators: [\\n    (storyFn: StoryFn<JSX.Element>) => (\\n      <HistoryProviderWrapper>\\n        <div>{storyFn()}</div>\\n      </HistoryProviderWrapper>\\n    ),\\n  ],\\n}\\n\",\"locationsMap\":{\"nearby-pois-nearbypois--base-nearby-pois\":{\"startLoc\":{\"col\":7,\"line\":25},\"endLoc\":{\"col\":1,\"line\":38},\"startBody\":{\"col\":7,\"line\":25},\"endBody\":{\"col\":1,\"line\":38}},\"nearby-pois-nearbypois--nearby-pois-with-recommended\":{\"startLoc\":{\"col\":7,\"line\":51},\"endLoc\":{\"col\":1,\"line\":64},\"startBody\":{\"col\":7,\"line\":51},\"endBody\":{\"col\":1,\"line\":64}}}},},\n  title: 'Nearby-Pois | NearbyPois',\n}\n\nfunction HistoryProviderWrapper({ children }: { children: React.ReactNode }) {\n  return (\n    <HistoryProvider\n      appUrlScheme=\"dev-soto\"\n      webUrlBase=\"https://triple-dev.titicaca-corp.com\"\n      isPublic={false}\n      isAndroid={false}\n      transitionModalHash=\"transition.general\"\n    >\n      <div>{children}</div>\n    </HistoryProvider>\n  )\n}\n\nexport const BaseNearbyPois = addSourceDecorator(function BaseNearbyPois() {\n  return (\n    <NearbyPois\n      poiId=\"a86a3f55-9f89-4540-a124-f8c4db07ab34\"\n      geolocation={{\n        type: 'Point',\n        coordinates: [125.50129726256557, 34.668727308992935],\n      }}\n      regionId=\"71476976-cf9a-4ae8-a60f-76e6fb26900d\"\n      scraps={{}}\n      onScrapedChange={action('onScrapedChange')}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nBaseNearbyPois.story = {\n  name: '기본 NearbyPois',\n  decorators: [\n    (storyFn: StoryFn<JSX.Element>) => (\n      <HistoryProviderWrapper>\n        <div>{storyFn()}</div>\n      </HistoryProviderWrapper>\n    ),\n  ],\n}\n\nexport const NearbyPoisWithRecommended = addSourceDecorator(function NearbyPoisWithRecommended() {\n  return (\n    <NearbyPois\n      poiId=\"a86a3f55-9f89-4540-a124-f8c4db07ab34\"\n      geolocation={{\n        type: 'Point',\n        coordinates: [135.50129726256557, 34.668727308992935],\n      }}\n      regionId=\"71476976-cf9a-4ae8-a60f-76e6fb26900d\"\n      scraps={{}}\n      onScrapedChange={action('onScrapedChange')}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nNearbyPoisWithRecommended.story = {\n  name: '추천 일정이 있는',\n  decorators: [\n    (storyFn: StoryFn<JSX.Element>) => (\n      <HistoryProviderWrapper>\n        <div>{storyFn()}</div>\n      </HistoryProviderWrapper>\n    ),\n  ],\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/poi-detail\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { boolean } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport { Actions } from '@titicaca/poi-detail'\\n\\nstoriesOf('poi-detail | Actions', module)\\n  .add('일반', () => (\\n    <Actions\\n      poiId=\\\"e889ae22-0336-4cf9-8fbb-742b95fd09d0\\\"\\n      scraped={boolean('저장', false)}\\n      reviewed={boolean('리뷰', false)}\\n      onScheduleAdd={action('onScheduleAdd')}\\n      onScrapedChange={action('onScrapedChange')}\\n      onContentShare={action('onContentShare')}\\n      onReviewEdit={action('onReviewEdit')}\\n    />\\n  ))\\n  .add('호텔 (Global)', () => (\\n    <Actions\\n      poiId=\\\"e889ae22-0336-4cf9-8fbb-742b95fd09d0\\\"\\n      scraped={boolean('저장', false)}\\n      reviewed={boolean('리뷰', false)}\\n      onContentShare={action('onContentShare')}\\n      onReviewEdit={action('onReviewEdit')}\\n    />\\n  ))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"poi-detail-actions--호텔-global\":{\"startLoc\":{\"col\":7,\"line\":19},\"endLoc\":{\"col\":3,\"line\":27},\"startBody\":{\"col\":22,\"line\":19},\"endBody\":{\"col\":3,\"line\":27}},\"poi-detail-actions--일반\":{\"startLoc\":{\"col\":7,\"line\":8},\"endLoc\":{\"col\":3,\"line\":18},\"startBody\":{\"col\":13,\"line\":8},\"endBody\":{\"col\":3,\"line\":18}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/actions.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { boolean } from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\nimport { Actions } from '@titicaca/poi-detail'\n\nstoriesOf('poi-detail | Actions', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('일반', () => (\n    <Actions\n      poiId=\"e889ae22-0336-4cf9-8fbb-742b95fd09d0\"\n      scraped={boolean('저장', false)}\n      reviewed={boolean('리뷰', false)}\n      onScheduleAdd={action('onScheduleAdd')}\n      onScrapedChange={action('onScrapedChange')}\n      onContentShare={action('onContentShare')}\n      onReviewEdit={action('onReviewEdit')}\n    />\n  ))\n  .add('호텔 (Global)', () => (\n    <Actions\n      poiId=\"e889ae22-0336-4cf9-8fbb-742b95fd09d0\"\n      scraped={boolean('저장', false)}\n      reviewed={boolean('리뷰', false)}\n      onContentShare={action('onContentShare')}\n      onReviewEdit={action('onReviewEdit')}\n    />\n  ))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/poi-detail\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { number, boolean } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport { DetailHeader } from '@titicaca/poi-detail'\\nimport { HistoryProvider, UserAgentProvider } from '@titicaca/react-contexts'\\n\\nstoriesOf('poi-detail | DetailHeader', module).add('일반', () => (\\n  <HistoryProvider\\n    appUrlScheme=\\\"dev-soto\\\"\\n    webUrlBase=\\\"https://triple-dev.titicaca-corp.com\\\"\\n  >\\n    <UserAgentProvider\\n      value={{\\n        isPublic: boolean('isPublic', true),\\n        isMobile: true,\\n        os: {},\\n        app: null,\\n      }}\\n    >\\n      <DetailHeader\\n        names={{\\n          primary: '도쿄 디즈니 랜드',\\n          ko: '도쿄 디즈니 랜드',\\n          en: 'Tokyo Disney land',\\n          local: '東京ディズニーランド',\\n        }}\\n        scrapsCount={number('저장수', 682)}\\n        reviewsCount={number('리뷰수', 13859)}\\n        reviewsRating={number('리뷰평점', 4.45)}\\n        onReviewsRatingClick={action('onReviewsRatingClick')}\\n        onCopy={action('onCopy')}\\n      />\\n    </UserAgentProvider>\\n  </HistoryProvider>\\n))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"poi-detail-detailheader--일반\":{\"startLoc\":{\"col\":51,\"line\":8},\"endLoc\":{\"col\":1,\"line\":36},\"startBody\":{\"col\":57,\"line\":8},\"endBody\":{\"col\":1,\"line\":36}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/detail-header.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { number, boolean } from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\nimport { DetailHeader } from '@titicaca/poi-detail'\nimport { HistoryProvider, UserAgentProvider } from '@titicaca/react-contexts'\n\nstoriesOf('poi-detail | DetailHeader', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).add('일반', () => (\n  <HistoryProvider\n    appUrlScheme=\"dev-soto\"\n    webUrlBase=\"https://triple-dev.titicaca-corp.com\"\n  >\n    <UserAgentProvider\n      value={{\n        isPublic: boolean('isPublic', true),\n        isMobile: true,\n        os: {},\n        app: null,\n      }}\n    >\n      <DetailHeader\n        names={{\n          primary: '도쿄 디즈니 랜드',\n          ko: '도쿄 디즈니 랜드',\n          en: 'Tokyo Disney land',\n          local: '東京ディズニーランド',\n        }}\n        scrapsCount={number('저장수', 682)}\n        reviewsCount={number('리뷰수', 13859)}\n        reviewsRating={number('리뷰평점', 4.45)}\n        onReviewsRatingClick={action('onReviewsRatingClick')}\n        onCopy={action('onCopy')}\n      />\n    </UserAgentProvider>\n  </HistoryProvider>\n))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/poi-detail\";\n// @ts-ignore\nvar __STORY__ = \"import React, { useEffect, useState } from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { action } from '@storybook/addon-actions'\\nimport { text, select, boolean } from '@storybook/addon-knobs'\\nimport { ImageCarousel } from '@titicaca/poi-detail'\\nimport {\\n  ImagesProvider,\\n  UserAgentProvider,\\n  generateUserAgentValues,\\n} from '@titicaca/react-contexts'\\nimport { ImageMeta } from '@titicaca/type-definitions'\\n\\nstoriesOf('poi-detail | ImageCarousel', module)\\n  .add('Attraction / Restaurant', () => {\\n    const resourceId = text('POI ID', 'e889ae22-0336-4cf9-8fbb-742b95fd09d0')\\n    const resourceType = select(\\n      'POI Type',\\n      ['attraction', 'restaurant', 'hotel'],\\n      'attraction',\\n    )\\n    const userAgentValues = generateUserAgentValues(\\n      text(\\n        'User-Agent',\\n        'Mozilla/5.0 (iPhone; CPU iPhone OS 12_3_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148;Triple-Android/4.2.0',\\n      ),\\n    )\\n    const hasBusinessHours = boolean('운영시간 있음', false)\\n    const onBusinessHoursClick = hasBusinessHours\\n      ? action('onBusinessHoursClick')\\n      : undefined\\n    const todayBusinessHours = boolean('휴무일', false)\\n      ? undefined\\n      : '10:00 - 12:00 / 15:00 - 19:00'\\n    const currentBusinessHours = boolean('현재 영업 중', false)\\n      ? '10:00 - 12:00'\\n      : undefined\\n    const permanentlyClosed = boolean('운영종료', false)\\n\\n    return (\\n      <UserAgentProvider value={userAgentValues}>\\n        <ImagesProvider\\n          source={{\\n            id: resourceId,\\n            type: resourceType,\\n          }}\\n        >\\n          <ImageCarousel\\n            onImageClick={action('onImageClick')}\\n            onCTAClick={action('onCTAClick')}\\n            onPlaceholderClick={action('onPlaceholderClick')}\\n            onBusinessHoursClick={onBusinessHoursClick}\\n            todayBusinessHours={\\n              hasBusinessHours ? todayBusinessHours : undefined\\n            }\\n            currentBusinessHours={\\n              hasBusinessHours ? currentBusinessHours : undefined\\n            }\\n            permanentlyClosed={permanentlyClosed}\\n          />\\n        </ImagesProvider>\\n      </UserAgentProvider>\\n    )\\n  })\\n  .add('Hotel', () => {\\n    const [initialImages, setInitialImages] = useState<{\\n      images: ImageMeta[]\\n      total: number\\n    } | null>(null)\\n    const resourceId = text('Hotel ID', '1ff98b6f-ca34-4961-ae29-fa52c8ca2e21')\\n    const resourceType = 'hotel'\\n    const userAgentValues = generateUserAgentValues(\\n      text(\\n        'User-Agent',\\n        'Mozilla/5.0 (iPhone; CPU iPhone OS 12_3_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148;Triple-Android/4.2.0',\\n      ),\\n    )\\n    const permanentlyClosed = boolean('운영종료', false)\\n\\n    useEffect(() => {\\n      async function fetchAndSetImages() {\\n        const response = await fetch(\\n          `/api/content/images?resourceId=${resourceId}&resourceType=${resourceType}&from=0&size=10`,\\n        )\\n\\n        const { data, total } = await response.json()\\n\\n        setInitialImages({ images: data, total })\\n      }\\n      fetchAndSetImages()\\n    }, [resourceId, resourceType])\\n\\n    return initialImages ? (\\n      <UserAgentProvider value={userAgentValues}>\\n        <ImagesProvider\\n          images={initialImages.images}\\n          total={initialImages.total}\\n          source={{\\n            id: resourceId,\\n            type: resourceType,\\n          }}\\n        >\\n          <ImageCarousel\\n            onImageClick={action('onImageClick')}\\n            onCTAClick={action('onCTAClick')}\\n            onPlaceholderClick={action('onPlaceholderClick')}\\n            permanentlyClosed={permanentlyClosed}\\n          />\\n        </ImagesProvider>\\n      </UserAgentProvider>\\n    ) : (\\n      <div>Loading</div>\\n    )\\n  })\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"poi-detail-imagecarousel--hotel\":{\"startLoc\":{\"col\":7,\"line\":64},\"endLoc\":{\"col\":3,\"line\":113},\"startBody\":{\"col\":16,\"line\":64},\"endBody\":{\"col\":3,\"line\":113}},\"poi-detail-imagecarousel--attraction-restaurant\":{\"startLoc\":{\"col\":7,\"line\":14},\"endLoc\":{\"col\":3,\"line\":63},\"startBody\":{\"col\":34,\"line\":14},\"endBody\":{\"col\":3,\"line\":63}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/image-carousel.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React, { useEffect, useState } from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\nimport { text, select, boolean } from '@storybook/addon-knobs'\nimport { ImageCarousel } from '@titicaca/poi-detail'\nimport {\n  ImagesProvider,\n  UserAgentProvider,\n  generateUserAgentValues,\n} from '@titicaca/react-contexts'\nimport { ImageMeta } from '@titicaca/type-definitions'\n\nstoriesOf('poi-detail | ImageCarousel', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('Attraction / Restaurant', () => {\n    const resourceId = text('POI ID', 'e889ae22-0336-4cf9-8fbb-742b95fd09d0')\n    const resourceType = select(\n      'POI Type',\n      ['attraction', 'restaurant', 'hotel'],\n      'attraction',\n    )\n    const userAgentValues = generateUserAgentValues(\n      text(\n        'User-Agent',\n        'Mozilla/5.0 (iPhone; CPU iPhone OS 12_3_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148;Triple-Android/4.2.0',\n      ),\n    )\n    const hasBusinessHours = boolean('운영시간 있음', false)\n    const onBusinessHoursClick = hasBusinessHours\n      ? action('onBusinessHoursClick')\n      : undefined\n    const todayBusinessHours = boolean('휴무일', false)\n      ? undefined\n      : '10:00 - 12:00 / 15:00 - 19:00'\n    const currentBusinessHours = boolean('현재 영업 중', false)\n      ? '10:00 - 12:00'\n      : undefined\n    const permanentlyClosed = boolean('운영종료', false)\n\n    return (\n      <UserAgentProvider value={userAgentValues}>\n        <ImagesProvider\n          source={{\n            id: resourceId,\n            type: resourceType,\n          }}\n        >\n          <ImageCarousel\n            onImageClick={action('onImageClick')}\n            onCTAClick={action('onCTAClick')}\n            onPlaceholderClick={action('onPlaceholderClick')}\n            onBusinessHoursClick={onBusinessHoursClick}\n            todayBusinessHours={\n              hasBusinessHours ? todayBusinessHours : undefined\n            }\n            currentBusinessHours={\n              hasBusinessHours ? currentBusinessHours : undefined\n            }\n            permanentlyClosed={permanentlyClosed}\n          />\n        </ImagesProvider>\n      </UserAgentProvider>\n    )\n  })\n  .add('Hotel', () => {\n    const [initialImages, setInitialImages] = useState<{\n      images: ImageMeta[]\n      total: number\n    } | null>(null)\n    const resourceId = text('Hotel ID', '1ff98b6f-ca34-4961-ae29-fa52c8ca2e21')\n    const resourceType = 'hotel'\n    const userAgentValues = generateUserAgentValues(\n      text(\n        'User-Agent',\n        'Mozilla/5.0 (iPhone; CPU iPhone OS 12_3_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148;Triple-Android/4.2.0',\n      ),\n    )\n    const permanentlyClosed = boolean('운영종료', false)\n\n    useEffect(() => {\n      async function fetchAndSetImages() {\n        const response = await fetch(\n          `/api/content/images?resourceId=${resourceId}&resourceType=${resourceType}&from=0&size=10`,\n        )\n\n        const { data, total } = await response.json()\n\n        setInitialImages({ images: data, total })\n      }\n      fetchAndSetImages()\n    }, [resourceId, resourceType])\n\n    return initialImages ? (\n      <UserAgentProvider value={userAgentValues}>\n        <ImagesProvider\n          images={initialImages.images}\n          total={initialImages.total}\n          source={{\n            id: resourceId,\n            type: resourceType,\n          }}\n        >\n          <ImageCarousel\n            onImageClick={action('onImageClick')}\n            onCTAClick={action('onCTAClick')}\n            onPlaceholderClick={action('onPlaceholderClick')}\n            permanentlyClosed={permanentlyClosed}\n          />\n        </ImagesProvider>\n      </UserAgentProvider>\n    ) : (\n      <div>Loading</div>\n    )\n  })\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/poi-detail\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { text } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport { RecommendedArticles } from '@titicaca/poi-detail'\\n\\nstoriesOf('poi-detail | RecommendedArticles', module).add('일반', () => (\\n  <RecommendedArticles\\n    regionId={text('Region ID', '23c5965b-01ad-486b-a694-a2ced15f245c')}\\n    onArticleClick={action('onArticleClick')}\\n  />\\n))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"poi-detail-recommendedarticles--일반\":{\"startLoc\":{\"col\":58,\"line\":7},\"endLoc\":{\"col\":1,\"line\":12},\"startBody\":{\"col\":64,\"line\":7},\"endBody\":{\"col\":1,\"line\":12}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/recommended-articles.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { text } from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\nimport { RecommendedArticles } from '@titicaca/poi-detail'\n\nstoriesOf('poi-detail | RecommendedArticles', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).add('일반', () => (\n  <RecommendedArticles\n    regionId={text('Region ID', '23c5965b-01ad-486b-a694-a2ced15f245c')}\n    onArticleClick={action('onArticleClick')}\n  />\n))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/poi-list-elements\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { boolean, number, select, text } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport { List, Container, Text } from '@titicaca/core-elements'\\nimport {\\n  PoiCarouselElement,\\n  PoiListElement,\\n  POICardElement,\\n} from '@titicaca/poi-list-elements'\\nimport { POI as POIData, Hotel as HotelData } from '@titicaca/type-definitions'\\n\\nimport POIS from '../__mocks__/pois.sample.json'\\nimport HOTELS from '../__mocks__/hotels.sample.json'\\n\\nfunction PricingDescription() {\\n  return (\\n    <Container>\\n      <Text size=\\\"tiny\\\" inlineBlock>\\n        쿠폰적용가\\n      </Text>\\n      <Text size=\\\"tiny\\\" inlineBlock>\\n        10,000 원\\n      </Text>\\n    </Container>\\n  )\\n}\\n\\nconst [POI] = POIS as Exclude<POIData, HotelData>[]\\n\\nexport default {\\n  title: 'poi-list-elements | POI',\\n}\\n\\nexport function PoiList() {\\n  return (\\n    <PoiListElement\\n      as={text('as', 'div')}\\n      poi={POI}\\n      resourceScraps={{\\n        [POI.id]: boolean('저장', false),\\n      }}\\n    />\\n  )\\n}\\n\\nPoiList.story = {\\n  name: 'POI 리스트',\\n}\\n\\nexport function HotelList() {\\n  return (\\n    <List divided>\\n      {(HOTELS as HotelData[]).map((hotel, idx) => (\\n        <PoiListElement\\n          key={idx}\\n          poi={hotel}\\n          resourceScraps={{\\n            [hotel.id]: boolean('저장', false),\\n          }}\\n          isAdvertisement={boolean('광고 상품', false)}\\n          maxCommentLines={number('comment 최대 노출', 0)}\\n          pricingNote=\\\"1박, 세금포함\\\"\\n          priceLabelOverride={text('pricing custom text', '')}\\n          pricingDescription={<PricingDescription />}\\n          isSoldOut={boolean('판매완료', false)}\\n          tags={\\n            idx % 2 === 0\\n              ? [{ text: '추가 할인쿠폰', color: 'green', emphasized: true }]\\n              : undefined\\n          }\\n          hideDiscountRate={boolean('hideDiscountRate', false)}\\n          hideScrapButton={boolean('hideScrapButton', false)}\\n          hidePrice={boolean('hidePrice', false)}\\n          onScrapedChange={action('scrap change')}\\n          notes={boolean('custom note') && ['3성급', '판교 백현동']}\\n          {...(boolean('distance 표시', false)\\n            ? {\\n                distance: text('distance', '300m'),\\n                distanceSuffix: text('distanceSuffix', ' 이내'),\\n              }\\n            : {})}\\n        />\\n      ))}\\n    </List>\\n  )\\n}\\n\\nHotelList.story = {\\n  name: '호텔 리스트',\\n}\\n\\nexport function TripleDocument() {\\n  return (\\n    <>\\n      <PoiCarouselElement\\n        poi={POI}\\n        titleTopSpacing={number('이미지와 타이틀 간격', 10)}\\n        description={\\n          boolean('커스텀 텍스트 노출', false) && (\\n            <Text color=\\\"blue\\\" size=\\\"tiny\\\">\\n              4 · 5성급\\n            </Text>\\n          )\\n        }\\n        resourceScraps={{\\n          [POI.id]: boolean('저장', false),\\n        }}\\n        additionalInfo={\\n          boolean('부가 정보 노출', false) ? <PricingDescription /> : null\\n        }\\n        carouselSize={select(\\n          '캐러셀 크기',\\n          ['big', 'small', 'medium', 'large'],\\n          undefined,\\n        )}\\n        imageFrame={select(\\n          '프레임 크기',\\n          ['4:1', '5:3', '11:7', '4:3', '1:1', '10:11', '5:8'],\\n          undefined,\\n        )}\\n        onImpress={\\n          boolean('onImpress', false)\\n            ? () => {\\n                console.log('노출')\\n              }\\n            : undefined\\n        }\\n      />\\n    </>\\n  )\\n}\\n\\nTripleDocument.story = {\\n  name: 'TripleDocument',\\n}\\n\\nexport function TripleDocumentList() {\\n  return (\\n    <PoiListElement\\n      compact\\n      poi={POI}\\n      resourceScraps={{\\n        [POI.id]: boolean('저장', false),\\n      }}\\n    />\\n  )\\n}\\n\\nTripleDocumentList.story = {\\n  name: 'TripleDocument 리스트',\\n}\\n\\nexport function PoiCardElementsTypeHotel() {\\n  return (\\n    <POICardElement\\n      type=\\\"hotel\\\"\\n      names={{\\n        ko: text('ko name', '아일랜드 퍼시픽 호텔'),\\n        en: text('en name', 'Island Pacific Hotel'),\\n        local: text('local name', '港岛太平洋饭店'),\\n      }}\\n      regionId={text('regionId', '84685a5a-a0ee-47b5-b84c-4d76dffad76d')}\\n      image={{\\n        id: '',\\n        title: null,\\n        description: null,\\n        sourceUrl: '',\\n        sizes: {\\n          large: {\\n            url:\\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/883a655b-adf0-4dd5-a350-3dd12852dd52.jpg',\\n          },\\n          smallSquare: {\\n            url:\\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/883a655b-adf0-4dd5-a350-3dd12852dd52.jpg',\\n          },\\n          full: {\\n            url:\\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/883a655b-adf0-4dd5-a350-3dd12852dd52.jpg',\\n          },\\n        },\\n      }}\\n      comment={text(\\n        'comment',\\n        '아시아부터 서양 요리까지 준비된 가성비 좋은 호텔',\\n      )}\\n      reviewsRating={number('reviewsRating', 5)}\\n      reviewsCount={number('reviewsCount', 1)}\\n      nightlyPrice={number('nightlyPrice', 120094)}\\n      scraped={boolean('scraped', false)}\\n      scrapsCount={number('scrapesCount', 0)}\\n      distance={text('distance', '300m')}\\n      onClick={action('onClick')}\\n      onScrapedChange={action('onScrapedChange')}\\n      onDirectionButtonClick={action('onDirectionButtonClick')}\\n    />\\n  )\\n}\\n\\nPoiCardElementsTypeHotel.stroy = {\\n  name: 'POI Card Element (호텔)',\\n}\\n\\nexport function PoiCardElementsTypePoi() {\\n  return (\\n    <POICardElement\\n      type={select('type', ['attraction', 'restaurant'], 'attraction')}\\n      names={{\\n        ko: text('ko name', '왓 포 사원'),\\n        en: text('en name', 'Temple of the Reclining Buddha (Wat Pho)'),\\n        local: text('local name', 'วัดโพธิ์'),\\n      }}\\n      regionId={text('regionId', 'edf1982d-c835-43a7-b06b-af43acbb6f38')}\\n      image={{\\n        sourceUrl:\\n          'http://www.our-thailand-vacations.com/reclining-buddha-bangkok.html',\\n        sizes: {\\n          large: {\\n            url:\\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/f9ff3ed6-990e-4270-a810-d9409befa31f.jpg',\\n          },\\n          smallSquare: {\\n            url:\\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/f9ff3ed6-990e-4270-a810-d9409befa31f.jpg',\\n          },\\n          full: {\\n            url:\\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/f9ff3ed6-990e-4270-a810-d9409befa31f.jpg',\\n          },\\n        },\\n        description: null,\\n        id: 'f9ff3ed6-990e-4270-a810-d9409befa31f',\\n        title: null,\\n      }}\\n      comment={text(\\n        'comment',\\n        '아유타야 양식으로 지어진 방콕 최대 규모의 유서깊은 사원',\\n      )}\\n      reviewsRating={number('reviewsRating', 5)}\\n      reviewsCount={number('reviewsCount', 1)}\\n      scraped={boolean('scraped', false)}\\n      scrapsCount={number('scrapesCount', 0)}\\n      categoryName={text('categoryName', '관광명소')}\\n      areaName={text('areaName', '올드시티')}\\n      onClick={action('onClick')}\\n      onScrapedChange={action('onScrapedChange')}\\n      onDirectionButtonClick={action('onDirectionButtonClick')}\\n    />\\n  )\\n}\\n\\nPoiCardElementsTypePoi.story = {\\n  name: 'POI Card Element (POI)',\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"poi-list-elements-poi--poi-list\":{\"startLoc\":{\"col\":7,\"line\":34},\"endLoc\":{\"col\":1,\"line\":44},\"startBody\":{\"col\":7,\"line\":34},\"endBody\":{\"col\":1,\"line\":44}},\"poi-list-elements-poi--hotel-list\":{\"startLoc\":{\"col\":7,\"line\":50},\"endLoc\":{\"col\":1,\"line\":86},\"startBody\":{\"col\":7,\"line\":50},\"endBody\":{\"col\":1,\"line\":86}},\"poi-list-elements-poi--triple-document\":{\"startLoc\":{\"col\":7,\"line\":92},\"endLoc\":{\"col\":1,\"line\":131},\"startBody\":{\"col\":7,\"line\":92},\"endBody\":{\"col\":1,\"line\":131}},\"poi-list-elements-poi--triple-document-list\":{\"startLoc\":{\"col\":7,\"line\":137},\"endLoc\":{\"col\":1,\"line\":147},\"startBody\":{\"col\":7,\"line\":137},\"endBody\":{\"col\":1,\"line\":147}},\"poi-list-elements-poi--poi-card-elements-type-hotel\":{\"startLoc\":{\"col\":7,\"line\":153},\"endLoc\":{\"col\":1,\"line\":198},\"startBody\":{\"col\":7,\"line\":153},\"endBody\":{\"col\":1,\"line\":198}},\"poi-list-elements-poi--poi-card-elements-type-poi\":{\"startLoc\":{\"col\":7,\"line\":204},\"endLoc\":{\"col\":1,\"line\":250},\"startBody\":{\"col\":7,\"line\":204},\"endBody\":{\"col\":1,\"line\":250}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/poi.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { boolean, number, select, text } from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\nimport { List, Container, Text } from '@titicaca/core-elements'\nimport {\n  PoiCarouselElement,\n  PoiListElement,\n  POICardElement,\n} from '@titicaca/poi-list-elements'\nimport { POI as POIData, Hotel as HotelData } from '@titicaca/type-definitions'\n\nimport POIS from '../__mocks__/pois.sample.json'\nimport HOTELS from '../__mocks__/hotels.sample.json'\n\nfunction PricingDescription() {\n  return (\n    <Container>\n      <Text size=\"tiny\" inlineBlock>\n        쿠폰적용가\n      </Text>\n      <Text size=\"tiny\" inlineBlock>\n        10,000 원\n      </Text>\n    </Container>\n  )\n}\n\nconst [POI] = POIS as Exclude<POIData, HotelData>[]\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport { boolean, number, select, text } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport { List, Container, Text } from '@titicaca/core-elements'\\nimport {\\n  PoiCarouselElement,\\n  PoiListElement,\\n  POICardElement,\\n} from '@titicaca/poi-list-elements'\\nimport { POI as POIData, Hotel as HotelData } from '@titicaca/type-definitions'\\n\\nimport POIS from '../__mocks__/pois.sample.json'\\nimport HOTELS from '../__mocks__/hotels.sample.json'\\n\\nfunction PricingDescription() {\\n  return (\\n    <Container>\\n      <Text size=\\\"tiny\\\" inlineBlock>\\n        쿠폰적용가\\n      </Text>\\n      <Text size=\\\"tiny\\\" inlineBlock>\\n        10,000 원\\n      </Text>\\n    </Container>\\n  )\\n}\\n\\nconst [POI] = POIS as Exclude<POIData, HotelData>[]\\n\\nexport default {\\n  title: 'poi-list-elements | POI',\\n}\\n\\nexport function PoiList() {\\n  return (\\n    <PoiListElement\\n      as={text('as', 'div')}\\n      poi={POI}\\n      resourceScraps={{\\n        [POI.id]: boolean('저장', false),\\n      }}\\n    />\\n  )\\n}\\n\\nPoiList.story = {\\n  name: 'POI 리스트',\\n}\\n\\nexport function HotelList() {\\n  return (\\n    <List divided>\\n      {(HOTELS as HotelData[]).map((hotel, idx) => (\\n        <PoiListElement\\n          key={idx}\\n          poi={hotel}\\n          resourceScraps={{\\n            [hotel.id]: boolean('저장', false),\\n          }}\\n          isAdvertisement={boolean('광고 상품', false)}\\n          maxCommentLines={number('comment 최대 노출', 0)}\\n          pricingNote=\\\"1박, 세금포함\\\"\\n          priceLabelOverride={text('pricing custom text', '')}\\n          pricingDescription={<PricingDescription />}\\n          isSoldOut={boolean('판매완료', false)}\\n          tags={\\n            idx % 2 === 0\\n              ? [{ text: '추가 할인쿠폰', color: 'green', emphasized: true }]\\n              : undefined\\n          }\\n          hideDiscountRate={boolean('hideDiscountRate', false)}\\n          hideScrapButton={boolean('hideScrapButton', false)}\\n          hidePrice={boolean('hidePrice', false)}\\n          onScrapedChange={action('scrap change')}\\n          notes={boolean('custom note') && ['3성급', '판교 백현동']}\\n          {...(boolean('distance 표시', false)\\n            ? {\\n                distance: text('distance', '300m'),\\n                distanceSuffix: text('distanceSuffix', ' 이내'),\\n              }\\n            : {})}\\n        />\\n      ))}\\n    </List>\\n  )\\n}\\n\\nHotelList.story = {\\n  name: '호텔 리스트',\\n}\\n\\nexport function TripleDocument() {\\n  return (\\n    <>\\n      <PoiCarouselElement\\n        poi={POI}\\n        titleTopSpacing={number('이미지와 타이틀 간격', 10)}\\n        description={\\n          boolean('커스텀 텍스트 노출', false) && (\\n            <Text color=\\\"blue\\\" size=\\\"tiny\\\">\\n              4 · 5성급\\n            </Text>\\n          )\\n        }\\n        resourceScraps={{\\n          [POI.id]: boolean('저장', false),\\n        }}\\n        additionalInfo={\\n          boolean('부가 정보 노출', false) ? <PricingDescription /> : null\\n        }\\n        carouselSize={select(\\n          '캐러셀 크기',\\n          ['big', 'small', 'medium', 'large'],\\n          undefined,\\n        )}\\n        imageFrame={select(\\n          '프레임 크기',\\n          ['4:1', '5:3', '11:7', '4:3', '1:1', '10:11', '5:8'],\\n          undefined,\\n        )}\\n        onImpress={\\n          boolean('onImpress', false)\\n            ? () => {\\n                console.log('노출')\\n              }\\n            : undefined\\n        }\\n      />\\n    </>\\n  )\\n}\\n\\nTripleDocument.story = {\\n  name: 'TripleDocument',\\n}\\n\\nexport function TripleDocumentList() {\\n  return (\\n    <PoiListElement\\n      compact\\n      poi={POI}\\n      resourceScraps={{\\n        [POI.id]: boolean('저장', false),\\n      }}\\n    />\\n  )\\n}\\n\\nTripleDocumentList.story = {\\n  name: 'TripleDocument 리스트',\\n}\\n\\nexport function PoiCardElementsTypeHotel() {\\n  return (\\n    <POICardElement\\n      type=\\\"hotel\\\"\\n      names={{\\n        ko: text('ko name', '아일랜드 퍼시픽 호텔'),\\n        en: text('en name', 'Island Pacific Hotel'),\\n        local: text('local name', '港岛太平洋饭店'),\\n      }}\\n      regionId={text('regionId', '84685a5a-a0ee-47b5-b84c-4d76dffad76d')}\\n      image={{\\n        id: '',\\n        title: null,\\n        description: null,\\n        sourceUrl: '',\\n        sizes: {\\n          large: {\\n            url:\\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/883a655b-adf0-4dd5-a350-3dd12852dd52.jpg',\\n          },\\n          smallSquare: {\\n            url:\\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/883a655b-adf0-4dd5-a350-3dd12852dd52.jpg',\\n          },\\n          full: {\\n            url:\\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/883a655b-adf0-4dd5-a350-3dd12852dd52.jpg',\\n          },\\n        },\\n      }}\\n      comment={text(\\n        'comment',\\n        '아시아부터 서양 요리까지 준비된 가성비 좋은 호텔',\\n      )}\\n      reviewsRating={number('reviewsRating', 5)}\\n      reviewsCount={number('reviewsCount', 1)}\\n      nightlyPrice={number('nightlyPrice', 120094)}\\n      scraped={boolean('scraped', false)}\\n      scrapsCount={number('scrapesCount', 0)}\\n      distance={text('distance', '300m')}\\n      onClick={action('onClick')}\\n      onScrapedChange={action('onScrapedChange')}\\n      onDirectionButtonClick={action('onDirectionButtonClick')}\\n    />\\n  )\\n}\\n\\nPoiCardElementsTypeHotel.stroy = {\\n  name: 'POI Card Element (호텔)',\\n}\\n\\nexport function PoiCardElementsTypePoi() {\\n  return (\\n    <POICardElement\\n      type={select('type', ['attraction', 'restaurant'], 'attraction')}\\n      names={{\\n        ko: text('ko name', '왓 포 사원'),\\n        en: text('en name', 'Temple of the Reclining Buddha (Wat Pho)'),\\n        local: text('local name', 'วัดโพธิ์'),\\n      }}\\n      regionId={text('regionId', 'edf1982d-c835-43a7-b06b-af43acbb6f38')}\\n      image={{\\n        sourceUrl:\\n          'http://www.our-thailand-vacations.com/reclining-buddha-bangkok.html',\\n        sizes: {\\n          large: {\\n            url:\\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/f9ff3ed6-990e-4270-a810-d9409befa31f.jpg',\\n          },\\n          smallSquare: {\\n            url:\\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/f9ff3ed6-990e-4270-a810-d9409befa31f.jpg',\\n          },\\n          full: {\\n            url:\\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/f9ff3ed6-990e-4270-a810-d9409befa31f.jpg',\\n          },\\n        },\\n        description: null,\\n        id: 'f9ff3ed6-990e-4270-a810-d9409befa31f',\\n        title: null,\\n      }}\\n      comment={text(\\n        'comment',\\n        '아유타야 양식으로 지어진 방콕 최대 규모의 유서깊은 사원',\\n      )}\\n      reviewsRating={number('reviewsRating', 5)}\\n      reviewsCount={number('reviewsCount', 1)}\\n      scraped={boolean('scraped', false)}\\n      scrapsCount={number('scrapesCount', 0)}\\n      categoryName={text('categoryName', '관광명소')}\\n      areaName={text('areaName', '올드시티')}\\n      onClick={action('onClick')}\\n      onScrapedChange={action('onScrapedChange')}\\n      onDirectionButtonClick={action('onDirectionButtonClick')}\\n    />\\n  )\\n}\\n\\nPoiCardElementsTypePoi.story = {\\n  name: 'POI Card Element (POI)',\\n}\\n\",\"locationsMap\":{\"poi-list-elements-poi--poi-list\":{\"startLoc\":{\"col\":7,\"line\":34},\"endLoc\":{\"col\":1,\"line\":44},\"startBody\":{\"col\":7,\"line\":34},\"endBody\":{\"col\":1,\"line\":44}},\"poi-list-elements-poi--hotel-list\":{\"startLoc\":{\"col\":7,\"line\":50},\"endLoc\":{\"col\":1,\"line\":86},\"startBody\":{\"col\":7,\"line\":50},\"endBody\":{\"col\":1,\"line\":86}},\"poi-list-elements-poi--triple-document\":{\"startLoc\":{\"col\":7,\"line\":92},\"endLoc\":{\"col\":1,\"line\":131},\"startBody\":{\"col\":7,\"line\":92},\"endBody\":{\"col\":1,\"line\":131}},\"poi-list-elements-poi--triple-document-list\":{\"startLoc\":{\"col\":7,\"line\":137},\"endLoc\":{\"col\":1,\"line\":147},\"startBody\":{\"col\":7,\"line\":137},\"endBody\":{\"col\":1,\"line\":147}},\"poi-list-elements-poi--poi-card-elements-type-hotel\":{\"startLoc\":{\"col\":7,\"line\":153},\"endLoc\":{\"col\":1,\"line\":198},\"startBody\":{\"col\":7,\"line\":153},\"endBody\":{\"col\":1,\"line\":198}},\"poi-list-elements-poi--poi-card-elements-type-poi\":{\"startLoc\":{\"col\":7,\"line\":204},\"endLoc\":{\"col\":1,\"line\":250},\"startBody\":{\"col\":7,\"line\":204},\"endBody\":{\"col\":1,\"line\":250}}}},},\n  title: 'poi-list-elements | POI',\n}\n\nexport const PoiList = addSourceDecorator(function PoiList() {\n  return (\n    <PoiListElement\n      as={text('as', 'div')}\n      poi={POI}\n      resourceScraps={{\n        [POI.id]: boolean('저장', false),\n      }}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nPoiList.story = {\n  name: 'POI 리스트',\n}\n\nexport const HotelList = addSourceDecorator(function HotelList() {\n  return (\n    <List divided>\n      {(HOTELS as HotelData[]).map((hotel, idx) => (\n        <PoiListElement\n          key={idx}\n          poi={hotel}\n          resourceScraps={{\n            [hotel.id]: boolean('저장', false),\n          }}\n          isAdvertisement={boolean('광고 상품', false)}\n          maxCommentLines={number('comment 최대 노출', 0)}\n          pricingNote=\"1박, 세금포함\"\n          priceLabelOverride={text('pricing custom text', '')}\n          pricingDescription={<PricingDescription />}\n          isSoldOut={boolean('판매완료', false)}\n          tags={\n            idx % 2 === 0\n              ? [{ text: '추가 할인쿠폰', color: 'green', emphasized: true }]\n              : undefined\n          }\n          hideDiscountRate={boolean('hideDiscountRate', false)}\n          hideScrapButton={boolean('hideScrapButton', false)}\n          hidePrice={boolean('hidePrice', false)}\n          onScrapedChange={action('scrap change')}\n          notes={boolean('custom note') && ['3성급', '판교 백현동']}\n          {...(boolean('distance 표시', false)\n            ? {\n                distance: text('distance', '300m'),\n                distanceSuffix: text('distanceSuffix', ' 이내'),\n              }\n            : {})}\n        />\n      ))}\n    </List>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nHotelList.story = {\n  name: '호텔 리스트',\n}\n\nexport const TripleDocument = addSourceDecorator(function TripleDocument() {\n  return (\n    <>\n      <PoiCarouselElement\n        poi={POI}\n        titleTopSpacing={number('이미지와 타이틀 간격', 10)}\n        description={\n          boolean('커스텀 텍스트 노출', false) && (\n            <Text color=\"blue\" size=\"tiny\">\n              4 · 5성급\n            </Text>\n          )\n        }\n        resourceScraps={{\n          [POI.id]: boolean('저장', false),\n        }}\n        additionalInfo={\n          boolean('부가 정보 노출', false) ? <PricingDescription /> : null\n        }\n        carouselSize={select(\n          '캐러셀 크기',\n          ['big', 'small', 'medium', 'large'],\n          undefined,\n        )}\n        imageFrame={select(\n          '프레임 크기',\n          ['4:1', '5:3', '11:7', '4:3', '1:1', '10:11', '5:8'],\n          undefined,\n        )}\n        onImpress={\n          boolean('onImpress', false)\n            ? () => {\n                console.log('노출')\n              }\n            : undefined\n        }\n      />\n    </>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nTripleDocument.story = {\n  name: 'TripleDocument',\n}\n\nexport const TripleDocumentList = addSourceDecorator(function TripleDocumentList() {\n  return (\n    <PoiListElement\n      compact\n      poi={POI}\n      resourceScraps={{\n        [POI.id]: boolean('저장', false),\n      }}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nTripleDocumentList.story = {\n  name: 'TripleDocument 리스트',\n}\n\nexport const PoiCardElementsTypeHotel = addSourceDecorator(function PoiCardElementsTypeHotel() {\n  return (\n    <POICardElement\n      type=\"hotel\"\n      names={{\n        ko: text('ko name', '아일랜드 퍼시픽 호텔'),\n        en: text('en name', 'Island Pacific Hotel'),\n        local: text('local name', '港岛太平洋饭店'),\n      }}\n      regionId={text('regionId', '84685a5a-a0ee-47b5-b84c-4d76dffad76d')}\n      image={{\n        id: '',\n        title: null,\n        description: null,\n        sourceUrl: '',\n        sizes: {\n          large: {\n            url:\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/883a655b-adf0-4dd5-a350-3dd12852dd52.jpg',\n          },\n          smallSquare: {\n            url:\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/883a655b-adf0-4dd5-a350-3dd12852dd52.jpg',\n          },\n          full: {\n            url:\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/883a655b-adf0-4dd5-a350-3dd12852dd52.jpg',\n          },\n        },\n      }}\n      comment={text(\n        'comment',\n        '아시아부터 서양 요리까지 준비된 가성비 좋은 호텔',\n      )}\n      reviewsRating={number('reviewsRating', 5)}\n      reviewsCount={number('reviewsCount', 1)}\n      nightlyPrice={number('nightlyPrice', 120094)}\n      scraped={boolean('scraped', false)}\n      scrapsCount={number('scrapesCount', 0)}\n      distance={text('distance', '300m')}\n      onClick={action('onClick')}\n      onScrapedChange={action('onScrapedChange')}\n      onDirectionButtonClick={action('onDirectionButtonClick')}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nPoiCardElementsTypeHotel.stroy = {\n  name: 'POI Card Element (호텔)',\n}\n\nexport const PoiCardElementsTypePoi = addSourceDecorator(function PoiCardElementsTypePoi() {\n  return (\n    <POICardElement\n      type={select('type', ['attraction', 'restaurant'], 'attraction')}\n      names={{\n        ko: text('ko name', '왓 포 사원'),\n        en: text('en name', 'Temple of the Reclining Buddha (Wat Pho)'),\n        local: text('local name', 'วัดโพธิ์'),\n      }}\n      regionId={text('regionId', 'edf1982d-c835-43a7-b06b-af43acbb6f38')}\n      image={{\n        sourceUrl:\n          'http://www.our-thailand-vacations.com/reclining-buddha-bangkok.html',\n        sizes: {\n          large: {\n            url:\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/f9ff3ed6-990e-4270-a810-d9409befa31f.jpg',\n          },\n          smallSquare: {\n            url:\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/f9ff3ed6-990e-4270-a810-d9409befa31f.jpg',\n          },\n          full: {\n            url:\n              'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/f9ff3ed6-990e-4270-a810-d9409befa31f.jpg',\n          },\n        },\n        description: null,\n        id: 'f9ff3ed6-990e-4270-a810-d9409befa31f',\n        title: null,\n      }}\n      comment={text(\n        'comment',\n        '아유타야 양식으로 지어진 방콕 최대 규모의 유서깊은 사원',\n      )}\n      reviewsRating={number('reviewsRating', 5)}\n      reviewsCount={number('reviewsCount', 1)}\n      scraped={boolean('scraped', false)}\n      scrapsCount={number('scrapesCount', 0)}\n      categoryName={text('categoryName', '관광명소')}\n      areaName={text('areaName', '올드시티')}\n      onClick={action('onClick')}\n      onScrapedChange={action('onScrapedChange')}\n      onDirectionButtonClick={action('onDirectionButtonClick')}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nPoiCardElementsTypePoi.story = {\n  name: 'POI Card Element (POI)',\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/popup\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport styled from 'styled-components'\\nimport { storiesOf } from '@storybook/react'\\nimport { boolean, select, text } from '@storybook/addon-knobs'\\nimport Popup from '@titicaca/popup'\\nimport ActionSheet from '@titicaca/action-sheet'\\n\\nconst EmptyScroll = styled.div`\\n  height: 200vh;\\n`\\n\\nstoriesOf('popup | Popup', module)\\n  .add('일반', () => (\\n    <Popup\\n      title={text('팝업 제목', '테스트')}\\n      noNavbar={boolean('Navbar 숨김', false)}\\n      borderless={boolean('네비바 경계선 없음', true)}\\n      open={boolean('팝업 열기', false)}\\n      icon={select('네비바 아이콘', ['close', 'back'], 'close')}\\n    >\\n      <EmptyScroll>Scroll........</EmptyScroll>\\n    </Popup>\\n  ))\\n  .add('팝업과 액션시트가 같은 계층에 있는 경우', () => (\\n    <>\\n      <Popup title=\\\"팝업입니다\\\" open={true}>\\n        <EmptyScroll>Scroll........</EmptyScroll>\\n      </Popup>\\n\\n      <ActionSheet\\n        open={boolean('액션 시트 열림', false)}\\n        title=\\\"샘플 액션시트\\\"\\n      >\\n        <ActionSheet.Item>메뉴 1</ActionSheet.Item>\\n        <ActionSheet.Item>메뉴 2</ActionSheet.Item>\\n      </ActionSheet>\\n    </>\\n  ))\\n  .add('팝업 안에 액션시트가 있는 경우', () => (\\n    <>\\n      <Popup title=\\\"팝업입니다\\\" open={true}>\\n        <EmptyScroll>Scroll........</EmptyScroll>\\n        <ActionSheet\\n          open={boolean('액션 시트 열림', false)}\\n          title=\\\"샘플 액션시트\\\"\\n        >\\n          <ActionSheet.Item>메뉴 1</ActionSheet.Item>\\n          <ActionSheet.Item>메뉴 2</ActionSheet.Item>\\n        </ActionSheet>\\n      </Popup>\\n    </>\\n  ))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"popup-popup--팝업-안에-액션시트가-있는-경우\":{\"startLoc\":{\"col\":7,\"line\":39},\"endLoc\":{\"col\":3,\"line\":52},\"startBody\":{\"col\":28,\"line\":39},\"endBody\":{\"col\":3,\"line\":52}},\"popup-popup--팝업과-액션시트가-같은-계층에-있는-경우\":{\"startLoc\":{\"col\":7,\"line\":24},\"endLoc\":{\"col\":3,\"line\":38},\"startBody\":{\"col\":33,\"line\":24},\"endBody\":{\"col\":3,\"line\":38}},\"popup-popup--일반\":{\"startLoc\":{\"col\":7,\"line\":13},\"endLoc\":{\"col\":3,\"line\":23},\"startBody\":{\"col\":13,\"line\":13},\"endBody\":{\"col\":3,\"line\":23}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/popup.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport styled from 'styled-components'\nimport { storiesOf } from '@storybook/react'\nimport { boolean, select, text } from '@storybook/addon-knobs'\nimport Popup from '@titicaca/popup'\nimport ActionSheet from '@titicaca/action-sheet'\n\nconst EmptyScroll = styled.div`\n  height: 200vh;\n`\n\nstoriesOf('popup | Popup', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('일반', () => (\n    <Popup\n      title={text('팝업 제목', '테스트')}\n      noNavbar={boolean('Navbar 숨김', false)}\n      borderless={boolean('네비바 경계선 없음', true)}\n      open={boolean('팝업 열기', false)}\n      icon={select('네비바 아이콘', ['close', 'back'], 'close')}\n    >\n      <EmptyScroll>Scroll........</EmptyScroll>\n    </Popup>\n  ))\n  .add('팝업과 액션시트가 같은 계층에 있는 경우', () => (\n    <>\n      <Popup title=\"팝업입니다\" open={true}>\n        <EmptyScroll>Scroll........</EmptyScroll>\n      </Popup>\n\n      <ActionSheet\n        open={boolean('액션 시트 열림', false)}\n        title=\"샘플 액션시트\"\n      >\n        <ActionSheet.Item>메뉴 1</ActionSheet.Item>\n        <ActionSheet.Item>메뉴 2</ActionSheet.Item>\n      </ActionSheet>\n    </>\n  ))\n  .add('팝업 안에 액션시트가 있는 경우', () => (\n    <>\n      <Popup title=\"팝업입니다\" open={true}>\n        <EmptyScroll>Scroll........</EmptyScroll>\n        <ActionSheet\n          open={boolean('액션 시트 열림', false)}\n          title=\"샘플 액션시트\"\n        >\n          <ActionSheet.Item>메뉴 1</ActionSheet.Item>\n          <ActionSheet.Item>메뉴 2</ActionSheet.Item>\n        </ActionSheet>\n      </Popup>\n    </>\n  ))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/pricing\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { withKnobs, boolean, text, number } from '@storybook/addon-knobs'\\nimport Pricing from '@titicaca/pricing'\\nimport { Container, Text } from '@titicaca/core-elements'\\n\\nfunction PricingDescription() {\\n  return (\\n    <Container>\\n      <Text size=\\\"tiny\\\" inlineBlock margin={{ right: 3 }}>\\n        쿠폰 적용시\\n      </Text>\\n      <Text size=\\\"tiny\\\" inlineBlock>\\n        270,500원\\n      </Text>\\n    </Container>\\n  )\\n}\\n\\nfunction PricingLabel() {\\n  return (\\n    <Text size=\\\"tiny\\\" alpha={0.8} bold>\\n      1박 세금포함\\n    </Text>\\n  )\\n}\\n\\nstoriesOf('pricing | Pricing', module)\\n  .addDecorator(withKnobs)\\n  .add('일반', () => (\\n    <Pricing\\n      priceLabelOverride={text('메세지')}\\n      basePrice={30000}\\n      salePrice={25000}\\n      isSoldOut={boolean('판매완료', false)}\\n    />\\n  ))\\n  .add('Rich', () => {\\n    const useStringDescription = boolean('문자 타입의 설명', true)\\n    const useStringLabel = boolean('문자 타입의 라벨', true)\\n\\n    return (\\n      <Pricing\\n        basePrice={number('basePrice', 30000)}\\n        basePriceUnit={text('basePriceUnit', '원')}\\n        pricingNote={text('문구', '1박, 세금포함')}\\n        salePrice={25000}\\n        label={useStringLabel ? '트리플가' : <PricingLabel />}\\n        priceLabelOverride={text('메세지')}\\n        hideDiscountRate={boolean('할인률 미노출', false)}\\n        isSoldOut={boolean('판매완료', false)}\\n        rich\\n        description={\\n          useStringDescription ? (\\n            text('설명', '쿠폰적용시 10,000원')\\n          ) : (\\n            <PricingDescription />\\n          )\\n        }\\n      />\\n    )\\n  })\\n  .add('Fixed', () => {\\n    const hasAction = boolean('툴팁액션', true)\\n    const useStringDescription = boolean('문자 타입의 설명')\\n    const useStringLabel = boolean('문자 타입의 라벨')\\n\\n    return (\\n      <Pricing\\n        fixed\\n        active={boolean('열림', true)}\\n        basePrice={30000}\\n        salePrice={25000}\\n        priceLabelOverride={text('메세지')}\\n        label={\\n          useStringLabel ? (\\n            text('라벨', '1박 세금포함')\\n          ) : (\\n            <Text size=\\\"mini\\\">1박 세금포함</Text>\\n          )\\n        }\\n        buttonText=\\\"객실예약\\\"\\n        buttonDisabled={boolean('버튼 비활성화', false)}\\n        description={\\n          useStringDescription ? (\\n            text('설명', '쿠폰적용시 10,000원')\\n          ) : (\\n            <PricingDescription />\\n          )\\n        }\\n        tooltipLabel={text('툴팁 라벨', '쿠폰사용시 -15,000원 더 할인!')}\\n        onTooltipClick={hasAction ? () => window.alert('레릿꼬오') : null}\\n        isSoldOut={boolean('판매완료', false)}\\n      />\\n    )\\n  })\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"pricing-pricing--fixed\":{\"startLoc\":{\"col\":7,\"line\":63},\"endLoc\":{\"col\":3,\"line\":96},\"startBody\":{\"col\":16,\"line\":63},\"endBody\":{\"col\":3,\"line\":96}},\"pricing-pricing--rich\":{\"startLoc\":{\"col\":7,\"line\":38},\"endLoc\":{\"col\":3,\"line\":62},\"startBody\":{\"col\":15,\"line\":38},\"endBody\":{\"col\":3,\"line\":62}},\"pricing-pricing--일반\":{\"startLoc\":{\"col\":7,\"line\":30},\"endLoc\":{\"col\":3,\"line\":37},\"startBody\":{\"col\":13,\"line\":30},\"endBody\":{\"col\":3,\"line\":37}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/pricing.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { withKnobs, boolean, text, number } from '@storybook/addon-knobs'\nimport Pricing from '@titicaca/pricing'\nimport { Container, Text } from '@titicaca/core-elements'\n\nfunction PricingDescription() {\n  return (\n    <Container>\n      <Text size=\"tiny\" inlineBlock margin={{ right: 3 }}>\n        쿠폰 적용시\n      </Text>\n      <Text size=\"tiny\" inlineBlock>\n        270,500원\n      </Text>\n    </Container>\n  )\n}\n\nfunction PricingLabel() {\n  return (\n    <Text size=\"tiny\" alpha={0.8} bold>\n      1박 세금포함\n    </Text>\n  )\n}\n\nstoriesOf('pricing | Pricing', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .addDecorator(withKnobs)\n  .add('일반', () => (\n    <Pricing\n      priceLabelOverride={text('메세지')}\n      basePrice={30000}\n      salePrice={25000}\n      isSoldOut={boolean('판매완료', false)}\n    />\n  ))\n  .add('Rich', () => {\n    const useStringDescription = boolean('문자 타입의 설명', true)\n    const useStringLabel = boolean('문자 타입의 라벨', true)\n\n    return (\n      <Pricing\n        basePrice={number('basePrice', 30000)}\n        basePriceUnit={text('basePriceUnit', '원')}\n        pricingNote={text('문구', '1박, 세금포함')}\n        salePrice={25000}\n        label={useStringLabel ? '트리플가' : <PricingLabel />}\n        priceLabelOverride={text('메세지')}\n        hideDiscountRate={boolean('할인률 미노출', false)}\n        isSoldOut={boolean('판매완료', false)}\n        rich\n        description={\n          useStringDescription ? (\n            text('설명', '쿠폰적용시 10,000원')\n          ) : (\n            <PricingDescription />\n          )\n        }\n      />\n    )\n  })\n  .add('Fixed', () => {\n    const hasAction = boolean('툴팁액션', true)\n    const useStringDescription = boolean('문자 타입의 설명')\n    const useStringLabel = boolean('문자 타입의 라벨')\n\n    return (\n      <Pricing\n        fixed\n        active={boolean('열림', true)}\n        basePrice={30000}\n        salePrice={25000}\n        priceLabelOverride={text('메세지')}\n        label={\n          useStringLabel ? (\n            text('라벨', '1박 세금포함')\n          ) : (\n            <Text size=\"mini\">1박 세금포함</Text>\n          )\n        }\n        buttonText=\"객실예약\"\n        buttonDisabled={boolean('버튼 비활성화', false)}\n        description={\n          useStringDescription ? (\n            text('설명', '쿠폰적용시 10,000원')\n          ) : (\n            <PricingDescription />\n          )\n        }\n        tooltipLabel={text('툴팁 라벨', '쿠폰사용시 -15,000원 더 할인!')}\n        onTooltipClick={hasAction ? () => window.alert('레릿꼬오') : null}\n        isSoldOut={boolean('판매완료', false)}\n      />\n    )\n  })\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/public-header\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { text, boolean, number } from '@storybook/addon-knobs'\\nimport PublicHeader from '@titicaca/public-header'\\n\\nstoriesOf('public-header | PublicHeader', module).add('일반', () => (\\n  <PublicHeader\\n    href={text('href', 'https://triple.guide')}\\n    playStoreUrl={text('playStoreUrl', 'asdf')}\\n    appStoreUrl={text('appStoreUrl', 'asdf')}\\n    fixed={boolean('fixed', false)}\\n    minWidth={number('minWidth')}\\n  />\\n))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"public-header-publicheader--일반\":{\"startLoc\":{\"col\":54,\"line\":6},\"endLoc\":{\"col\":1,\"line\":14},\"startBody\":{\"col\":60,\"line\":6},\"endBody\":{\"col\":1,\"line\":14}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/public-header.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { text, boolean, number } from '@storybook/addon-knobs'\nimport PublicHeader from '@titicaca/public-header'\n\nstoriesOf('public-header | PublicHeader', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).add('일반', () => (\n  <PublicHeader\n    href={text('href', 'https://triple.guide')}\n    playStoreUrl={text('playStoreUrl', 'asdf')}\n    appStoreUrl={text('appStoreUrl', 'asdf')}\n    fixed={boolean('fixed', false)}\n    minWidth={number('minWidth')}\n  />\n))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/react-contexts\";\n// @ts-ignore\nvar __STORY__ = \"import React, { useState, memo } from 'react'\\nimport styled from 'styled-components'\\nimport { storiesOf } from '@storybook/react'\\nimport { action } from '@storybook/addon-actions'\\nimport { ImagesProvider, useImagesContext } from '@titicaca/react-contexts'\\n\\nconst Section = styled.div`\\n  margin: 20px 0;\\n`\\n\\nconst SectionBody = styled.div`\\n  padding: 10px;\\n`\\n\\nconst Code = styled.code`\\n  display: block;\\n  max-height: 300px;\\n  padding: 20px;\\n  background-color: #eeeeee;\\n  font-family: monospace;\\n  white-space: pre;\\n  overflow: auto;\\n`\\n\\nfunction formatJSON(json) {\\n  return JSON.stringify(json, null, 4)\\n}\\n\\nfunction ImagesContextMonitor({ onFetched }) {\\n  const { images, total, actions } = useImagesContext()\\n  const [searchedIndex, setSearchedIndex] = useState(-1)\\n\\n  return (\\n    <div>\\n      <Section>\\n        <h2>actions</h2>\\n        <SectionBody>\\n          <button type=\\\"button\\\" onClick={() => actions.fetch(onFetched)}>\\n            fetch()\\n          </button>\\n\\n          <div>\\n            indexOf(\\n            <input\\n              type=\\\"text\\\"\\n              onChange={async (e) => {\\n                setSearchedIndex(await actions.indexOf({ id: e.target.value }))\\n              }}\\n            />\\n            ) -&gt; {searchedIndex}\\n          </div>\\n        </SectionBody>\\n      </Section>\\n\\n      <Section>\\n        <h2>images</h2>\\n        <SectionBody>\\n          <Code>{formatJSON(images)}</Code>\\n        </SectionBody>\\n      </Section>\\n\\n      <Section>\\n        <h2>total</h2>\\n        <SectionBody>\\n          <Code>{formatJSON(total)}</Code>\\n        </SectionBody>\\n      </Section>\\n    </div>\\n  )\\n}\\n\\nconst MemeoizedImagesContextMonitor = memo(ImagesContextMonitor)\\n\\nfunction fetchImages({ id, type }, { from, size }) {\\n  return fetch(`/api/content/${type}s/${id}/images?from=${from}&size=${size}`, {\\n    credentials: 'same-origin',\\n  })\\n}\\n\\nconst SAMPLE_SOURCE = {\\n  type: 'attraction',\\n  id: 'a86a3f55-9f89-4540-a124-f8c4db07ab34',\\n}\\n\\nconst handleFetched = action('fetch 완료 콜백')\\n\\nfunction RenderingTester() {\\n  const [count, setCount] = useState(0)\\n\\n  return (\\n    <>\\n      <button type=\\\"button\\\" onClick={() => setCount((count) => ++count)}>\\n        Provider 자식 re-render 하기\\n      </button>\\n\\n      <ImagesProvider source={SAMPLE_SOURCE} fetchImages={fetchImages}>\\n        <div style={{ border: 'dotted black 1px', padding: '5px' }}>\\n          {count}\\n\\n          <MemeoizedImagesContextMonitor onFetched={handleFetched} />\\n        </div>\\n      </ImagesProvider>\\n    </>\\n  )\\n}\\n\\nstoriesOf('react-contexts | ImagesContext', module)\\n  .add('데이터 확인', () => (\\n    <ImagesProvider source={SAMPLE_SOURCE} fetchImages={fetchImages}>\\n      <ImagesContextMonitor onFetched={handleFetched} />\\n    </ImagesProvider>\\n  ))\\n  .add('자식 렌더링 될 때 value 유지 테스트', () => <RenderingTester />)\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"react-contexts-imagescontext--자식-렌더링-될-때-value-유지-테스트\":{\"startLoc\":{\"col\":7,\"line\":113},\"endLoc\":{\"col\":59,\"line\":113},\"startBody\":{\"col\":34,\"line\":113},\"endBody\":{\"col\":59,\"line\":113}},\"react-contexts-imagescontext--데이터-확인\":{\"startLoc\":{\"col\":7,\"line\":108},\"endLoc\":{\"col\":3,\"line\":112},\"startBody\":{\"col\":17,\"line\":108},\"endBody\":{\"col\":3,\"line\":112}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/images-context.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React, { useState, memo } from 'react'\nimport styled from 'styled-components'\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\nimport { ImagesProvider, useImagesContext } from '@titicaca/react-contexts'\n\nconst Section = styled.div`\n  margin: 20px 0;\n`\n\nconst SectionBody = styled.div`\n  padding: 10px;\n`\n\nconst Code = styled.code`\n  display: block;\n  max-height: 300px;\n  padding: 20px;\n  background-color: #eeeeee;\n  font-family: monospace;\n  white-space: pre;\n  overflow: auto;\n`\n\nfunction formatJSON(json) {\n  return JSON.stringify(json, null, 4)\n}\n\nfunction ImagesContextMonitor({ onFetched }) {\n  const { images, total, actions } = useImagesContext()\n  const [searchedIndex, setSearchedIndex] = useState(-1)\n\n  return (\n    <div>\n      <Section>\n        <h2>actions</h2>\n        <SectionBody>\n          <button type=\"button\" onClick={() => actions.fetch(onFetched)}>\n            fetch()\n          </button>\n\n          <div>\n            indexOf(\n            <input\n              type=\"text\"\n              onChange={async (e) => {\n                setSearchedIndex(await actions.indexOf({ id: e.target.value }))\n              }}\n            />\n            ) -&gt; {searchedIndex}\n          </div>\n        </SectionBody>\n      </Section>\n\n      <Section>\n        <h2>images</h2>\n        <SectionBody>\n          <Code>{formatJSON(images)}</Code>\n        </SectionBody>\n      </Section>\n\n      <Section>\n        <h2>total</h2>\n        <SectionBody>\n          <Code>{formatJSON(total)}</Code>\n        </SectionBody>\n      </Section>\n    </div>\n  )\n}\n\nconst MemeoizedImagesContextMonitor = memo(ImagesContextMonitor)\n\nfunction fetchImages({ id, type }, { from, size }) {\n  return fetch(`/api/content/${type}s/${id}/images?from=${from}&size=${size}`, {\n    credentials: 'same-origin',\n  })\n}\n\nconst SAMPLE_SOURCE = {\n  type: 'attraction',\n  id: 'a86a3f55-9f89-4540-a124-f8c4db07ab34',\n}\n\nconst handleFetched = action('fetch 완료 콜백')\n\nfunction RenderingTester() {\n  const [count, setCount] = useState(0)\n\n  return (\n    <>\n      <button type=\"button\" onClick={() => setCount((count) => ++count)}>\n        Provider 자식 re-render 하기\n      </button>\n\n      <ImagesProvider source={SAMPLE_SOURCE} fetchImages={fetchImages}>\n        <div style={{ border: 'dotted black 1px', padding: '5px' }}>\n          {count}\n\n          <MemeoizedImagesContextMonitor onFetched={handleFetched} />\n        </div>\n      </ImagesProvider>\n    </>\n  )\n}\n\nstoriesOf('react-contexts | ImagesContext', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('데이터 확인', () => (\n    <ImagesProvider source={SAMPLE_SOURCE} fetchImages={fetchImages}>\n      <ImagesContextMonitor onFetched={handleFetched} />\n    </ImagesProvider>\n  ))\n  .add('자식 렌더링 될 때 value 유지 테스트', () => <RenderingTester />)\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/react-hooks\";\n// @ts-ignore\nvar __STORY__ = \"import React, { useEffect } from 'react'\\nimport {\\n  useScrollToElement,\\n  useScrollToAnchor,\\n  useVisibilityChange,\\n} from '@titicaca/react-hooks'\\nimport { boolean } from '@storybook/addon-knobs'\\n\\nexport default {\\n  title: 'react-hooks | hooks',\\n}\\n\\nexport function ScrollElement() {\\n  useScrollToElement('#app')\\n\\n  return (\\n    <div>\\n      <div style={{ height: '200vh' }}></div>\\n      <div id=\\\"app\\\">\\n        <h1>App</h1>\\n      </div>\\n    </div>\\n  )\\n}\\n\\nfunction ScrollToAnchorComponent({ useAlias }: { useAlias: boolean }) {\\n  useEffect(() => {\\n    window.history.pushState(null, '', '#app')\\n  }, [])\\n\\n  useScrollToAnchor({\\n    ...(useAlias\\n      ? {\\n          alias: {\\n            app: 'alias',\\n          },\\n        }\\n      : {}),\\n  })\\n\\n  return (\\n    <div>\\n      <div style={{ height: '200vh' }}></div>\\n      <div id=\\\"app\\\">\\n        <h1>App</h1>\\n      </div>\\n      <div style={{ height: '200vh' }}></div>\\n      <div id=\\\"alias\\\">\\n        <h1>Alias</h1>\\n      </div>\\n    </div>\\n  )\\n}\\n\\nexport function ScrollToAnchor() {\\n  const useAlias = boolean('use alias', false)\\n\\n  return (\\n    <ScrollToAnchorComponent key={Math.random() * 10} useAlias={useAlias} />\\n  )\\n}\\n\\nexport function VisibilityChange() {\\n  useVisibilityChange((visible) => {\\n    if (visible) {\\n      window.alert('visible !')\\n    }\\n  }, [])\\n\\n  return <div>useVisibilityChange</div>\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"react-hooks-hooks--scroll-element\":{\"startLoc\":{\"col\":7,\"line\":13},\"endLoc\":{\"col\":1,\"line\":24},\"startBody\":{\"col\":7,\"line\":13},\"endBody\":{\"col\":1,\"line\":24}},\"react-hooks-hooks--scroll-to-anchor\":{\"startLoc\":{\"col\":7,\"line\":55},\"endLoc\":{\"col\":1,\"line\":61},\"startBody\":{\"col\":7,\"line\":55},\"endBody\":{\"col\":1,\"line\":61}},\"react-hooks-hooks--visibility-change\":{\"startLoc\":{\"col\":7,\"line\":63},\"endLoc\":{\"col\":1,\"line\":71},\"startBody\":{\"col\":7,\"line\":63},\"endBody\":{\"col\":1,\"line\":71}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/hooks.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React, { useEffect } from 'react'\nimport {\n  useScrollToElement,\n  useScrollToAnchor,\n  useVisibilityChange,\n} from '@titicaca/react-hooks'\nimport { boolean } from '@storybook/addon-knobs'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React, { useEffect } from 'react'\\nimport {\\n  useScrollToElement,\\n  useScrollToAnchor,\\n  useVisibilityChange,\\n} from '@titicaca/react-hooks'\\nimport { boolean } from '@storybook/addon-knobs'\\n\\nexport default {\\n  title: 'react-hooks | hooks',\\n}\\n\\nexport function ScrollElement() {\\n  useScrollToElement('#app')\\n\\n  return (\\n    <div>\\n      <div style={{ height: '200vh' }}></div>\\n      <div id=\\\"app\\\">\\n        <h1>App</h1>\\n      </div>\\n    </div>\\n  )\\n}\\n\\nfunction ScrollToAnchorComponent({ useAlias }: { useAlias: boolean }) {\\n  useEffect(() => {\\n    window.history.pushState(null, '', '#app')\\n  }, [])\\n\\n  useScrollToAnchor({\\n    ...(useAlias\\n      ? {\\n          alias: {\\n            app: 'alias',\\n          },\\n        }\\n      : {}),\\n  })\\n\\n  return (\\n    <div>\\n      <div style={{ height: '200vh' }}></div>\\n      <div id=\\\"app\\\">\\n        <h1>App</h1>\\n      </div>\\n      <div style={{ height: '200vh' }}></div>\\n      <div id=\\\"alias\\\">\\n        <h1>Alias</h1>\\n      </div>\\n    </div>\\n  )\\n}\\n\\nexport function ScrollToAnchor() {\\n  const useAlias = boolean('use alias', false)\\n\\n  return (\\n    <ScrollToAnchorComponent key={Math.random() * 10} useAlias={useAlias} />\\n  )\\n}\\n\\nexport function VisibilityChange() {\\n  useVisibilityChange((visible) => {\\n    if (visible) {\\n      window.alert('visible !')\\n    }\\n  }, [])\\n\\n  return <div>useVisibilityChange</div>\\n}\\n\",\"locationsMap\":{\"react-hooks-hooks--scroll-element\":{\"startLoc\":{\"col\":7,\"line\":13},\"endLoc\":{\"col\":1,\"line\":24},\"startBody\":{\"col\":7,\"line\":13},\"endBody\":{\"col\":1,\"line\":24}},\"react-hooks-hooks--scroll-to-anchor\":{\"startLoc\":{\"col\":7,\"line\":55},\"endLoc\":{\"col\":1,\"line\":61},\"startBody\":{\"col\":7,\"line\":55},\"endBody\":{\"col\":1,\"line\":61}},\"react-hooks-hooks--visibility-change\":{\"startLoc\":{\"col\":7,\"line\":63},\"endLoc\":{\"col\":1,\"line\":71},\"startBody\":{\"col\":7,\"line\":63},\"endBody\":{\"col\":1,\"line\":71}}}},},\n  title: 'react-hooks | hooks',\n}\n\nexport const ScrollElement = addSourceDecorator(function ScrollElement() {\n  useScrollToElement('#app')\n\n  return (\n    <div>\n      <div style={{ height: '200vh' }}></div>\n      <div id=\"app\">\n        <h1>App</h1>\n      </div>\n    </div>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nfunction ScrollToAnchorComponent({ useAlias }: { useAlias: boolean }) {\n  useEffect(() => {\n    window.history.pushState(null, '', '#app')\n  }, [])\n\n  useScrollToAnchor({\n    ...(useAlias\n      ? {\n          alias: {\n            app: 'alias',\n          },\n        }\n      : {}),\n  })\n\n  return (\n    <div>\n      <div style={{ height: '200vh' }}></div>\n      <div id=\"app\">\n        <h1>App</h1>\n      </div>\n      <div style={{ height: '200vh' }}></div>\n      <div id=\"alias\">\n        <h1>Alias</h1>\n      </div>\n    </div>\n  )\n}\n\nexport const ScrollToAnchor = addSourceDecorator(function ScrollToAnchor() {\n  const useAlias = boolean('use alias', false)\n\n  return (\n    <ScrollToAnchorComponent key={Math.random() * 10} useAlias={useAlias} />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nexport const VisibilityChange = addSourceDecorator(function VisibilityChange() {\n  useVisibilityChange((visible) => {\n    if (visible) {\n      window.alert('visible !')\n    }\n  }, [])\n\n  return <div>useVisibilityChange</div>\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/recommended-contents\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { action } from '@storybook/addon-actions'\\nimport { Container, Text } from '@titicaca/core-elements'\\nimport RecommendedContents from '@titicaca/recommended-contents'\\n\\nimport { contents } from '../__mocks__/recommended-contents.sample.json'\\n\\nstoriesOf('recommended-contents | RecommendedContents', module).add(\\n  '추천 컨텐츠',\\n  () => (\\n    <Container margin={{ top: 50, left: 30, right: 30 }}>\\n      <Text size=\\\"big\\\" bold>\\n        다른 컨텐츠 더보기\\n      </Text>\\n      <RecommendedContents\\n        contents={contents}\\n        margin={{ top: 30 }}\\n        onContentIntersect={action('onContentIntersect')}\\n      />\\n    </Container>\\n  ),\\n)\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"recommended-contents-recommendedcontents--추천-컨텐츠\":{\"startLoc\":{\"col\":2,\"line\":10},\"endLoc\":{\"col\":3,\"line\":22},\"startBody\":{\"col\":2,\"line\":11},\"endBody\":{\"col\":3,\"line\":22}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/recommended-contents.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\nimport { Container, Text } from '@titicaca/core-elements'\nimport RecommendedContents from '@titicaca/recommended-contents'\n\nimport { contents } from '../__mocks__/recommended-contents.sample.json'\n\nstoriesOf('recommended-contents | RecommendedContents', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).add(\n  '추천 컨텐츠',\n  () => (\n    <Container margin={{ top: 50, left: 30, right: 30 }}>\n      <Text size=\"big\" bold>\n        다른 컨텐츠 더보기\n      </Text>\n      <RecommendedContents\n        contents={contents}\n        margin={{ top: 30 }}\n        onContentIntersect={action('onContentIntersect')}\n      />\n    </Container>\n  ),\n)\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/resource-list-element\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { number, array } from '@storybook/addon-knobs'\\nimport {\\n  ReviewScrapStat,\\n  ResourceListElementStats,\\n} from '@titicaca/resource-list-element'\\n\\nstoriesOf('resource-list-element | resource-list-element', module)\\n  .add('ReviewScrapStat', () => (\\n    <ReviewScrapStat\\n      reviewsCount={number('reviewsCount', 2)}\\n      scrapsCount={number('scrapsCount', 0)}\\n      reviewsRating={number('reviewsRating', 3.7, { min: 1, max: 5 })}\\n    />\\n  ))\\n  .add('ResourceListElementStats', () => (\\n    <ResourceListElementStats stats={array('stats', ['볼거리', '판교'])} />\\n  ))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"resource-list-element-resource-list-element--resourcelistelementstats\":{\"startLoc\":{\"col\":7,\"line\":17},\"endLoc\":{\"col\":3,\"line\":19},\"startBody\":{\"col\":35,\"line\":17},\"endBody\":{\"col\":3,\"line\":19}},\"resource-list-element-resource-list-element--reviewscrapstat\":{\"startLoc\":{\"col\":7,\"line\":10},\"endLoc\":{\"col\":3,\"line\":16},\"startBody\":{\"col\":26,\"line\":10},\"endBody\":{\"col\":3,\"line\":16}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/resource-list-element.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { number, array } from '@storybook/addon-knobs'\nimport {\n  ReviewScrapStat,\n  ResourceListElementStats,\n} from '@titicaca/resource-list-element'\n\nstoriesOf('resource-list-element | resource-list-element', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('ReviewScrapStat', () => (\n    <ReviewScrapStat\n      reviewsCount={number('reviewsCount', 2)}\n      scrapsCount={number('scrapsCount', 0)}\n      reviewsRating={number('reviewsRating', 3.7, { min: 1, max: 5 })}\n    />\n  ))\n  .add('ResourceListElementStats', () => (\n    <ResourceListElementStats stats={array('stats', ['볼거리', '판교'])} />\n  ))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/reviews\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport ReviewsPlaceholder from '@titicaca/review/lib/review-placeholder-with-rating'\\nimport { storiesOf } from '@storybook/react'\\nimport { select } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\n\\nstoriesOf('Reviews | Reviews', module).add('플레이스홀더', () => (\\n  <ReviewsPlaceholder\\n    resourceType={select(\\n      'Resource Type',\\n      ['poi', 'tna', 'article', 'hotel', 'default'],\\n      'tna',\\n    )}\\n    appUrlScheme=\\\"triple\\\"\\n    onClick={action('clicked')}\\n  />\\n))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"reviews-reviews--플레이스홀더\":{\"startLoc\":{\"col\":43,\"line\":7},\"endLoc\":{\"col\":1,\"line\":17},\"startBody\":{\"col\":53,\"line\":7},\"endBody\":{\"col\":1,\"line\":17}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/reviews-placeholder.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport ReviewsPlaceholder from '@titicaca/review/lib/review-placeholder-with-rating'\nimport { storiesOf } from '@storybook/react'\nimport { select } from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\n\nstoriesOf('Reviews | Reviews', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).add('플레이스홀더', () => (\n  <ReviewsPlaceholder\n    resourceType={select(\n      'Resource Type',\n      ['poi', 'tna', 'article', 'hotel', 'default'],\n      'tna',\n    )}\n    appUrlScheme=\"triple\"\n    onClick={action('clicked')}\n  />\n))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/reviews\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { number, text, select, boolean } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport { TransitionModal } from '@titicaca/modals'\\nimport { Reviews, ReviewLikesProvider } from '@titicaca/review'\\nimport {\\n  UserAgentProvider,\\n  generateUserAgentValues,\\n  HistoryProvider,\\n} from '@titicaca/react-contexts'\\nimport { storiesOf } from '@storybook/react'\\n\\nstoriesOf('Reviews | Reviews', module).add('일반', () => (\\n  <ReviewLikesProvider\\n    subscribeLikedChangeEvent={action('subscribeLikedChangeEvent')}\\n    notifyReviewLiked={action('notifyReviewLiked')}\\n    notifyReviewUnliked={action('notifyReviewUnliked')}\\n  >\\n    <UserAgentProvider\\n      value={generateUserAgentValues(\\n        select(\\n          'User-Agent',\\n          [\\n            'Mozilla/5.0 (iPhone; CPU iPhone OS 12_3_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148;Triple-iOS/3.0.0',\\n            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36',\\n          ],\\n          'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36',\\n        ),\\n      )}\\n    >\\n      <HistoryProvider>\\n        <TransitionModal deepLink=\\\"/\\\" />\\n        <Reviews\\n          shortened={boolean('Shortened', false)}\\n          reviewsCount={number('Review count', 120)}\\n          appNativeActions={{\\n            subscribeReviewUpdateEvent: action('subscribeReviewUpdateEvent'),\\n            unsubscribeReviewUpdateEvent: action(\\n              'unsubscribeReviewUpdateEvent',\\n            ),\\n            notifyReviewDeleted: action('notifyReviewDeleted'),\\n            showToast: action('showToast'),\\n          }}\\n          resourceId={text(\\n            'Resource ID',\\n            'f939b4cb-ea3b-34b6-b430-eb5d28fbf467',\\n          )}\\n          resourceType={select(\\n            'Resource Type',\\n            ['poi', 'tna', 'article', 'hotel'],\\n            'tna',\\n          )}\\n          placeholderText={text('placeholder text', '이 투어·티켓 어떠셨나요?')}\\n          onFullListButtonClick={action('onFullListButtonClick')}\\n        />\\n      </HistoryProvider>\\n    </UserAgentProvider>\\n  </ReviewLikesProvider>\\n))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"reviews-reviews--일반\":{\"startLoc\":{\"col\":43,\"line\":13},\"endLoc\":{\"col\":1,\"line\":59},\"startBody\":{\"col\":49,\"line\":13},\"endBody\":{\"col\":1,\"line\":59}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/reviews.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { number, text, select, boolean } from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\nimport { TransitionModal } from '@titicaca/modals'\nimport { Reviews, ReviewLikesProvider } from '@titicaca/review'\nimport {\n  UserAgentProvider,\n  generateUserAgentValues,\n  HistoryProvider,\n} from '@titicaca/react-contexts'\nimport { storiesOf } from '@storybook/react'\n\nstoriesOf('Reviews | Reviews', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).add('일반', () => (\n  <ReviewLikesProvider\n    subscribeLikedChangeEvent={action('subscribeLikedChangeEvent')}\n    notifyReviewLiked={action('notifyReviewLiked')}\n    notifyReviewUnliked={action('notifyReviewUnliked')}\n  >\n    <UserAgentProvider\n      value={generateUserAgentValues(\n        select(\n          'User-Agent',\n          [\n            'Mozilla/5.0 (iPhone; CPU iPhone OS 12_3_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148;Triple-iOS/3.0.0',\n            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36',\n          ],\n          'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36',\n        ),\n      )}\n    >\n      <HistoryProvider>\n        <TransitionModal deepLink=\"/\" />\n        <Reviews\n          shortened={boolean('Shortened', false)}\n          reviewsCount={number('Review count', 120)}\n          appNativeActions={{\n            subscribeReviewUpdateEvent: action('subscribeReviewUpdateEvent'),\n            unsubscribeReviewUpdateEvent: action(\n              'unsubscribeReviewUpdateEvent',\n            ),\n            notifyReviewDeleted: action('notifyReviewDeleted'),\n            showToast: action('showToast'),\n          }}\n          resourceId={text(\n            'Resource ID',\n            'f939b4cb-ea3b-34b6-b430-eb5d28fbf467',\n          )}\n          resourceType={select(\n            'Resource Type',\n            ['poi', 'tna', 'article', 'hotel'],\n            'tna',\n          )}\n          placeholderText={text('placeholder text', '이 투어·티켓 어떠셨나요?')}\n          onFullListButtonClick={action('onFullListButtonClick')}\n        />\n      </HistoryProvider>\n    </UserAgentProvider>\n  </ReviewLikesProvider>\n))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/scrap-button\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean } from '@storybook/addon-knobs'\\nimport ScrapButton from '@titicaca/scrap-button'\\nimport styled from 'styled-components'\\n\\nconst ScrapButtonWrapper = styled.div`\\n  position: relative;\\n  width: 100%;\\n  max-width: 500px;\\n  height: 500px;\\n  border: solid 1px black;\\n  padding: 20px;\\n`\\n\\nstoriesOf('ScrapButton | ScrapButton', module)\\n  .add('일반', () => (\\n    <ScrapButtonWrapper>\\n      <ScrapButton\\n        scraped={boolean('scraped', false)}\\n        onScrapedChange={action('scraped changed')}\\n        resource={{ a: 'test' }}\\n      />\\n      position: relative\\n    </ScrapButtonWrapper>\\n  ))\\n  .add('compact', () => (\\n    <ScrapButtonWrapper>\\n      <ScrapButton\\n        scraped={boolean('scraped', false)}\\n        onScrapedChange={action('scraped changed')}\\n        resource={{ a: 'test' }}\\n        compact\\n      />\\n      position: relative\\n    </ScrapButtonWrapper>\\n  ))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"scrapbutton-scrapbutton--compact\":{\"startLoc\":{\"col\":7,\"line\":28},\"endLoc\":{\"col\":3,\"line\":38},\"startBody\":{\"col\":18,\"line\":28},\"endBody\":{\"col\":3,\"line\":38}},\"scrapbutton-scrapbutton--일반\":{\"startLoc\":{\"col\":7,\"line\":18},\"endLoc\":{\"col\":3,\"line\":27},\"startBody\":{\"col\":13,\"line\":18},\"endBody\":{\"col\":3,\"line\":27}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/index.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\nimport { boolean } from '@storybook/addon-knobs'\nimport ScrapButton from '@titicaca/scrap-button'\nimport styled from 'styled-components'\n\nconst ScrapButtonWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  height: 500px;\n  border: solid 1px black;\n  padding: 20px;\n`\n\nstoriesOf('ScrapButton | ScrapButton', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('일반', () => (\n    <ScrapButtonWrapper>\n      <ScrapButton\n        scraped={boolean('scraped', false)}\n        onScrapedChange={action('scraped changed')}\n        resource={{ a: 'test' }}\n      />\n      position: relative\n    </ScrapButtonWrapper>\n  ))\n  .add('compact', () => (\n    <ScrapButtonWrapper>\n      <ScrapButton\n        scraped={boolean('scraped', false)}\n        onScrapedChange={action('scraped changed')}\n        resource={{ a: 'test' }}\n        compact\n      />\n      position: relative\n    </ScrapButtonWrapper>\n  ))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/search\";\n// @ts-ignore\nvar __STORY__ = \"import React, { useCallback, useState } from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { action } from '@storybook/addon-actions'\\nimport { text } from '@storybook/addon-knobs'\\nimport { Button, Section } from '@titicaca/core-elements'\\nimport Search from '@titicaca/search'\\nimport { PoiListElement } from '@titicaca/poi-list-elements'\\n\\nstoriesOf('search | Search', module)\\n  .add('Uncontrolled', () => (\\n    <Search\\n      onDelete={action('onDelete')}\\n      onAutoComplete={action('onAutoComplete')}\\n      onEnter={action('onEnter')}\\n      onInputChange={action('onInputChange')}\\n      placeholder={text('Placeholder', '“항공권 예약” 도시이름으로 검색')}\\n    />\\n  ))\\n  .add('Controlled', () => {\\n    const [keyword, setKeyword] = useState('')\\n\\n    return (\\n      <>\\n        <Search\\n          keyword={text('keyword', keyword)}\\n          defaultKeyword={text('defaultKeyword', '')}\\n          onDelete={action('onDelete')}\\n          onAutoComplete={action('onAutoComplete')}\\n          onEnter={action('onEnter')}\\n          onInputChange={setKeyword}\\n          placeholder={text('Placeholder', '“항공권 예약” 도시이름으로 검색')}\\n        />\\n        <Button onClick={() => setKeyword('')}>Clear</Button>\\n      </>\\n    )\\n  })\\n  .add('Sample', () => {\\n    const [results, setResults] = useState([])\\n\\n    const searchPois = useCallback(\\n      async (keyword) => {\\n        const response = await fetch(\\n          `/api/content/pois?keyword=${encodeURIComponent(keyword)}`,\\n        )\\n        setResults(await response.json())\\n      },\\n      [setResults],\\n    )\\n\\n    return (\\n      <Search\\n        onDelete={action('onDelete')}\\n        onAutoComplete={searchPois}\\n        onEnter={action('onEnter')}\\n        onInputChange={action('onInputChange')}\\n        defaultKeyword={text('defaultKeyword', '')}\\n        placeholder={text('Placeholder', '“항공권 예약” 도시이름으로 검색')}\\n      >\\n        <Section padding={{ left: 10, right: 10 }}>\\n          {results.map((result) => (\\n            <PoiListElement\\n              key={result.id}\\n              compact\\n              poi={result}\\n              resourceScraps={{}}\\n            />\\n          ))}\\n        </Section>\\n      </Search>\\n    )\\n  })\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"search-search--sample\":{\"startLoc\":{\"col\":7,\"line\":37},\"endLoc\":{\"col\":3,\"line\":71},\"startBody\":{\"col\":17,\"line\":37},\"endBody\":{\"col\":3,\"line\":71}},\"search-search--controlled\":{\"startLoc\":{\"col\":7,\"line\":19},\"endLoc\":{\"col\":3,\"line\":36},\"startBody\":{\"col\":21,\"line\":19},\"endBody\":{\"col\":3,\"line\":36}},\"search-search--uncontrolled\":{\"startLoc\":{\"col\":7,\"line\":10},\"endLoc\":{\"col\":3,\"line\":18},\"startBody\":{\"col\":23,\"line\":10},\"endBody\":{\"col\":3,\"line\":18}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/search.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React, { useCallback, useState } from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\nimport { text } from '@storybook/addon-knobs'\nimport { Button, Section } from '@titicaca/core-elements'\nimport Search from '@titicaca/search'\nimport { PoiListElement } from '@titicaca/poi-list-elements'\n\nstoriesOf('search | Search', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('Uncontrolled', () => (\n    <Search\n      onDelete={action('onDelete')}\n      onAutoComplete={action('onAutoComplete')}\n      onEnter={action('onEnter')}\n      onInputChange={action('onInputChange')}\n      placeholder={text('Placeholder', '“항공권 예약” 도시이름으로 검색')}\n    />\n  ))\n  .add('Controlled', () => {\n    const [keyword, setKeyword] = useState('')\n\n    return (\n      <>\n        <Search\n          keyword={text('keyword', keyword)}\n          defaultKeyword={text('defaultKeyword', '')}\n          onDelete={action('onDelete')}\n          onAutoComplete={action('onAutoComplete')}\n          onEnter={action('onEnter')}\n          onInputChange={setKeyword}\n          placeholder={text('Placeholder', '“항공권 예약” 도시이름으로 검색')}\n        />\n        <Button onClick={() => setKeyword('')}>Clear</Button>\n      </>\n    )\n  })\n  .add('Sample', () => {\n    const [results, setResults] = useState([])\n\n    const searchPois = useCallback(\n      async (keyword) => {\n        const response = await fetch(\n          `/api/content/pois?keyword=${encodeURIComponent(keyword)}`,\n        )\n        setResults(await response.json())\n      },\n      [setResults],\n    )\n\n    return (\n      <Search\n        onDelete={action('onDelete')}\n        onAutoComplete={searchPois}\n        onEnter={action('onEnter')}\n        onInputChange={action('onInputChange')}\n        defaultKeyword={text('defaultKeyword', '')}\n        placeholder={text('Placeholder', '“항공권 예약” 도시이름으로 검색')}\n      >\n        <Section padding={{ left: 10, right: 10 }}>\n          {results.map((result) => (\n            <PoiListElement\n              key={result.id}\n              compact\n              poi={result}\n              resourceScraps={{}}\n            />\n          ))}\n        </Section>\n      </Search>\n    )\n  })\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/slider\";\n// @ts-ignore\nvar __STORY__ = \"import React, { useState } from 'react'\\nimport { number, boolean } from '@storybook/addon-knobs'\\nimport { SingleSlider, RangeSlider } from '@titicaca/slider'\\nimport { Text } from '@titicaca/core-elements'\\n\\nfunction SingleLabel({ value }: { value: number }) {\\n  return <Text size=\\\"large\\\">컴포넌트 내부: {value}</Text>\\n}\\n\\nfunction RangeLabel({\\n  fromValue,\\n  toValue,\\n}: {\\n  fromValue: number\\n  toValue: number\\n}) {\\n  return (\\n    <Text size=\\\"large\\\">\\n      컴포넌트 내부: {fromValue} ~ {toValue}\\n    </Text>\\n  )\\n}\\n\\nexport default {\\n  title: 'slider | Slider',\\n}\\n\\nexport function BaseSingleSlider() {\\n  const [value, setValue] = useState(500000)\\n\\n  return (\\n    <div>\\n      컴포넌트 외부: {value}\\n      <SingleSlider\\n        initialValue={value}\\n        min={0}\\n        max={500000}\\n        onChange={setValue}\\n        labelComponent={SingleLabel}\\n        debounceTime={number('debounceTime', 800)}\\n        nonLinear={boolean('nonLinear', false)}\\n      />\\n    </div>\\n  )\\n}\\n\\nBaseSingleSlider.story = {\\n  name: 'SingleSlider',\\n}\\n\\nexport function BaseRangeSlider() {\\n  const [values, setValues] = useState([0, 500000])\\n  return (\\n    <div>\\n      컴포넌트 외부: {values.join(', ')}\\n      <RangeSlider\\n        initialValues={values}\\n        min={0}\\n        max={500000}\\n        onChange={([form, to]) => {\\n          setValues([form, to])\\n        }}\\n        labelComponent={RangeLabel}\\n        debounceTime={number('debounceTime', 800)}\\n        nonLinear={boolean('nonLinear', false)}\\n      />\\n    </div>\\n  )\\n}\\n\\nBaseRangeSlider.story = {\\n  name: 'RangeSlider',\\n}\\n\\nexport function AdjustedRangeSlider() {\\n  const [values, setValues] = useState([1, 31])\\n  return (\\n    <div>\\n      컴포넌트 외부: {values.join(', ')}\\n      <RangeSlider\\n        initialValues={values}\\n        min={1}\\n        max={31}\\n        step={3}\\n        onChange={([form, to]) => {\\n          setValues([form, to])\\n        }}\\n        adjustInitValues\\n        labelComponent={RangeLabel}\\n        debounceTime={number('debounceTime', 800)}\\n        nonLinear={boolean('nonLinear', false)}\\n      />\\n    </div>\\n  )\\n}\\n\\nAdjustedRangeSlider.story = {\\n  name: 'AdjustedRangeSlider',\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"slider-slider--base-single-slider\":{\"startLoc\":{\"col\":7,\"line\":28},\"endLoc\":{\"col\":1,\"line\":45},\"startBody\":{\"col\":7,\"line\":28},\"endBody\":{\"col\":1,\"line\":45}},\"slider-slider--base-range-slider\":{\"startLoc\":{\"col\":7,\"line\":51},\"endLoc\":{\"col\":1,\"line\":69},\"startBody\":{\"col\":7,\"line\":51},\"endBody\":{\"col\":1,\"line\":69}},\"slider-slider--adjusted-range-slider\":{\"startLoc\":{\"col\":7,\"line\":75},\"endLoc\":{\"col\":1,\"line\":95},\"startBody\":{\"col\":7,\"line\":75},\"endBody\":{\"col\":1,\"line\":95}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/slider.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React, { useState } from 'react'\nimport { number, boolean } from '@storybook/addon-knobs'\nimport { SingleSlider, RangeSlider } from '@titicaca/slider'\nimport { Text } from '@titicaca/core-elements'\n\nfunction SingleLabel({ value }: { value: number }) {\n  return <Text size=\"large\">컴포넌트 내부: {value}</Text>\n}\n\nfunction RangeLabel({\n  fromValue,\n  toValue,\n}: {\n  fromValue: number\n  toValue: number\n}) {\n  return (\n    <Text size=\"large\">\n      컴포넌트 내부: {fromValue} ~ {toValue}\n    </Text>\n  )\n}\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React, { useState } from 'react'\\nimport { number, boolean } from '@storybook/addon-knobs'\\nimport { SingleSlider, RangeSlider } from '@titicaca/slider'\\nimport { Text } from '@titicaca/core-elements'\\n\\nfunction SingleLabel({ value }: { value: number }) {\\n  return <Text size=\\\"large\\\">컴포넌트 내부: {value}</Text>\\n}\\n\\nfunction RangeLabel({\\n  fromValue,\\n  toValue,\\n}: {\\n  fromValue: number\\n  toValue: number\\n}) {\\n  return (\\n    <Text size=\\\"large\\\">\\n      컴포넌트 내부: {fromValue} ~ {toValue}\\n    </Text>\\n  )\\n}\\n\\nexport default {\\n  title: 'slider | Slider',\\n}\\n\\nexport function BaseSingleSlider() {\\n  const [value, setValue] = useState(500000)\\n\\n  return (\\n    <div>\\n      컴포넌트 외부: {value}\\n      <SingleSlider\\n        initialValue={value}\\n        min={0}\\n        max={500000}\\n        onChange={setValue}\\n        labelComponent={SingleLabel}\\n        debounceTime={number('debounceTime', 800)}\\n        nonLinear={boolean('nonLinear', false)}\\n      />\\n    </div>\\n  )\\n}\\n\\nBaseSingleSlider.story = {\\n  name: 'SingleSlider',\\n}\\n\\nexport function BaseRangeSlider() {\\n  const [values, setValues] = useState([0, 500000])\\n  return (\\n    <div>\\n      컴포넌트 외부: {values.join(', ')}\\n      <RangeSlider\\n        initialValues={values}\\n        min={0}\\n        max={500000}\\n        onChange={([form, to]) => {\\n          setValues([form, to])\\n        }}\\n        labelComponent={RangeLabel}\\n        debounceTime={number('debounceTime', 800)}\\n        nonLinear={boolean('nonLinear', false)}\\n      />\\n    </div>\\n  )\\n}\\n\\nBaseRangeSlider.story = {\\n  name: 'RangeSlider',\\n}\\n\\nexport function AdjustedRangeSlider() {\\n  const [values, setValues] = useState([1, 31])\\n  return (\\n    <div>\\n      컴포넌트 외부: {values.join(', ')}\\n      <RangeSlider\\n        initialValues={values}\\n        min={1}\\n        max={31}\\n        step={3}\\n        onChange={([form, to]) => {\\n          setValues([form, to])\\n        }}\\n        adjustInitValues\\n        labelComponent={RangeLabel}\\n        debounceTime={number('debounceTime', 800)}\\n        nonLinear={boolean('nonLinear', false)}\\n      />\\n    </div>\\n  )\\n}\\n\\nAdjustedRangeSlider.story = {\\n  name: 'AdjustedRangeSlider',\\n}\\n\",\"locationsMap\":{\"slider-slider--base-single-slider\":{\"startLoc\":{\"col\":7,\"line\":28},\"endLoc\":{\"col\":1,\"line\":45},\"startBody\":{\"col\":7,\"line\":28},\"endBody\":{\"col\":1,\"line\":45}},\"slider-slider--base-range-slider\":{\"startLoc\":{\"col\":7,\"line\":51},\"endLoc\":{\"col\":1,\"line\":69},\"startBody\":{\"col\":7,\"line\":51},\"endBody\":{\"col\":1,\"line\":69}},\"slider-slider--adjusted-range-slider\":{\"startLoc\":{\"col\":7,\"line\":75},\"endLoc\":{\"col\":1,\"line\":95},\"startBody\":{\"col\":7,\"line\":75},\"endBody\":{\"col\":1,\"line\":95}}}},},\n  title: 'slider | Slider',\n}\n\nexport const BaseSingleSlider = addSourceDecorator(function BaseSingleSlider() {\n  const [value, setValue] = useState(500000)\n\n  return (\n    <div>\n      컴포넌트 외부: {value}\n      <SingleSlider\n        initialValue={value}\n        min={0}\n        max={500000}\n        onChange={setValue}\n        labelComponent={SingleLabel}\n        debounceTime={number('debounceTime', 800)}\n        nonLinear={boolean('nonLinear', false)}\n      />\n    </div>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nBaseSingleSlider.story = {\n  name: 'SingleSlider',\n}\n\nexport const BaseRangeSlider = addSourceDecorator(function BaseRangeSlider() {\n  const [values, setValues] = useState([0, 500000])\n  return (\n    <div>\n      컴포넌트 외부: {values.join(', ')}\n      <RangeSlider\n        initialValues={values}\n        min={0}\n        max={500000}\n        onChange={([form, to]) => {\n          setValues([form, to])\n        }}\n        labelComponent={RangeLabel}\n        debounceTime={number('debounceTime', 800)}\n        nonLinear={boolean('nonLinear', false)}\n      />\n    </div>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nBaseRangeSlider.story = {\n  name: 'RangeSlider',\n}\n\nexport const AdjustedRangeSlider = addSourceDecorator(function AdjustedRangeSlider() {\n  const [values, setValues] = useState([1, 31])\n  return (\n    <div>\n      컴포넌트 외부: {values.join(', ')}\n      <RangeSlider\n        initialValues={values}\n        min={1}\n        max={31}\n        step={3}\n        onChange={([form, to]) => {\n          setValues([form, to])\n        }}\n        adjustInitValues\n        labelComponent={RangeLabel}\n        debounceTime={number('debounceTime', 800)}\n        nonLinear={boolean('nonLinear', false)}\n      />\n    </div>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nAdjustedRangeSlider.story = {\n  name: 'AdjustedRangeSlider',\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/social-reviews\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport SocialReviews from '@titicaca/social-reviews'\\n\\nexport default {\\n  title: 'Social-Reviews | SocialReviews',\\n}\\n\\nexport function BaseSocialReviews() {\\n  return (\\n    <SocialReviews\\n      socialReviews={[\\n        {\\n          imageUrl:\\n            'http://blogthumb2.naver.net/MjAxNjExMDJfMTg5/MDAxNDc4MDkyMDQ0Nzgx.RSVFZBvGK1R6PZ8lKI48lszxcDPSTgbmzPXkhWUKWXkg.pBzoIKizCnBCwa8I4iHkgH_VXkGKXv_MROGWl1_ykbkg.JPEG.maron0505/NaverBlog_20161102_220724_10.jpg?type=w2',\\n          publisher: 'maron0505.blog.me',\\n          title: '10월 할로윈 도쿄 디즈니 리조트',\\n          url: 'http://maron0505.blog.me/220851987631',\\n        },\\n        {\\n          imageUrl:\\n            'http://blogthumb2.naver.net/MjAxNzAxMDhfMjI5/MDAxNDgzODc3MDYxNTg4.uIZEmtluXxDr1FCMOl-Jw4UooHbWSxTm7cQDoTUf8lIg.QTa8i9r1x5f7OJKd01iWmyZiptVfdFhhvPdOqOxgsxMg.JPEG.annatomo/IMG_5261.JPG?type=w2',\\n          publisher: 'blog.naver.com',\\n          title: '도쿄 디즈니랜드 후기 및 꿀팁 ! (2편)',\\n          url: 'http://blog.naver.com/annatomo/220905940459',\\n        },\\n        {\\n          imageUrl:\\n            'http://blogthumb2.naver.net/MjAxNzAxMDlfMTQy/MDAxNDgzODkwNjAxMjM4.7NCd9Fz2JM1POxwdni37vyFFpYtUrpwp8tqah8w4RDMg.GLcluxHpLHDTdFVRuQvwUQBU8zuSw0juQKSDkicyvvYg.JPEG.the_saeng/se3_image_2676960158.jpg?type=w2',\\n          publisher: 'blog.naver.com',\\n          title:\\n            '[2017 일본 도쿄 자유여행] 4박 5일 도쿄 자유여행 3일차! / 도쿄 디즈니랜드 가는 법 , 도쿄 디즈니랜드 후기',\\n          url: 'http://blog.naver.com/the_saeng/220907041546',\\n        },\\n        {\\n          imageUrl:\\n            'http://blogthumb2.naver.net/MjAxNzAzMjJfMTIg/MDAxNDkwMTkyMDg1MTU1.i7O0IdvyyhMt9V3GXUsYSBhZdTmSNkBZsGrbm0knqxcg.V6snrTTAshB2bRBXjFm8fzP--UWL1n7mN2jF5xKDMLcg.JPEG.ttttt10/P1010918.JPG?type=w2',\\n          publisher: 'blog.naver.com',\\n          title: '도쿄자유여행: 도쿄 디즈니랜드 후기',\\n          url: 'http://blog.naver.com/ttttt10/220964776844',\\n        },\\n        {\\n          imageUrl:\\n            'http://blogthumb2.naver.net/MjAxNzAzMjhfNiAg/MDAxNDkwNjU3MTcwNDQy.kqd2jsXjsLT6UVB6PPI7cow8I-CtC0cAuVueh0ff5VEg.xvNKPFnXScAWq-2O4tCPLLUANb7jnbxur9KHIxrYCaMg.JPEG.sheepo1234/attachImage_3526602166.jpeg?type=w2',\\n          publisher: 'blog.naver.com',\\n          title: '도쿄 2박3일 자유여행 : 도쿄 디즈니랜드 퍼레이드 후기',\\n          url: 'http://blog.naver.com/sheepo1234/220969523448',\\n        },\\n      ]}\\n    />\\n  )\\n}\\n\\nBaseSocialReviews.story = {\\n  name: '기본 SocialReviews',\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"social-reviews-socialreviews--base-social-reviews\":{\"startLoc\":{\"col\":7,\"line\":8},\"endLoc\":{\"col\":1,\"line\":51},\"startBody\":{\"col\":7,\"line\":8},\"endBody\":{\"col\":1,\"line\":51}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/social-reviews.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport SocialReviews from '@titicaca/social-reviews'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport SocialReviews from '@titicaca/social-reviews'\\n\\nexport default {\\n  title: 'Social-Reviews | SocialReviews',\\n}\\n\\nexport function BaseSocialReviews() {\\n  return (\\n    <SocialReviews\\n      socialReviews={[\\n        {\\n          imageUrl:\\n            'http://blogthumb2.naver.net/MjAxNjExMDJfMTg5/MDAxNDc4MDkyMDQ0Nzgx.RSVFZBvGK1R6PZ8lKI48lszxcDPSTgbmzPXkhWUKWXkg.pBzoIKizCnBCwa8I4iHkgH_VXkGKXv_MROGWl1_ykbkg.JPEG.maron0505/NaverBlog_20161102_220724_10.jpg?type=w2',\\n          publisher: 'maron0505.blog.me',\\n          title: '10월 할로윈 도쿄 디즈니 리조트',\\n          url: 'http://maron0505.blog.me/220851987631',\\n        },\\n        {\\n          imageUrl:\\n            'http://blogthumb2.naver.net/MjAxNzAxMDhfMjI5/MDAxNDgzODc3MDYxNTg4.uIZEmtluXxDr1FCMOl-Jw4UooHbWSxTm7cQDoTUf8lIg.QTa8i9r1x5f7OJKd01iWmyZiptVfdFhhvPdOqOxgsxMg.JPEG.annatomo/IMG_5261.JPG?type=w2',\\n          publisher: 'blog.naver.com',\\n          title: '도쿄 디즈니랜드 후기 및 꿀팁 ! (2편)',\\n          url: 'http://blog.naver.com/annatomo/220905940459',\\n        },\\n        {\\n          imageUrl:\\n            'http://blogthumb2.naver.net/MjAxNzAxMDlfMTQy/MDAxNDgzODkwNjAxMjM4.7NCd9Fz2JM1POxwdni37vyFFpYtUrpwp8tqah8w4RDMg.GLcluxHpLHDTdFVRuQvwUQBU8zuSw0juQKSDkicyvvYg.JPEG.the_saeng/se3_image_2676960158.jpg?type=w2',\\n          publisher: 'blog.naver.com',\\n          title:\\n            '[2017 일본 도쿄 자유여행] 4박 5일 도쿄 자유여행 3일차! / 도쿄 디즈니랜드 가는 법 , 도쿄 디즈니랜드 후기',\\n          url: 'http://blog.naver.com/the_saeng/220907041546',\\n        },\\n        {\\n          imageUrl:\\n            'http://blogthumb2.naver.net/MjAxNzAzMjJfMTIg/MDAxNDkwMTkyMDg1MTU1.i7O0IdvyyhMt9V3GXUsYSBhZdTmSNkBZsGrbm0knqxcg.V6snrTTAshB2bRBXjFm8fzP--UWL1n7mN2jF5xKDMLcg.JPEG.ttttt10/P1010918.JPG?type=w2',\\n          publisher: 'blog.naver.com',\\n          title: '도쿄자유여행: 도쿄 디즈니랜드 후기',\\n          url: 'http://blog.naver.com/ttttt10/220964776844',\\n        },\\n        {\\n          imageUrl:\\n            'http://blogthumb2.naver.net/MjAxNzAzMjhfNiAg/MDAxNDkwNjU3MTcwNDQy.kqd2jsXjsLT6UVB6PPI7cow8I-CtC0cAuVueh0ff5VEg.xvNKPFnXScAWq-2O4tCPLLUANb7jnbxur9KHIxrYCaMg.JPEG.sheepo1234/attachImage_3526602166.jpeg?type=w2',\\n          publisher: 'blog.naver.com',\\n          title: '도쿄 2박3일 자유여행 : 도쿄 디즈니랜드 퍼레이드 후기',\\n          url: 'http://blog.naver.com/sheepo1234/220969523448',\\n        },\\n      ]}\\n    />\\n  )\\n}\\n\\nBaseSocialReviews.story = {\\n  name: '기본 SocialReviews',\\n}\\n\",\"locationsMap\":{\"social-reviews-socialreviews--base-social-reviews\":{\"startLoc\":{\"col\":7,\"line\":8},\"endLoc\":{\"col\":1,\"line\":51},\"startBody\":{\"col\":7,\"line\":8},\"endBody\":{\"col\":1,\"line\":51}}}},},\n  title: 'Social-Reviews | SocialReviews',\n}\n\nexport const BaseSocialReviews = addSourceDecorator(function BaseSocialReviews() {\n  return (\n    <SocialReviews\n      socialReviews={[\n        {\n          imageUrl:\n            'http://blogthumb2.naver.net/MjAxNjExMDJfMTg5/MDAxNDc4MDkyMDQ0Nzgx.RSVFZBvGK1R6PZ8lKI48lszxcDPSTgbmzPXkhWUKWXkg.pBzoIKizCnBCwa8I4iHkgH_VXkGKXv_MROGWl1_ykbkg.JPEG.maron0505/NaverBlog_20161102_220724_10.jpg?type=w2',\n          publisher: 'maron0505.blog.me',\n          title: '10월 할로윈 도쿄 디즈니 리조트',\n          url: 'http://maron0505.blog.me/220851987631',\n        },\n        {\n          imageUrl:\n            'http://blogthumb2.naver.net/MjAxNzAxMDhfMjI5/MDAxNDgzODc3MDYxNTg4.uIZEmtluXxDr1FCMOl-Jw4UooHbWSxTm7cQDoTUf8lIg.QTa8i9r1x5f7OJKd01iWmyZiptVfdFhhvPdOqOxgsxMg.JPEG.annatomo/IMG_5261.JPG?type=w2',\n          publisher: 'blog.naver.com',\n          title: '도쿄 디즈니랜드 후기 및 꿀팁 ! (2편)',\n          url: 'http://blog.naver.com/annatomo/220905940459',\n        },\n        {\n          imageUrl:\n            'http://blogthumb2.naver.net/MjAxNzAxMDlfMTQy/MDAxNDgzODkwNjAxMjM4.7NCd9Fz2JM1POxwdni37vyFFpYtUrpwp8tqah8w4RDMg.GLcluxHpLHDTdFVRuQvwUQBU8zuSw0juQKSDkicyvvYg.JPEG.the_saeng/se3_image_2676960158.jpg?type=w2',\n          publisher: 'blog.naver.com',\n          title:\n            '[2017 일본 도쿄 자유여행] 4박 5일 도쿄 자유여행 3일차! / 도쿄 디즈니랜드 가는 법 , 도쿄 디즈니랜드 후기',\n          url: 'http://blog.naver.com/the_saeng/220907041546',\n        },\n        {\n          imageUrl:\n            'http://blogthumb2.naver.net/MjAxNzAzMjJfMTIg/MDAxNDkwMTkyMDg1MTU1.i7O0IdvyyhMt9V3GXUsYSBhZdTmSNkBZsGrbm0knqxcg.V6snrTTAshB2bRBXjFm8fzP--UWL1n7mN2jF5xKDMLcg.JPEG.ttttt10/P1010918.JPG?type=w2',\n          publisher: 'blog.naver.com',\n          title: '도쿄자유여행: 도쿄 디즈니랜드 후기',\n          url: 'http://blog.naver.com/ttttt10/220964776844',\n        },\n        {\n          imageUrl:\n            'http://blogthumb2.naver.net/MjAxNzAzMjhfNiAg/MDAxNDkwNjU3MTcwNDQy.kqd2jsXjsLT6UVB6PPI7cow8I-CtC0cAuVueh0ff5VEg.xvNKPFnXScAWq-2O4tCPLLUANb7jnbxur9KHIxrYCaMg.JPEG.sheepo1234/attachImage_3526602166.jpeg?type=w2',\n          publisher: 'blog.naver.com',\n          title: '도쿄 2박3일 자유여행 : 도쿄 디즈니랜드 퍼레이드 후기',\n          url: 'http://blog.naver.com/sheepo1234/220969523448',\n        },\n      ]}\n    />\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nBaseSocialReviews.story = {\n  name: '기본 SocialReviews',\n}\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/static-map\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport StaticMap from '@titicaca/static-map'\\nimport { number, select, text } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\n\\nstoriesOf('static-map | StaticMap', module).add('기본', () => {\\n  return (\\n    <StaticMap\\n      type={select(\\n        'Marker type',\\n        ['attraction', 'restaurant', 'hotel', undefined],\\n        'attraction',\\n      )}\\n      lat={number('Latitude', 35.6328964)}\\n      lon={number('Longitude', 139.8803943)}\\n      onClick={action('onClick')}\\n      markerImage={text('Custom marker image')}\\n    />\\n  )\\n})\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"static-map-staticmap--기본\":{\"startLoc\":{\"col\":48,\"line\":7},\"endLoc\":{\"col\":1,\"line\":21},\"startBody\":{\"col\":54,\"line\":7},\"endBody\":{\"col\":1,\"line\":21}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/static-map.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport StaticMap from '@titicaca/static-map'\nimport { number, select, text } from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\n\nstoriesOf('static-map | StaticMap', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).add('기본', () => {\n  return (\n    <StaticMap\n      type={select(\n        'Marker type',\n        ['attraction', 'restaurant', 'hotel', undefined],\n        'attraction',\n      )}\n      lat={number('Latitude', 35.6328964)}\n      lon={number('Longitude', 139.8803943)}\n      onClick={action('onClick')}\n      markerImage={text('Custom marker image')}\n    />\n  )\n})\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs/blocks\";\n\nimport { Meta } from '@storybook/addon-docs/blocks'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Style-Box | atom\" mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"style-box\"\n    }}>{`Style Box`}</h1>\n    <p>{`Style Box 는 컴포넌트를 작성할때 필요한 다양한 스타일을 지원하여 빠르게 컴포넌트를 만들 수 있도록 도와줍니다.`}</p>\n    <br />\n    <h2 {...{\n      \"id\": \"position\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/position\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Position`}</a></h2>\n    <p>{`CSS position 속성은 문서 상에 요소를 배치하는 방법을 지정합니다.top, right, bottom, left 속성이 요소를 배치할 최종 위치를 결정합니다.`}</p>\n    <p><inlineCode parentName=\"p\">{`default unit 은 px 입니다.`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`position (value?: CSS.PositionProperty | Position)\n\n\\${position('relative')} or \\${position({ type: 'absolute', top: 20, right: 30})}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"box-sizing\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/box-sizing\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Box-Sizing`}</a></h2>\n    <p>{`box-sizing CSS 속성은 요소의 너비와 높이를 계산하는 방법을 지정합니다.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`boxSizing (value?: CSS.BoxSizingProperty)\n\n\\${boxSizing()} or \\${boxSizing('')}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"clear\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/clear\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Clear`}</a></h2>\n    <p>{`clear CSS 속성은 요소가 선행 부동(floating) 요소 다음일 수 있는지 또는 그 아래로 내려가(해제되어(cleared))야 하는 지를 지정합니다.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`clear (value?: CSS.ClearProperty)\n\n\\${clear()} or \\${clear('both')}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"float\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/float\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Float`}</a></h2>\n    <p>{`CSS 속성(property) float 은 한 요소(element)가 보통 흐름(normal flow)으로부터 빠져 텍스트 및 인라인(inline) 요소가 그 주위를 감싸는 자기 컨테이너의 좌우측을 따라 배치되어야 함을 지정합니다.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`float (value?: CSS.FloatProperty)\n\n\\${float()} or \\${float('left')}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"height\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/height\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Height`}</a></h2>\n    <p>{`height CSS 속성은 요소의 높이를 지정합니다.`}</p>\n    <p><inlineCode parentName=\"p\">{`default unit 은 px 입니다.`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`height (value?: number)\n\n\\${height()} or \\${height(100)}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"max-height--min-height\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/max-height\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Max Height / `}</a><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/min-height\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Min Height`}</a></h2>\n    <p>{`max-height CSS 속성은 요소의 최소 높이를 설정합니다.\nmax-height CSS 속성은 요소의 최소 높이를 설정합니다.`}</p>\n    <p><inlineCode parentName=\"p\">{`default unit 은 px 입니다.`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`maxHeight (value?: number)\nminHeight (value?: number)\n\n\\${maxHeight()} or \\${maxHeight(100)}\n\\${minHeight()} or \\${minHeight(100)}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"width\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/width\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Width`}</a></h2>\n    <p>{`width CSS 속성은 요소의 너비를 지정합니다.`}</p>\n    <p><inlineCode parentName=\"p\">{`default unit 은 px 입니다.`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`width (value?: number)\n\n\\${width()} or \\${width(100)}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"max-width--min-width\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/max-width\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Max Width / `}</a><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/min-width\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Min Width`}</a></h2>\n    <p>{`max-width CSS 속성은 요소의 최소 너비를 설정합니다.\nmax-width CSS 속성은 요소의 최소 너비를 설정합니다.`}</p>\n    <p><inlineCode parentName=\"p\">{`default unit 은 px 입니다.`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`maxWidth (value?: number)\nminWidth (value?: number)\n\n\\${maxWidth()} or \\${maxWidth(100)}\n\\${minWidth()} or \\${minWidth(100)}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"margin\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/margin\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Margin`}</a></h2>\n    <p>{`margin CSS 속성은 요소의 네 방향 바깥 여백 영역을 설정합니다.`}</p>\n    <p><inlineCode parentName=\"p\">{`default unit 은 px 입니다.`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`margin (value?: MarginPadding)\n\n\\${margin()} or \\${margin({ top: 10, right: 10, bottom: 10, left: 10 })}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"padding\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/padding\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Padding`}</a></h2>\n    <p>{`padding CSS 속성은 요소의 네 방향 안쪽 여백 영역을 설정합니다.`}</p>\n    <p><inlineCode parentName=\"p\">{`default unit 은 px 입니다.`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`padding (value?: MarginPadding)\n\n\\${padding()} or \\${padding({ top: 10, right: 10, bottom: 10, left: 10 })}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"text-align\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/text-align\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Text-Align`}</a></h2>\n    <p>{`CSS text-align 속성은 블록 요소나 테이블 칸 상자의 가로 정렬을 설정합니다.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`textAlign (value?: CSS.TextAlignProperty)\n\n\\${textAlign()} or \\${textAlign('center')}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"user-select\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/User-Select\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`User-Select`}</a></h2>\n    <p>{`user-select는 사용자가 텍스트를 선택할 수 있는지 여부를 결정하는 속성입니다.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`userSelect (value?: CSS.UserSelectProperty)\n\n\\${userSelect()} or \\${userSelect('none')}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"white-space\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/White-Space\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`White-Space`}</a></h2>\n    <p>{`white-space 속성은 요소가 공백 문자를 처리하는 법을 지정합니다.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`whiteSpace (value?: CSS.WhiteSpaceProperty)\n\n\\${whiteSpace()} or \\${whiteSpace('pre-line')}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"display\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/Display\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Display`}</a></h2>\n    <p>{`display CSS 속성은 요소를 블록과 인라인 요소 중 어느 쪽으로 처리할지와 함께, 플로우, 그리드, 플렉스처럼 자식 요소를 배치할 때 사용할 레이아웃을 설정합니다.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`display (value?: CSS.DisplayProperty)\n\n\\${display()} or \\${display('inline-block')}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.story = { parameters: { docsOnly: true } };\n\nconst componentMeta = { title: 'Style-Box | atom', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentMeta={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs/blocks\";\n\nimport { Meta } from '@storybook/addon-docs/blocks'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Style-Box | molecular\" mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"style-box\"\n    }}>{`Style Box`}</h1>\n    <p>{`Style Box 는 컴포넌트를 작성할때 필요한 다양한 스타일을 지원하여 빠르게 컴포넌트를 만들 수 있도록 도와줍니다.`}</p>\n    <br />\n    <h2 {...{\n      \"id\": \"border-radius\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/CSS/border-radius\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`border-radius`}</a></h2>\n    <p>{`border-radius CSS 속성은 요소의 바깥 테두리 경계의 모서리를 둥글게 만듭니다.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`borderRadius (value?: number)\n\n\\${borderRadius()} or \\${borderRadius(10)}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"centered\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#centered\"\n      }}>{`Centered`}</a></h2>\n    <p>{`Block 요소를 가운데 정렬합니다.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`centered (value?: boolean)\n\n\\${centered()} or \\${centered(true)}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"clearing\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#clearing\"\n      }}>{`Clearing`}</a></h2>\n    <p>{`float 된 요소들을 clear 시킵니다`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`clearing (value?: booelan)\n\n\\${clearing()} or \\${clearing(true)}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ellipsis\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#ellipsis\"\n      }}>{`Ellipsis`}</a></h2>\n    <p>{`글자가 고정된 너비보다 넘칠 경우 말줄임 처리합니다.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ellipsis (value?: booelan)\n\n\\${ellipsis()} or \\${ellipsis(true)}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"horizontal-scroll\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#horizontal-scroll\"\n      }}>{`Horizontal Scroll`}</a></h2>\n    <p>{`너비가 넘칠 경우 가로스크롤을 만들어줍니다.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`horizontalScroll (value?: booelan)\n\n\\${horizontalScroll()} or \\${horizontalScroll(true)}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.story = { parameters: { docsOnly: true } };\n\nconst componentMeta = { title: 'Style-Box | molecular', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentMeta={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/triple-document\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { ELEMENTS } from '@titicaca/triple-document'\\n\\nconst { embedded: Embedded } = ELEMENTS\\n\\nstoriesOf('TripleDocument | TripleDocument', module).add('임베딩', () => (\\n  <Embedded\\n    value={{\\n      entries: [\\n        [\\n          {\\n            type: 'images',\\n            value: {\\n              images: [\\n                {\\n                  id: '578bbb87-9ed3-443a-8cb3-b0b4a2b3e1ea',\\n                  frame: 'large',\\n                  sizes: {\\n                    full: {\\n                      url:\\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_2048,h_2048,c_limit/578bbb87-9ed3-443a-8cb3-b0b4a2b3e1ea.jpg',\\n                    },\\n                    large: {\\n                      url:\\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_1024,h_1024,c_limit/578bbb87-9ed3-443a-8cb3-b0b4a2b3e1ea.jpg',\\n                    },\\n                    \\n                    small_square: {\\n                      url:\\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_256,h_256,c_fill/578bbb87-9ed3-443a-8cb3-b0b4a2b3e1ea.jpg',\\n                    },\\n                  },\\n                  title: '',\\n                  width: 960,\\n                  height: 640,\\n                  sourceUrl: 'http://www.naver.com/',\\n                  description: '',\\n                },\\n              ],\\n            },\\n          },\\n          {\\n            type: 'heading3',\\n            value: {\\n              text: '제목 한줄로 보이게 한 줄 맞나 맞나?',\\n            },\\n          },\\n          {\\n            type: 'text',\\n            value: {\\n              text:\\n                '짧은 설명이 들어가면 좋겠습니다. 모든 임베딩에 균일하게 최대 3줄 정도면 적당하겠군요.',\\n            },\\n          },\\n          {\\n            type: 'links',\\n            value: {\\n              links: [\\n                {\\n                  href:\\n                    'dev-soto:///outlink?url=https%3A%2F%2Ftriple.guide%2Fentry%2Fposts%2F04ba5bd9-1a75-4ddb-bb3c-516657e9ae0c%3F_triple_no_navbar%26_triple_swipe_to_close',\\n                  label: '방콕 3박 4일 가이드',\\n                },\\n                {\\n                  href:\\n                    'dev-soto:///regions/23c5965b-01ad-486b-a694-a2ced15f245c/attractions/c3d2ef37-f0ef-42b4-a210-039dc08143bf',\\n                  label: '도쿄 타워',\\n                },\\n              ],\\n              display: 'default',\\n            },\\n          },\\n        ],\\n        [\\n          {\\n            type: 'images',\\n            value: {\\n              images: [\\n                {\\n                  id: 'bfb5dd63-696c-4f1c-b98c-8e7f86fe069f',\\n                  frame: 'large',\\n                  sizes: {\\n                    full: {\\n                      url:\\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_2048,h_2048,c_limit/bfb5dd63-696c-4f1c-b98c-8e7f86fe069f.jpg',\\n                    },\\n                    large: {\\n                      url:\\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_1024,h_1024,c_limit/bfb5dd63-696c-4f1c-b98c-8e7f86fe069f.jpg',\\n                    },\\n                    small_square: {\\n                      url:\\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_256,h_256,c_fill/bfb5dd63-696c-4f1c-b98c-8e7f86fe069f.jpg',\\n                    },\\n                  },\\n                  title: '',\\n                  width: 4287,\\n                  height: 2706,\\n                  description: '',\\n                },\\n              ],\\n            },\\n          },\\n          {\\n            type: 'heading3',\\n            value: {\\n              text: '제목',\\n            },\\n          },\\n          {\\n            type: 'text',\\n            value: {\\n              text:\\n                '짧은 설명이 들어가면 좋겠습니 다. 모든 임베딩에 균일하게 최대 3줄 정도면 적당하겠군요.',\\n            },\\n          },\\n        ],\\n        [\\n          {\\n            type: 'heading3',\\n            value: {\\n              text: '제목',\\n            },\\n          },\\n          {\\n            type: 'text',\\n            value: {\\n              text:\\n                '짧은 설명이 들어가면 좋겠습니 다. 모든 임베딩에 균일하게 최대 3줄 정도면 적당하겠군요.',\\n            },\\n          },\\n          {\\n            type: 'images',\\n            value: {\\n              images: [\\n                {\\n                  id: 'bfb5dd63-696c-4f1c-b98c-8e7f86fe069f',\\n                  frame: 'large',\\n                  sizes: {\\n                    full: {\\n                      url:\\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_2048,h_2048,c_limit/bfb5dd63-696c-4f1c-b98c-8e7f86fe069f.jpg',\\n                    },\\n                    large: {\\n                      url:\\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_1024,h_1024,c_limit/bfb5dd63-696c-4f1c-b98c-8e7f86fe069f.jpg',\\n                    },\\n                    small_square: {\\n                      url:\\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_256,h_256,c_fill/bfb5dd63-696c-4f1c-b98c-8e7f86fe069f.jpg',\\n                    },\\n                  },\\n                  title: '',\\n                  width: 4287,\\n                  height: 2706,\\n                  description: '',\\n                },\\n              ],\\n            },\\n          },\\n        ],\\n      ],\\n    }}\\n  />\\n))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"tripledocument-tripledocument--임베딩\":{\"startLoc\":{\"col\":57,\"line\":7},\"endLoc\":{\"col\":1,\"line\":166},\"startBody\":{\"col\":64,\"line\":7},\"endBody\":{\"col\":1,\"line\":166}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/triple-document.embedded.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { ELEMENTS } from '@titicaca/triple-document'\n\nconst { embedded: Embedded } = ELEMENTS\n\nstoriesOf('TripleDocument | TripleDocument', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).add('임베딩', () => (\n  <Embedded\n    value={{\n      entries: [\n        [\n          {\n            type: 'images',\n            value: {\n              images: [\n                {\n                  id: '578bbb87-9ed3-443a-8cb3-b0b4a2b3e1ea',\n                  frame: 'large',\n                  sizes: {\n                    full: {\n                      url:\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_2048,h_2048,c_limit/578bbb87-9ed3-443a-8cb3-b0b4a2b3e1ea.jpg',\n                    },\n                    large: {\n                      url:\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_1024,h_1024,c_limit/578bbb87-9ed3-443a-8cb3-b0b4a2b3e1ea.jpg',\n                    },\n                    /* eslint-disable @typescript-eslint/camelcase */\n                    small_square: {\n                      url:\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_256,h_256,c_fill/578bbb87-9ed3-443a-8cb3-b0b4a2b3e1ea.jpg',\n                    },\n                  },\n                  title: '',\n                  width: 960,\n                  height: 640,\n                  sourceUrl: 'http://www.naver.com/',\n                  description: '',\n                },\n              ],\n            },\n          },\n          {\n            type: 'heading3',\n            value: {\n              text: '제목 한줄로 보이게 한 줄 맞나 맞나?',\n            },\n          },\n          {\n            type: 'text',\n            value: {\n              text:\n                '짧은 설명이 들어가면 좋겠습니다. 모든 임베딩에 균일하게 최대 3줄 정도면 적당하겠군요.',\n            },\n          },\n          {\n            type: 'links',\n            value: {\n              links: [\n                {\n                  href:\n                    'dev-soto:///outlink?url=https%3A%2F%2Ftriple.guide%2Fentry%2Fposts%2F04ba5bd9-1a75-4ddb-bb3c-516657e9ae0c%3F_triple_no_navbar%26_triple_swipe_to_close',\n                  label: '방콕 3박 4일 가이드',\n                },\n                {\n                  href:\n                    'dev-soto:///regions/23c5965b-01ad-486b-a694-a2ced15f245c/attractions/c3d2ef37-f0ef-42b4-a210-039dc08143bf',\n                  label: '도쿄 타워',\n                },\n              ],\n              display: 'default',\n            },\n          },\n        ],\n        [\n          {\n            type: 'images',\n            value: {\n              images: [\n                {\n                  id: 'bfb5dd63-696c-4f1c-b98c-8e7f86fe069f',\n                  frame: 'large',\n                  sizes: {\n                    full: {\n                      url:\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_2048,h_2048,c_limit/bfb5dd63-696c-4f1c-b98c-8e7f86fe069f.jpg',\n                    },\n                    large: {\n                      url:\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_1024,h_1024,c_limit/bfb5dd63-696c-4f1c-b98c-8e7f86fe069f.jpg',\n                    },\n                    small_square: {\n                      url:\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_256,h_256,c_fill/bfb5dd63-696c-4f1c-b98c-8e7f86fe069f.jpg',\n                    },\n                  },\n                  title: '',\n                  width: 4287,\n                  height: 2706,\n                  description: '',\n                },\n              ],\n            },\n          },\n          {\n            type: 'heading3',\n            value: {\n              text: '제목',\n            },\n          },\n          {\n            type: 'text',\n            value: {\n              text:\n                '짧은 설명이 들어가면 좋겠습니 다. 모든 임베딩에 균일하게 최대 3줄 정도면 적당하겠군요.',\n            },\n          },\n        ],\n        [\n          {\n            type: 'heading3',\n            value: {\n              text: '제목',\n            },\n          },\n          {\n            type: 'text',\n            value: {\n              text:\n                '짧은 설명이 들어가면 좋겠습니 다. 모든 임베딩에 균일하게 최대 3줄 정도면 적당하겠군요.',\n            },\n          },\n          {\n            type: 'images',\n            value: {\n              images: [\n                {\n                  id: 'bfb5dd63-696c-4f1c-b98c-8e7f86fe069f',\n                  frame: 'large',\n                  sizes: {\n                    full: {\n                      url:\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_2048,h_2048,c_limit/bfb5dd63-696c-4f1c-b98c-8e7f86fe069f.jpg',\n                    },\n                    large: {\n                      url:\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_1024,h_1024,c_limit/bfb5dd63-696c-4f1c-b98c-8e7f86fe069f.jpg',\n                    },\n                    small_square: {\n                      url:\n                        'https://res.cloudinary.com/triple-dev/image/upload/w_256,h_256,c_fill/bfb5dd63-696c-4f1c-b98c-8e7f86fe069f.jpg',\n                    },\n                  },\n                  title: '',\n                  width: 4287,\n                  height: 2706,\n                  description: '',\n                },\n              ],\n            },\n          },\n        ],\n      ],\n    }}\n  />\n))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/triple-document\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { select, text } from '@storybook/addon-knobs'\\nimport { ELEMENTS } from '@titicaca/triple-document'\\n\\nimport IMAGES from '../__mocks__/images.sample.json'\\nimport IMAGES_FRAME from '../__mocks__/images-frame.sample.json'\\n\\nconst { images: Images } = ELEMENTS\\n\\nstoriesOf('TripleDocument | TripleDocument.이미지', module)\\n  .add('1개', () => {\\n    const [image] = IMAGES\\n    return (\\n      <Images\\n        value={{\\n          images: [\\n            {\\n              ...image,\\n              frame: select(\\n                '크기',\\n                ['mini', 'small', 'medium', 'large', 'big', 'huge', 'original'],\\n                'small',\\n              ),\\n              title: text('캡션', 'TripleDocument 샘플 1'),\\n              sourceUrl: text('출처', 'https://triple.guide'),\\n            },\\n          ],\\n        }}\\n      />\\n    )\\n  })\\n  .add('1개, 프레임', () => {\\n    const [image] = IMAGES_FRAME\\n    return (\\n      <Images\\n        value={{\\n          images: [\\n            {\\n              ...image,\\n              frame: select(\\n                '크기',\\n                ['mini', 'small', 'medium', 'large', 'big', 'huge', 'original'],\\n                'small',\\n              ),\\n              title: text('캡션', 'TripleDocument 샘플 1'),\\n              sourceUrl: text('출처', 'https://triple.guide'),\\n            },\\n          ],\\n        }}\\n      />\\n    )\\n  })\\n  .add('2개', () => (\\n    <Images\\n      value={{\\n        images: IMAGES.map((value) => ({\\n          ...value,\\n          title: '',\\n        })),\\n      }}\\n    />\\n  ))\\n  .add('2개, 캡션', () => (\\n    <Images\\n      value={{\\n        images: IMAGES,\\n      }}\\n    />\\n  ))\\n  .add('2개, 블록', () => (\\n    <Images\\n      value={{\\n        images: IMAGES.map((value) => ({ ...value, title: '' })),\\n        display: 'block',\\n      }}\\n    />\\n  ))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"tripledocument-tripledocument-이미지--2개-블록\":{\"startLoc\":{\"col\":7,\"line\":71},\"endLoc\":{\"col\":3,\"line\":78},\"startBody\":{\"col\":17,\"line\":71},\"endBody\":{\"col\":3,\"line\":78}},\"tripledocument-tripledocument-이미지--2개-캡션\":{\"startLoc\":{\"col\":7,\"line\":64},\"endLoc\":{\"col\":3,\"line\":70},\"startBody\":{\"col\":17,\"line\":64},\"endBody\":{\"col\":3,\"line\":70}},\"tripledocument-tripledocument-이미지--2개\":{\"startLoc\":{\"col\":7,\"line\":54},\"endLoc\":{\"col\":3,\"line\":63},\"startBody\":{\"col\":13,\"line\":54},\"endBody\":{\"col\":3,\"line\":63}},\"tripledocument-tripledocument-이미지--1개-프레임\":{\"startLoc\":{\"col\":7,\"line\":33},\"endLoc\":{\"col\":3,\"line\":53},\"startBody\":{\"col\":18,\"line\":33},\"endBody\":{\"col\":3,\"line\":53}},\"tripledocument-tripledocument-이미지--1개\":{\"startLoc\":{\"col\":7,\"line\":12},\"endLoc\":{\"col\":3,\"line\":32},\"startBody\":{\"col\":13,\"line\":12},\"endBody\":{\"col\":3,\"line\":32}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/triple-document.images.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { select, text } from '@storybook/addon-knobs'\nimport { ELEMENTS } from '@titicaca/triple-document'\n\nimport IMAGES from '../__mocks__/images.sample.json'\nimport IMAGES_FRAME from '../__mocks__/images-frame.sample.json'\n\nconst { images: Images } = ELEMENTS\n\nstoriesOf('TripleDocument | TripleDocument.이미지', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('1개', () => {\n    const [image] = IMAGES\n    return (\n      <Images\n        value={{\n          images: [\n            {\n              ...image,\n              frame: select(\n                '크기',\n                ['mini', 'small', 'medium', 'large', 'big', 'huge', 'original'],\n                'small',\n              ),\n              title: text('캡션', 'TripleDocument 샘플 1'),\n              sourceUrl: text('출처', 'https://triple.guide'),\n            },\n          ],\n        }}\n      />\n    )\n  })\n  .add('1개, 프레임', () => {\n    const [image] = IMAGES_FRAME\n    return (\n      <Images\n        value={{\n          images: [\n            {\n              ...image,\n              frame: select(\n                '크기',\n                ['mini', 'small', 'medium', 'large', 'big', 'huge', 'original'],\n                'small',\n              ),\n              title: text('캡션', 'TripleDocument 샘플 1'),\n              sourceUrl: text('출처', 'https://triple.guide'),\n            },\n          ],\n        }}\n      />\n    )\n  })\n  .add('2개', () => (\n    <Images\n      value={{\n        images: IMAGES.map((value) => ({\n          ...value,\n          title: '',\n        })),\n      }}\n    />\n  ))\n  .add('2개, 캡션', () => (\n    <Images\n      value={{\n        images: IMAGES,\n      }}\n    />\n  ))\n  .add('2개, 블록', () => (\n    <Images\n      value={{\n        images: IMAGES.map((value) => ({ ...value, title: '' })),\n        display: 'block',\n      }}\n    />\n  ))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/triple-document\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { ELEMENTS } from '@titicaca/triple-document'\\n\\nconst { links: Links } = ELEMENTS\\n\\nstoriesOf('TripleDocument | TripleDocument.링크', module)\\n  .add('일반', () => (\\n    <Links\\n      value={{\\n        links: [\\n          {\\n            label: '방콕 3박 4일 가이드',\\n          },\\n          {\\n            label: '도쿄 타워',\\n          },\\n        ],\\n      }}\\n    />\\n  ))\\n  .add('강조', () => (\\n    <Links\\n      value={{\\n        links: [\\n          {\\n            label: '다낭 바로 가기',\\n          },\\n        ],\\n        display: 'button',\\n      }}\\n    />\\n  ))\\n  .add('강조 (2개)', () => (\\n    <Links\\n      value={{\\n        links: [\\n          {\\n            label: '다낭 바로 가기',\\n          },\\n          {\\n            label: '도쿄 바로 가기',\\n          },\\n        ],\\n        display: 'button',\\n      }}\\n    />\\n  ))\\n  .add('확장', () => (\\n    <Links\\n      value={{\\n        links: [\\n          {\\n            label: '장소 보기',\\n          },\\n        ],\\n        display: 'block',\\n      }}\\n    />\\n  ))\\n  .add('이미지', () => (\\n    <Links\\n      value={{\\n        links: [\\n          {\\n            label: '메가 돈키호테 시부야 본점',\\n            image: {\\n              sizes: {\\n                full: {\\n                  url:\\n                    'https://media.triple.guide/triple-cms/c_limit,f_auto,h_2048,w_2048/1c22ae37-108f-44a7-b96b-1d70179b0b3f.jpeg',\\n                },\\n                large: {\\n                  url:\\n                    'https://media.triple.guide/triple-cms/c_limit,f_auto,h_1024,w_1024/1c22ae37-108f-44a7-b96b-1d70179b0b3f.jpeg',\\n                },\\n                \\n                small_square: {\\n                  url:\\n                    'https://media.triple.guide/triple-cms/c_fill,f_auto,h_256,w_256/1c22ae37-108f-44a7-b96b-1d70179b0b3f.jpeg',\\n                },\\n              },\\n            },\\n            description: '관광명소',\\n          },\\n          {\\n            label: '도쿄의 이색 체험',\\n            image: {\\n              sizes: {\\n                full: {\\n                  url:\\n                    'https://media.triple.guide/triple-dev/c_limit,f_auto,h_2048,w_2048/fc59cda3-056b-41ca-9c87-242d6f15074d.jpeg',\\n                },\\n                large: {\\n                  url:\\n                    'https://media.triple.guide/triple-dev/c_limit,f_auto,h_1024,w_1024/fc59cda3-056b-41ca-9c87-242d6f15074d.jpeg',\\n                },\\n                small_square: {\\n                  url:\\n                    'https://media.triple.guide/triple-dev/c_fill,f_auto,h_256,w_256/fc59cda3-056b-41ca-9c87-242d6f15074d.jpeg',\\n                },\\n              },\\n            },\\n            description: '가이드',\\n          },\\n        ],\\n        display: 'image',\\n      }}\\n    />\\n  ))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"tripledocument-tripledocument-링크--이미지\":{\"startLoc\":{\"col\":7,\"line\":61},\"endLoc\":{\"col\":3,\"line\":110},\"startBody\":{\"col\":14,\"line\":61},\"endBody\":{\"col\":3,\"line\":110}},\"tripledocument-tripledocument-링크--확장\":{\"startLoc\":{\"col\":7,\"line\":49},\"endLoc\":{\"col\":3,\"line\":60},\"startBody\":{\"col\":13,\"line\":49},\"endBody\":{\"col\":3,\"line\":60}},\"tripledocument-tripledocument-링크--강조-2개\":{\"startLoc\":{\"col\":7,\"line\":34},\"endLoc\":{\"col\":3,\"line\":48},\"startBody\":{\"col\":18,\"line\":34},\"endBody\":{\"col\":3,\"line\":48}},\"tripledocument-tripledocument-링크--강조\":{\"startLoc\":{\"col\":7,\"line\":22},\"endLoc\":{\"col\":3,\"line\":33},\"startBody\":{\"col\":13,\"line\":22},\"endBody\":{\"col\":3,\"line\":33}},\"tripledocument-tripledocument-링크--일반\":{\"startLoc\":{\"col\":7,\"line\":8},\"endLoc\":{\"col\":3,\"line\":21},\"startBody\":{\"col\":13,\"line\":8},\"endBody\":{\"col\":3,\"line\":21}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/triple-document.links.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { ELEMENTS } from '@titicaca/triple-document'\n\nconst { links: Links } = ELEMENTS\n\nstoriesOf('TripleDocument | TripleDocument.링크', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('일반', () => (\n    <Links\n      value={{\n        links: [\n          {\n            label: '방콕 3박 4일 가이드',\n          },\n          {\n            label: '도쿄 타워',\n          },\n        ],\n      }}\n    />\n  ))\n  .add('강조', () => (\n    <Links\n      value={{\n        links: [\n          {\n            label: '다낭 바로 가기',\n          },\n        ],\n        display: 'button',\n      }}\n    />\n  ))\n  .add('강조 (2개)', () => (\n    <Links\n      value={{\n        links: [\n          {\n            label: '다낭 바로 가기',\n          },\n          {\n            label: '도쿄 바로 가기',\n          },\n        ],\n        display: 'button',\n      }}\n    />\n  ))\n  .add('확장', () => (\n    <Links\n      value={{\n        links: [\n          {\n            label: '장소 보기',\n          },\n        ],\n        display: 'block',\n      }}\n    />\n  ))\n  .add('이미지', () => (\n    <Links\n      value={{\n        links: [\n          {\n            label: '메가 돈키호테 시부야 본점',\n            image: {\n              sizes: {\n                full: {\n                  url:\n                    'https://media.triple.guide/triple-cms/c_limit,f_auto,h_2048,w_2048/1c22ae37-108f-44a7-b96b-1d70179b0b3f.jpeg',\n                },\n                large: {\n                  url:\n                    'https://media.triple.guide/triple-cms/c_limit,f_auto,h_1024,w_1024/1c22ae37-108f-44a7-b96b-1d70179b0b3f.jpeg',\n                },\n                /* eslint-disable @typescript-eslint/camelcase */\n                small_square: {\n                  url:\n                    'https://media.triple.guide/triple-cms/c_fill,f_auto,h_256,w_256/1c22ae37-108f-44a7-b96b-1d70179b0b3f.jpeg',\n                },\n              },\n            },\n            description: '관광명소',\n          },\n          {\n            label: '도쿄의 이색 체험',\n            image: {\n              sizes: {\n                full: {\n                  url:\n                    'https://media.triple.guide/triple-dev/c_limit,f_auto,h_2048,w_2048/fc59cda3-056b-41ca-9c87-242d6f15074d.jpeg',\n                },\n                large: {\n                  url:\n                    'https://media.triple.guide/triple-dev/c_limit,f_auto,h_1024,w_1024/fc59cda3-056b-41ca-9c87-242d6f15074d.jpeg',\n                },\n                small_square: {\n                  url:\n                    'https://media.triple.guide/triple-dev/c_fill,f_auto,h_256,w_256/fc59cda3-056b-41ca-9c87-242d6f15074d.jpeg',\n                },\n              },\n            },\n            description: '가이드',\n          },\n        ],\n        display: 'image',\n      }}\n    />\n  ))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/triple-document\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { ELEMENTS } from '@titicaca/triple-document'\\n\\nconst { list: ListElement } = ELEMENTS\\n\\nstoriesOf('TripleDocument | TripleDocument.리스트', module)\\n  .add('점', () => (\\n    <ListElement\\n      value={{\\n        bulletType: 'oval',\\n        items: [\\n          {\\n            type: 'text',\\n            value: {\\n              text: '일본 여행! 포켓와이파이 없이 어떻게 가려고요?',\\n            },\\n          },\\n          {\\n            type: 'text',\\n            value: {\\n              text:\\n                '와그만의 핑크미가 뿜뿜나는 LTE 포켓와이파이로 더 편한 일본 여행을 즐겨보세요.',\\n            },\\n          },\\n          {\\n            type: 'text',\\n            value: {\\n              text: '일본 지역 어디든 잘 터져서 데이터 걱정이 없어요.',\\n            },\\n          },\\n          {\\n            type: 'text',\\n            value: {\\n              text: '보조배터리도 무료로 하나 더 챙겨드리니 걱정하지 마세요.',\\n            },\\n          },\\n          {\\n            type: 'text',\\n            value: {\\n              text:\\n                '일본 공항에서 수령할 수 있는 일본 공항 수령 LTE 포켓와이파이도 있어요.',\\n            },\\n          },\\n          {\\n            type: 'text',\\n            value: {\\n              rich: true,\\n              text: '오사카 여행에 주유패스가 빠질 수 없겠죠?\\\\n',\\n              rawHTML:\\n                '<p>오사카 여행에 <strong>주유패스가</strong> 빠질 수 없겠죠?</p>\\\\n',\\n              markdownText: '오사카 여행에 **주유패스가** 빠질 수 없겠죠?\\\\n',\\n            },\\n          },\\n          {\\n            type: 'links',\\n            value: {\\n              display: 'default',\\n              links: [\\n                {\\n                  href: 'http://www.waug.com/good/?idx=105245',\\n                  label: '일본 공항 수령 LTE 포켓와이파이',\\n                },\\n              ],\\n            },\\n          },\\n        ],\\n      }}\\n    />\\n  ))\\n  .add('체크', () => (\\n    <ListElement\\n      value={{\\n        bulletType: 'check',\\n        items: [\\n          {\\n            type: 'text',\\n            value: {\\n              text: '일본 여행! 포켓와이파이 없이 어떻게 가려고요?',\\n            },\\n          },\\n          {\\n            type: 'text',\\n            value: {\\n              text:\\n                '와그만의 핑크미가 뿜뿜나는 LTE 포켓와이파이로 더 편한 일본 여행을 즐겨보세요.',\\n            },\\n          },\\n          {\\n            type: 'text',\\n            value: {\\n              text: '일본 지역 어디든 잘 터져서 데이터 걱정이 없어요.',\\n            },\\n          },\\n          {\\n            type: 'text',\\n            value: {\\n              text: '보조배터리도 무료로 하나 더 챙겨드리니 걱정하지 마세요.',\\n            },\\n          },\\n          {\\n            type: 'text',\\n            value: {\\n              text:\\n                '일본 공항에서 수령할 수 있는 일본 공항 수령 LTE 포켓와이파이도 있어요.',\\n            },\\n          },\\n          {\\n            type: 'links',\\n            value: {\\n              display: 'default',\\n              links: [\\n                {\\n                  href: 'http://www.waug.com/good/?idx=105245',\\n                  label: '일본 공항 수령 LTE 포켓와이파이',\\n                },\\n              ],\\n            },\\n          },\\n        ],\\n      }}\\n    />\\n  ))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"tripledocument-tripledocument-리스트--체크\":{\"startLoc\":{\"col\":7,\"line\":71},\"endLoc\":{\"col\":3,\"line\":123},\"startBody\":{\"col\":13,\"line\":71},\"endBody\":{\"col\":3,\"line\":123}},\"tripledocument-tripledocument-리스트--점\":{\"startLoc\":{\"col\":7,\"line\":8},\"endLoc\":{\"col\":3,\"line\":70},\"startBody\":{\"col\":12,\"line\":8},\"endBody\":{\"col\":3,\"line\":70}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/triple-document.list.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { ELEMENTS } from '@titicaca/triple-document'\n\nconst { list: ListElement } = ELEMENTS\n\nstoriesOf('TripleDocument | TripleDocument.리스트', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('점', () => (\n    <ListElement\n      value={{\n        bulletType: 'oval',\n        items: [\n          {\n            type: 'text',\n            value: {\n              text: '일본 여행! 포켓와이파이 없이 어떻게 가려고요?',\n            },\n          },\n          {\n            type: 'text',\n            value: {\n              text:\n                '와그만의 핑크미가 뿜뿜나는 LTE 포켓와이파이로 더 편한 일본 여행을 즐겨보세요.',\n            },\n          },\n          {\n            type: 'text',\n            value: {\n              text: '일본 지역 어디든 잘 터져서 데이터 걱정이 없어요.',\n            },\n          },\n          {\n            type: 'text',\n            value: {\n              text: '보조배터리도 무료로 하나 더 챙겨드리니 걱정하지 마세요.',\n            },\n          },\n          {\n            type: 'text',\n            value: {\n              text:\n                '일본 공항에서 수령할 수 있는 일본 공항 수령 LTE 포켓와이파이도 있어요.',\n            },\n          },\n          {\n            type: 'text',\n            value: {\n              rich: true,\n              text: '오사카 여행에 주유패스가 빠질 수 없겠죠?\\n',\n              rawHTML:\n                '<p>오사카 여행에 <strong>주유패스가</strong> 빠질 수 없겠죠?</p>\\n',\n              markdownText: '오사카 여행에 **주유패스가** 빠질 수 없겠죠?\\n',\n            },\n          },\n          {\n            type: 'links',\n            value: {\n              display: 'default',\n              links: [\n                {\n                  href: 'http://www.waug.com/good/?idx=105245',\n                  label: '일본 공항 수령 LTE 포켓와이파이',\n                },\n              ],\n            },\n          },\n        ],\n      }}\n    />\n  ))\n  .add('체크', () => (\n    <ListElement\n      value={{\n        bulletType: 'check',\n        items: [\n          {\n            type: 'text',\n            value: {\n              text: '일본 여행! 포켓와이파이 없이 어떻게 가려고요?',\n            },\n          },\n          {\n            type: 'text',\n            value: {\n              text:\n                '와그만의 핑크미가 뿜뿜나는 LTE 포켓와이파이로 더 편한 일본 여행을 즐겨보세요.',\n            },\n          },\n          {\n            type: 'text',\n            value: {\n              text: '일본 지역 어디든 잘 터져서 데이터 걱정이 없어요.',\n            },\n          },\n          {\n            type: 'text',\n            value: {\n              text: '보조배터리도 무료로 하나 더 챙겨드리니 걱정하지 마세요.',\n            },\n          },\n          {\n            type: 'text',\n            value: {\n              text:\n                '일본 공항에서 수령할 수 있는 일본 공항 수령 LTE 포켓와이파이도 있어요.',\n            },\n          },\n          {\n            type: 'links',\n            value: {\n              display: 'default',\n              links: [\n                {\n                  href: 'http://www.waug.com/good/?idx=105245',\n                  label: '일본 공항 수령 LTE 포켓와이파이',\n                },\n              ],\n            },\n          },\n        ],\n      }}\n    />\n  ))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/triple-document\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { ELEMENTS } from '@titicaca/triple-document'\\n\\nimport POIS from '../__mocks__/pois.sample.json'\\nimport HOTEL from '../__mocks__/hotel.sample.json'\\n\\nconst { pois: Pois } = ELEMENTS\\n\\nstoriesOf('TripleDocument | TripleDocument.POI', module)\\n  .add('일반', () => (\\n    <Pois\\n      resourceScraps={{}}\\n      value={{\\n        pois: POIS,\\n        display: 'default',\\n      }}\\n    />\\n  ))\\n  .add('일반 w/ 이미지 Placeholder', () => (\\n    <Pois\\n      resourceScraps={{}}\\n      value={{\\n        pois: POIS.map(({ source: { ...source }, ...rest }) => ({\\n          source,\\n          ...rest,\\n        })),\\n        display: 'default',\\n      }}\\n    />\\n  ))\\n  .add('리스트', () => (\\n    <Pois\\n      resourceScraps={{}}\\n      value={{\\n        pois: POIS,\\n        display: 'list',\\n      }}\\n    />\\n  ))\\n  .add('리스트 w/ 이미지 Placeholder', () => (\\n    <Pois\\n      resourceScraps={{}}\\n      value={{\\n        pois: POIS.map(({ source: { ...source }, ...rest }) => ({\\n          source,\\n          ...rest,\\n        })),\\n        display: 'list',\\n      }}\\n    />\\n  ))\\n  .add('리스트 (호텔 w/ 가격)', () => (\\n    <Pois\\n      resourceScraps={{}}\\n      value={{\\n        pois: [HOTEL],\\n        display: 'list',\\n      }}\\n    />\\n  ))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"tripledocument-tripledocument-poi--리스트-호텔-w-가격\":{\"startLoc\":{\"col\":7,\"line\":53},\"endLoc\":{\"col\":3,\"line\":61},\"startBody\":{\"col\":25,\"line\":53},\"endBody\":{\"col\":3,\"line\":61}},\"tripledocument-tripledocument-poi--리스트-w-이미지-placeholder\":{\"startLoc\":{\"col\":7,\"line\":41},\"endLoc\":{\"col\":3,\"line\":52},\"startBody\":{\"col\":33,\"line\":41},\"endBody\":{\"col\":3,\"line\":52}},\"tripledocument-tripledocument-poi--리스트\":{\"startLoc\":{\"col\":7,\"line\":32},\"endLoc\":{\"col\":3,\"line\":40},\"startBody\":{\"col\":14,\"line\":32},\"endBody\":{\"col\":3,\"line\":40}},\"tripledocument-tripledocument-poi--일반-w-이미지-placeholder\":{\"startLoc\":{\"col\":7,\"line\":20},\"endLoc\":{\"col\":3,\"line\":31},\"startBody\":{\"col\":32,\"line\":20},\"endBody\":{\"col\":3,\"line\":31}},\"tripledocument-tripledocument-poi--일반\":{\"startLoc\":{\"col\":7,\"line\":11},\"endLoc\":{\"col\":3,\"line\":19},\"startBody\":{\"col\":13,\"line\":11},\"endBody\":{\"col\":3,\"line\":19}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/triple-document.pois.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { ELEMENTS } from '@titicaca/triple-document'\n\nimport POIS from '../__mocks__/pois.sample.json'\nimport HOTEL from '../__mocks__/hotel.sample.json'\n\nconst { pois: Pois } = ELEMENTS\n\nstoriesOf('TripleDocument | TripleDocument.POI', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('일반', () => (\n    <Pois\n      resourceScraps={{}}\n      value={{\n        pois: POIS,\n        display: 'default',\n      }}\n    />\n  ))\n  .add('일반 w/ 이미지 Placeholder', () => (\n    <Pois\n      resourceScraps={{}}\n      value={{\n        pois: POIS.map(({ source: { ...source }, ...rest }) => ({\n          source,\n          ...rest,\n        })),\n        display: 'default',\n      }}\n    />\n  ))\n  .add('리스트', () => (\n    <Pois\n      resourceScraps={{}}\n      value={{\n        pois: POIS,\n        display: 'list',\n      }}\n    />\n  ))\n  .add('리스트 w/ 이미지 Placeholder', () => (\n    <Pois\n      resourceScraps={{}}\n      value={{\n        pois: POIS.map(({ source: { ...source }, ...rest }) => ({\n          source,\n          ...rest,\n        })),\n        display: 'list',\n      }}\n    />\n  ))\n  .add('리스트 (호텔 w/ 가격)', () => (\n    <Pois\n      resourceScraps={{}}\n      value={{\n        pois: [HOTEL],\n        display: 'list',\n      }}\n    />\n  ))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/triple-document\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { ELEMENTS } from '@titicaca/triple-document'\\n\\nconst { regions: Regions } = ELEMENTS\\n\\n\\nconst REGIONS = [\\n  {\\n    id: 'edf1982d-c835-43a7-b06b-af43acbb6f38',\\n    type: 'region',\\n    source: {\\n      id: 'edf1982d-c835-43a7-b06b-af43acbb6f38',\\n      type: 'region',\\n      areas: [\\n        {\\n          id: 'af16bd5f-c629-440c-af03-39ca0fc68a02',\\n          name: '수쿰빗',\\n          hotelsCount: 476,\\n          hotelArticleId: 'c7c6175a-c84b-43fd-aed1-59ffb8ad6b64',\\n          attractionsCount: 362,\\n          restaurantsCount: 1716,\\n        },\\n        {\\n          id: '2be2e9c8-322a-4be0-9451-b826b66960a0',\\n          name: '씨암, 칫롬',\\n          hotelsCount: 298,\\n          hotelArticleId: 'bfbeca76-e271-4912-b238-bc528dfac320',\\n          attractionsCount: 422,\\n          restaurantsCount: 4395,\\n        },\\n        {\\n          id: '3c6f853c-ee6f-4fb0-a93b-d1335cc48c9d',\\n          name: '올드시티',\\n          hotelsCount: 275,\\n          hotelArticleId: '5949e605-4e99-4bd9-ab50-60d7a68e126f',\\n          attractionsCount: 230,\\n          restaurantsCount: 546,\\n        },\\n        {\\n          id: 'c92fd762-7588-4d94-a2ac-bef79dbe2535',\\n          name: '사톤, 실롬, 리버사이드',\\n          hotelsCount: 317,\\n          hotelArticleId: 'f9cf056d-f263-4033-8115-cdad061d1ee5',\\n          attractionsCount: 208,\\n          restaurantsCount: 871,\\n        },\\n        {\\n          id: '848ff90e-5fc6-4c3c-9ea6-354f35e4e1cf',\\n          name: '공항 근처',\\n          hotelsCount: 25,\\n          hotelArticleId: 'dc6e370b-46ec-4de4-98b4-c842f5a856b0',\\n          attractionsCount: 3,\\n          restaurantsCount: 12,\\n        },\\n        {\\n          id: '17b4bb3f-975e-4516-816c-1375c8b4b4a1',\\n          name: '파타야',\\n          hotelsCount: 1204,\\n          hotelArticleId: '498c1020-405d-424d-bc49-7521842029e6',\\n          attractionsCount: 120,\\n          restaurantsCount: 947,\\n        },\\n      ],\\n      names: {\\n        en: 'Bangkok',\\n        ko: '방콕',\\n        local: null,\\n      },\\n      style: {\\n        logoImageUrl:\\n          'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/region_media/logo_image/edf1982d-c835-43a7-b06b-af43acbb6f38-1504575746.png',\\n        backgroundImageUrl:\\n          'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/region_media/background_image/edf1982d-c835-43a7-b06b-af43acbb6f38-1489569899.png',\\n        backgroundVideoUrl:\\n          'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/region_media/background_video/edf1982d-c835-43a7-b06b-af43acbb6f38-1489569905.mp4',\\n        blurredBackgroundImageUrl:\\n          'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/region_media/blurred_background_image/edf1982d-c835-43a7-b06b-af43acbb6f38-1490177274.png',\\n      },\\n      visible: true,\\n      priority: 7700,\\n      terminals: [\\n        {\\n          id: '22feaa3e-79f5-4eff-86e2-4fa70bdb748f',\\n          type: 'attraction',\\n          source: {\\n            id: '22feaa3e-79f5-4eff-86e2-4fa70bdb748f',\\n            type: 'attraction',\\n            areas: [\\n              {\\n                name: '공항 근처',\\n              },\\n            ],\\n            grade: 1000,\\n            image: {\\n              id: '3c528ce4-3146-427c-bbd2-e9b6e68306a9',\\n              sizes: {\\n                full: {\\n                  url:\\n                    'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/3c528ce4-3146-427c-bbd2-e9b6e68306a9.jpg',\\n                },\\n                large: {\\n                  url:\\n                    'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/3c528ce4-3146-427c-bbd2-e9b6e68306a9.jpg',\\n                },\\n                small_square: {\\n                  url:\\n                    'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/3c528ce4-3146-427c-bbd2-e9b6e68306a9.jpg',\\n                },\\n              },\\n              title: null,\\n              sourceUrl:\\n                'http://www.e-architect.co.uk/thailand/suvarnabhumi-airport',\\n              description: null,\\n            },\\n            names: {\\n              en: 'Suvarnabhumi International Airport',\\n              ko: '수완나품 국제공항',\\n              local: 'ท่าอากาศยานสุวรรณภูมิ',\\n            },\\n            comment: null,\\n            location: [100.7501124, 13.6899991],\\n            regionId: 'edf1982d-c835-43a7-b06b-af43acbb6f38',\\n            categories: [\\n              {\\n                name: '관광명소',\\n              },\\n            ],\\n            pointGeolocation: {\\n              type: 'Point',\\n              coordinates: [100.7501124, 13.6899991],\\n            },\\n          },\\n        },\\n        {\\n          id: '083ba341-aba3-4226-8de0-4ca6f484a756',\\n          type: 'attraction',\\n          source: {\\n            id: '083ba341-aba3-4226-8de0-4ca6f484a756',\\n            type: 'attraction',\\n            grade: 1000,\\n            image: {\\n              id: 'b6fd7b8f-5a98-4ef9-85e8-e03ed85a5d1c',\\n              sizes: {\\n                full: {\\n                  url:\\n                    'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/b6fd7b8f-5a98-4ef9-85e8-e03ed85a5d1c.jpg',\\n                },\\n                large: {\\n                  url:\\n                    'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/b6fd7b8f-5a98-4ef9-85e8-e03ed85a5d1c.jpg',\\n                },\\n                small_square: {\\n                  url:\\n                    'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/b6fd7b8f-5a98-4ef9-85e8-e03ed85a5d1c.jpg',\\n                },\\n              },\\n              title: null,\\n              sourceUrl: 'http://www.bangkok-maps.com/bangkokairport.htm',\\n              description: null,\\n            },\\n            names: {\\n              en: 'Donmueang International Airport',\\n              ko: '돈므앙 국제공항',\\n              local: 'ท่าอากาศยานดอนเมือง',\\n            },\\n            comment: null,\\n            location: [100.6041987, 13.9132602],\\n            regionId: 'edf1982d-c835-43a7-b06b-af43acbb6f38',\\n            categories: [\\n              {\\n                name: '관광명소',\\n              },\\n            ],\\n            pointGeolocation: {\\n              type: 'Point',\\n              coordinates: [100.6041987, 13.9132602],\\n            },\\n          },\\n        },\\n      ],\\n      preferences: {\\n        time_zone: 'Asia/Bangkok',\\n        currencies: ['THB', 'USD'],\\n        recommended_duration: 3,\\n        default_search_radius: 1000,\\n      },\\n      hotelTagListings: [\\n        {\\n          tag: {\\n            id: '59e7e070-2c7a-4087-9751-c07f482002e2',\\n            name: '교통이 편리한',\\n          },\\n        },\\n        {\\n          tag: {\\n            id: 'aea83659-f4d8-4231-bc30-c7050447ebed',\\n            name: '수영장이 좋은',\\n          },\\n        },\\n        {\\n          tag: {\\n            id: 'df93d846-5a6c-42a5-a067-6301b851e7ca',\\n            name: '쇼핑하기 편한',\\n          },\\n        },\\n        {\\n          tag: {\\n            id: '1259446d-d7ac-46ea-ac8f-87e4935e8851',\\n            name: '뷰가 좋은',\\n          },\\n        },\\n        {\\n          tag: {\\n            id: '064a7031-d1da-4bb2-ae10-e111c0d8e103',\\n            name: '조식이 맛있는',\\n          },\\n        },\\n        {\\n          tag: {\\n            id: '6b107177-473b-442a-b595-ed78bde5cad2',\\n            name: '부티크 호텔',\\n          },\\n        },\\n        {\\n          tag: {\\n            id: '1d6641d3-444c-4922-9acf-6bddefb7116c',\\n            name: '아이와 함께',\\n          },\\n        },\\n        {\\n          tag: {\\n            id: '73ee800e-c5b8-4517-80d7-92a87546cd07',\\n            name: '전용비치',\\n          },\\n        },\\n      ],\\n      weatherForecastSpots: [\\n        {\\n          id: '5c29d743-8b27-456a-9029-69cad2b83a67',\\n          name: '방콕',\\n          geolocation: {\\n            type: 'Point',\\n            coordinates: [100.4930274, 13.7248946],\\n          },\\n        },\\n        {\\n          id: '80a07e7d-6fba-4d44-851a-d568cf464e56',\\n          name: '파타야',\\n          geolocation: {\\n            type: 'Point',\\n            coordinates: [100.90927999859616, 12.940290614215169],\\n          },\\n        },\\n      ],\\n      articleCategoryListings: [\\n        {\\n          picture: {\\n            id: 'a9464183-b992-4bc8-9ddd-5219a9239406',\\n            sizes: {\\n              full: {\\n                url:\\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/a9464183-b992-4bc8-9ddd-5219a9239406.jpg',\\n              },\\n              large: {\\n                url:\\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/a9464183-b992-4bc8-9ddd-5219a9239406.jpg',\\n              },\\n              small_square: {\\n                url:\\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/a9464183-b992-4bc8-9ddd-5219a9239406.jpg',\\n              },\\n            },\\n            title: null,\\n            sourceUrl: null,\\n            description: null,\\n          },\\n          category: {\\n            id: 'b1462717-952f-400c-901a-0b85d13c1331',\\n            name: '준비',\\n            icons: {},\\n          },\\n          description: '여행 전,\\\\n필수 체크사항',\\n        },\\n        {\\n          picture: {\\n            id: 'f3a48937-7fc0-453e-8a0e-2f34d068ece1',\\n            sizes: {\\n              full: {\\n                url:\\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/f3a48937-7fc0-453e-8a0e-2f34d068ece1.jpg',\\n              },\\n              large: {\\n                url:\\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/f3a48937-7fc0-453e-8a0e-2f34d068ece1.jpg',\\n              },\\n              small_square: {\\n                url:\\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/f3a48937-7fc0-453e-8a0e-2f34d068ece1.jpg',\\n              },\\n            },\\n            title: null,\\n            sourceUrl: null,\\n            description: null,\\n          },\\n          category: {\\n            id: 'd1fa8256-a8f2-4a86-b293-27a7b65695bc',\\n            name: '정보',\\n            icons: null,\\n          },\\n          description: '알면 쓸모있는\\\\n방콕 정보와 팁',\\n        },\\n        {\\n          picture: {\\n            id: 'ee3eb05a-ea02-4b5e-bb44-a0aabf5173bf',\\n            sizes: {\\n              full: {\\n                url:\\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/ee3eb05a-ea02-4b5e-bb44-a0aabf5173bf.jpg',\\n              },\\n              large: {\\n                url:\\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/ee3eb05a-ea02-4b5e-bb44-a0aabf5173bf.jpg',\\n              },\\n              small_square: {\\n                url:\\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/ee3eb05a-ea02-4b5e-bb44-a0aabf5173bf.jpg',\\n              },\\n            },\\n            title: null,\\n            sourceUrl: null,\\n            description: null,\\n          },\\n          category: {\\n            id: '91e59cd2-b45b-4cfe-8b7b-69dd1a546fe0',\\n            name: '관광',\\n            icons: null,\\n          },\\n          description: '볼거리, 즐길거리의\\\\n모든 것',\\n        },\\n        {\\n          picture: {\\n            id: '5de75dca-3fa7-44c1-8b97-5c9f320c0171',\\n            sizes: {\\n              full: {\\n                url:\\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/5de75dca-3fa7-44c1-8b97-5c9f320c0171.jpg',\\n              },\\n              large: {\\n                url:\\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/5de75dca-3fa7-44c1-8b97-5c9f320c0171.jpg',\\n              },\\n              small_square: {\\n                url:\\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/5de75dca-3fa7-44c1-8b97-5c9f320c0171.jpg',\\n              },\\n            },\\n            title: null,\\n            sourceUrl: null,\\n            description: null,\\n          },\\n          category: {\\n            id: '5563700e-b3e8-482d-af61-616e8c40620f',\\n            name: '맛집',\\n            icons: null,\\n          },\\n          description: '방콕\\\\n먹킷리스트',\\n        },\\n      ],\\n      attractionCategoryListings: [\\n        {\\n          picture: null,\\n          category: {\\n            id: 'abf9191a-fe28-4b36-8a9f-52a5e6d5666a',\\n            name: '관광명소',\\n            icons: {\\n              on: {\\n                sizes: {\\n                  large: {\\n                    url: null,\\n                  },\\n                  small: {\\n                    url:\\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/a22144ce-9cbe-46f5-a8a9-615d9e51b62c-1487926449.png',\\n                  },\\n                },\\n              },\\n              off: {\\n                sizes: {\\n                  large: {\\n                    url: null,\\n                  },\\n                  small: {\\n                    url:\\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/da7f5342-4474-4a28-812a-ca64d8525729-1487925715.png',\\n                  },\\n                },\\n              },\\n            },\\n          },\\n          description: null,\\n        },\\n        {\\n          picture: null,\\n          category: {\\n            id: 'b7e3aaee-4a0e-40b2-8ffa-99b3ec3cdff5',\\n            name: '테마/체험',\\n            icons: {\\n              on: {\\n                sizes: {\\n                  large: {\\n                    url: null,\\n                  },\\n                  small: {\\n                    url:\\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/c594a106-2b2b-4ba2-8b7e-f96a0d0559c4-1487926499.png',\\n                  },\\n                },\\n              },\\n              off: {\\n                sizes: {\\n                  large: {\\n                    url: null,\\n                  },\\n                  small: {\\n                    url:\\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/1d2ae3ee-af99-4098-bf08-51b665607fb1-1487926477.png',\\n                  },\\n                },\\n              },\\n            },\\n          },\\n          description: null,\\n        },\\n        {\\n          picture: null,\\n          category: {\\n            id: '95556107-682f-4335-bdd6-43175ba34ef4',\\n            name: '쇼핑',\\n            icons: {\\n              on: {\\n                sizes: {\\n                  large: {\\n                    url: null,\\n                  },\\n                  small: {\\n                    url:\\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/9b7facf3-fca9-4e19-ae16-6c89ad04e3b5-1487926656.png',\\n                  },\\n                },\\n              },\\n              off: {\\n                sizes: {\\n                  large: {\\n                    url: null,\\n                  },\\n                  small: {\\n                    url:\\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/f1f3d698-3b59-45a6-a93c-bf86b36fc137-1487926642.png',\\n                  },\\n                },\\n              },\\n            },\\n          },\\n          description: null,\\n        },\\n      ],\\n      restaurantCategoryListings: [\\n        {\\n          picture: null,\\n          category: {\\n            id: '280a5533-c9d0-48e8-8cad-b8c651a53d86',\\n            name: '음식점',\\n            icons: {\\n              on: {\\n                sizes: {\\n                  large: {\\n                    url: null,\\n                  },\\n                  small: {\\n                    url:\\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/650ce7bd-0ef7-4ffc-9816-7aa5dd729108-1487926580.png',\\n                  },\\n                },\\n              },\\n              off: {\\n                sizes: {\\n                  large: {\\n                    url: null,\\n                  },\\n                  small: {\\n                    url:\\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/20b2e3de-2208-416c-9fb2-8a37f3719699-1487926560.png',\\n                  },\\n                },\\n              },\\n            },\\n          },\\n          description: null,\\n        },\\n        {\\n          picture: null,\\n          category: {\\n            id: '55530454-0f37-4d35-a476-5d5100d2b449',\\n            name: '카페/디저트',\\n            icons: {\\n              on: {\\n                sizes: {\\n                  large: {\\n                    url: null,\\n                  },\\n                  small: {\\n                    url:\\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/d0f2cbaa-bedd-4571-8273-6e5f852410da-1487926543.png',\\n                  },\\n                },\\n              },\\n              off: {\\n                sizes: {\\n                  large: {\\n                    url: null,\\n                  },\\n                  small: {\\n                    url:\\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/57b156c4-8644-4622-8984-7dbfe528fafe-1487926526.png',\\n                  },\\n                },\\n              },\\n            },\\n          },\\n          description: null,\\n        },\\n        {\\n          picture: null,\\n          category: {\\n            id: 'b60013ce-5fd8-4e10-a309-0e50f47ed66e',\\n            name: '술집/바',\\n            icons: {\\n              on: {\\n                sizes: {\\n                  large: {\\n                    url: null,\\n                  },\\n                  small: {\\n                    url:\\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/f441338d-47df-4f6d-bc74-04c575736489-1487926612.png',\\n                  },\\n                },\\n              },\\n              off: {\\n                sizes: {\\n                  large: {\\n                    url: null,\\n                  },\\n                  small: {\\n                    url:\\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/546a044a-b80e-430b-87a3-814c491b6189-1487926594.png',\\n                  },\\n                },\\n              },\\n            },\\n          },\\n          description: null,\\n        },\\n      ],\\n    },\\n    nameOverride: null,\\n  },\\n]\\n\\n\\nstoriesOf('TripleDocument | TripleDocument', module).add('도시', () => (\\n  <Regions value={{ regions: REGIONS }} />\\n))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"tripledocument-tripledocument--도시\":{\"startLoc\":{\"col\":57,\"line\":572},\"endLoc\":{\"col\":1,\"line\":574},\"startBody\":{\"col\":63,\"line\":572},\"endBody\":{\"col\":1,\"line\":574}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/triple-document.regions.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { ELEMENTS } from '@titicaca/triple-document'\n\nconst { regions: Regions } = ELEMENTS\n\n/* eslint-disable */\nconst REGIONS = [\n  {\n    id: 'edf1982d-c835-43a7-b06b-af43acbb6f38',\n    type: 'region',\n    source: {\n      id: 'edf1982d-c835-43a7-b06b-af43acbb6f38',\n      type: 'region',\n      areas: [\n        {\n          id: 'af16bd5f-c629-440c-af03-39ca0fc68a02',\n          name: '수쿰빗',\n          hotelsCount: 476,\n          hotelArticleId: 'c7c6175a-c84b-43fd-aed1-59ffb8ad6b64',\n          attractionsCount: 362,\n          restaurantsCount: 1716,\n        },\n        {\n          id: '2be2e9c8-322a-4be0-9451-b826b66960a0',\n          name: '씨암, 칫롬',\n          hotelsCount: 298,\n          hotelArticleId: 'bfbeca76-e271-4912-b238-bc528dfac320',\n          attractionsCount: 422,\n          restaurantsCount: 4395,\n        },\n        {\n          id: '3c6f853c-ee6f-4fb0-a93b-d1335cc48c9d',\n          name: '올드시티',\n          hotelsCount: 275,\n          hotelArticleId: '5949e605-4e99-4bd9-ab50-60d7a68e126f',\n          attractionsCount: 230,\n          restaurantsCount: 546,\n        },\n        {\n          id: 'c92fd762-7588-4d94-a2ac-bef79dbe2535',\n          name: '사톤, 실롬, 리버사이드',\n          hotelsCount: 317,\n          hotelArticleId: 'f9cf056d-f263-4033-8115-cdad061d1ee5',\n          attractionsCount: 208,\n          restaurantsCount: 871,\n        },\n        {\n          id: '848ff90e-5fc6-4c3c-9ea6-354f35e4e1cf',\n          name: '공항 근처',\n          hotelsCount: 25,\n          hotelArticleId: 'dc6e370b-46ec-4de4-98b4-c842f5a856b0',\n          attractionsCount: 3,\n          restaurantsCount: 12,\n        },\n        {\n          id: '17b4bb3f-975e-4516-816c-1375c8b4b4a1',\n          name: '파타야',\n          hotelsCount: 1204,\n          hotelArticleId: '498c1020-405d-424d-bc49-7521842029e6',\n          attractionsCount: 120,\n          restaurantsCount: 947,\n        },\n      ],\n      names: {\n        en: 'Bangkok',\n        ko: '방콕',\n        local: null,\n      },\n      style: {\n        logoImageUrl:\n          'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/region_media/logo_image/edf1982d-c835-43a7-b06b-af43acbb6f38-1504575746.png',\n        backgroundImageUrl:\n          'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/region_media/background_image/edf1982d-c835-43a7-b06b-af43acbb6f38-1489569899.png',\n        backgroundVideoUrl:\n          'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/region_media/background_video/edf1982d-c835-43a7-b06b-af43acbb6f38-1489569905.mp4',\n        blurredBackgroundImageUrl:\n          'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/region_media/blurred_background_image/edf1982d-c835-43a7-b06b-af43acbb6f38-1490177274.png',\n      },\n      visible: true,\n      priority: 7700,\n      terminals: [\n        {\n          id: '22feaa3e-79f5-4eff-86e2-4fa70bdb748f',\n          type: 'attraction',\n          source: {\n            id: '22feaa3e-79f5-4eff-86e2-4fa70bdb748f',\n            type: 'attraction',\n            areas: [\n              {\n                name: '공항 근처',\n              },\n            ],\n            grade: 1000,\n            image: {\n              id: '3c528ce4-3146-427c-bbd2-e9b6e68306a9',\n              sizes: {\n                full: {\n                  url:\n                    'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/3c528ce4-3146-427c-bbd2-e9b6e68306a9.jpg',\n                },\n                large: {\n                  url:\n                    'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/3c528ce4-3146-427c-bbd2-e9b6e68306a9.jpg',\n                },\n                small_square: {\n                  url:\n                    'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/3c528ce4-3146-427c-bbd2-e9b6e68306a9.jpg',\n                },\n              },\n              title: null,\n              sourceUrl:\n                'http://www.e-architect.co.uk/thailand/suvarnabhumi-airport',\n              description: null,\n            },\n            names: {\n              en: 'Suvarnabhumi International Airport',\n              ko: '수완나품 국제공항',\n              local: 'ท่าอากาศยานสุวรรณภูมิ',\n            },\n            comment: null,\n            location: [100.7501124, 13.6899991],\n            regionId: 'edf1982d-c835-43a7-b06b-af43acbb6f38',\n            categories: [\n              {\n                name: '관광명소',\n              },\n            ],\n            pointGeolocation: {\n              type: 'Point',\n              coordinates: [100.7501124, 13.6899991],\n            },\n          },\n        },\n        {\n          id: '083ba341-aba3-4226-8de0-4ca6f484a756',\n          type: 'attraction',\n          source: {\n            id: '083ba341-aba3-4226-8de0-4ca6f484a756',\n            type: 'attraction',\n            grade: 1000,\n            image: {\n              id: 'b6fd7b8f-5a98-4ef9-85e8-e03ed85a5d1c',\n              sizes: {\n                full: {\n                  url:\n                    'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/b6fd7b8f-5a98-4ef9-85e8-e03ed85a5d1c.jpg',\n                },\n                large: {\n                  url:\n                    'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/b6fd7b8f-5a98-4ef9-85e8-e03ed85a5d1c.jpg',\n                },\n                small_square: {\n                  url:\n                    'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/b6fd7b8f-5a98-4ef9-85e8-e03ed85a5d1c.jpg',\n                },\n              },\n              title: null,\n              sourceUrl: 'http://www.bangkok-maps.com/bangkokairport.htm',\n              description: null,\n            },\n            names: {\n              en: 'Donmueang International Airport',\n              ko: '돈므앙 국제공항',\n              local: 'ท่าอากาศยานดอนเมือง',\n            },\n            comment: null,\n            location: [100.6041987, 13.9132602],\n            regionId: 'edf1982d-c835-43a7-b06b-af43acbb6f38',\n            categories: [\n              {\n                name: '관광명소',\n              },\n            ],\n            pointGeolocation: {\n              type: 'Point',\n              coordinates: [100.6041987, 13.9132602],\n            },\n          },\n        },\n      ],\n      preferences: {\n        time_zone: 'Asia/Bangkok',\n        currencies: ['THB', 'USD'],\n        recommended_duration: 3,\n        default_search_radius: 1000,\n      },\n      hotelTagListings: [\n        {\n          tag: {\n            id: '59e7e070-2c7a-4087-9751-c07f482002e2',\n            name: '교통이 편리한',\n          },\n        },\n        {\n          tag: {\n            id: 'aea83659-f4d8-4231-bc30-c7050447ebed',\n            name: '수영장이 좋은',\n          },\n        },\n        {\n          tag: {\n            id: 'df93d846-5a6c-42a5-a067-6301b851e7ca',\n            name: '쇼핑하기 편한',\n          },\n        },\n        {\n          tag: {\n            id: '1259446d-d7ac-46ea-ac8f-87e4935e8851',\n            name: '뷰가 좋은',\n          },\n        },\n        {\n          tag: {\n            id: '064a7031-d1da-4bb2-ae10-e111c0d8e103',\n            name: '조식이 맛있는',\n          },\n        },\n        {\n          tag: {\n            id: '6b107177-473b-442a-b595-ed78bde5cad2',\n            name: '부티크 호텔',\n          },\n        },\n        {\n          tag: {\n            id: '1d6641d3-444c-4922-9acf-6bddefb7116c',\n            name: '아이와 함께',\n          },\n        },\n        {\n          tag: {\n            id: '73ee800e-c5b8-4517-80d7-92a87546cd07',\n            name: '전용비치',\n          },\n        },\n      ],\n      weatherForecastSpots: [\n        {\n          id: '5c29d743-8b27-456a-9029-69cad2b83a67',\n          name: '방콕',\n          geolocation: {\n            type: 'Point',\n            coordinates: [100.4930274, 13.7248946],\n          },\n        },\n        {\n          id: '80a07e7d-6fba-4d44-851a-d568cf464e56',\n          name: '파타야',\n          geolocation: {\n            type: 'Point',\n            coordinates: [100.90927999859616, 12.940290614215169],\n          },\n        },\n      ],\n      articleCategoryListings: [\n        {\n          picture: {\n            id: 'a9464183-b992-4bc8-9ddd-5219a9239406',\n            sizes: {\n              full: {\n                url:\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/a9464183-b992-4bc8-9ddd-5219a9239406.jpg',\n              },\n              large: {\n                url:\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/a9464183-b992-4bc8-9ddd-5219a9239406.jpg',\n              },\n              small_square: {\n                url:\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/a9464183-b992-4bc8-9ddd-5219a9239406.jpg',\n              },\n            },\n            title: null,\n            sourceUrl: null,\n            description: null,\n          },\n          category: {\n            id: 'b1462717-952f-400c-901a-0b85d13c1331',\n            name: '준비',\n            icons: {},\n          },\n          description: '여행 전,\\n필수 체크사항',\n        },\n        {\n          picture: {\n            id: 'f3a48937-7fc0-453e-8a0e-2f34d068ece1',\n            sizes: {\n              full: {\n                url:\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/f3a48937-7fc0-453e-8a0e-2f34d068ece1.jpg',\n              },\n              large: {\n                url:\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/f3a48937-7fc0-453e-8a0e-2f34d068ece1.jpg',\n              },\n              small_square: {\n                url:\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/f3a48937-7fc0-453e-8a0e-2f34d068ece1.jpg',\n              },\n            },\n            title: null,\n            sourceUrl: null,\n            description: null,\n          },\n          category: {\n            id: 'd1fa8256-a8f2-4a86-b293-27a7b65695bc',\n            name: '정보',\n            icons: null,\n          },\n          description: '알면 쓸모있는\\n방콕 정보와 팁',\n        },\n        {\n          picture: {\n            id: 'ee3eb05a-ea02-4b5e-bb44-a0aabf5173bf',\n            sizes: {\n              full: {\n                url:\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/ee3eb05a-ea02-4b5e-bb44-a0aabf5173bf.jpg',\n              },\n              large: {\n                url:\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/ee3eb05a-ea02-4b5e-bb44-a0aabf5173bf.jpg',\n              },\n              small_square: {\n                url:\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/ee3eb05a-ea02-4b5e-bb44-a0aabf5173bf.jpg',\n              },\n            },\n            title: null,\n            sourceUrl: null,\n            description: null,\n          },\n          category: {\n            id: '91e59cd2-b45b-4cfe-8b7b-69dd1a546fe0',\n            name: '관광',\n            icons: null,\n          },\n          description: '볼거리, 즐길거리의\\n모든 것',\n        },\n        {\n          picture: {\n            id: '5de75dca-3fa7-44c1-8b97-5c9f320c0171',\n            sizes: {\n              full: {\n                url:\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/full/5de75dca-3fa7-44c1-8b97-5c9f320c0171.jpg',\n              },\n              large: {\n                url:\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/large/5de75dca-3fa7-44c1-8b97-5c9f320c0171.jpg',\n              },\n              small_square: {\n                url:\n                  'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/pictures/small_square/5de75dca-3fa7-44c1-8b97-5c9f320c0171.jpg',\n              },\n            },\n            title: null,\n            sourceUrl: null,\n            description: null,\n          },\n          category: {\n            id: '5563700e-b3e8-482d-af61-616e8c40620f',\n            name: '맛집',\n            icons: null,\n          },\n          description: '방콕\\n먹킷리스트',\n        },\n      ],\n      attractionCategoryListings: [\n        {\n          picture: null,\n          category: {\n            id: 'abf9191a-fe28-4b36-8a9f-52a5e6d5666a',\n            name: '관광명소',\n            icons: {\n              on: {\n                sizes: {\n                  large: {\n                    url: null,\n                  },\n                  small: {\n                    url:\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/a22144ce-9cbe-46f5-a8a9-615d9e51b62c-1487926449.png',\n                  },\n                },\n              },\n              off: {\n                sizes: {\n                  large: {\n                    url: null,\n                  },\n                  small: {\n                    url:\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/da7f5342-4474-4a28-812a-ca64d8525729-1487925715.png',\n                  },\n                },\n              },\n            },\n          },\n          description: null,\n        },\n        {\n          picture: null,\n          category: {\n            id: 'b7e3aaee-4a0e-40b2-8ffa-99b3ec3cdff5',\n            name: '테마/체험',\n            icons: {\n              on: {\n                sizes: {\n                  large: {\n                    url: null,\n                  },\n                  small: {\n                    url:\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/c594a106-2b2b-4ba2-8b7e-f96a0d0559c4-1487926499.png',\n                  },\n                },\n              },\n              off: {\n                sizes: {\n                  large: {\n                    url: null,\n                  },\n                  small: {\n                    url:\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/1d2ae3ee-af99-4098-bf08-51b665607fb1-1487926477.png',\n                  },\n                },\n              },\n            },\n          },\n          description: null,\n        },\n        {\n          picture: null,\n          category: {\n            id: '95556107-682f-4335-bdd6-43175ba34ef4',\n            name: '쇼핑',\n            icons: {\n              on: {\n                sizes: {\n                  large: {\n                    url: null,\n                  },\n                  small: {\n                    url:\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/9b7facf3-fca9-4e19-ae16-6c89ad04e3b5-1487926656.png',\n                  },\n                },\n              },\n              off: {\n                sizes: {\n                  large: {\n                    url: null,\n                  },\n                  small: {\n                    url:\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/f1f3d698-3b59-45a6-a93c-bf86b36fc137-1487926642.png',\n                  },\n                },\n              },\n            },\n          },\n          description: null,\n        },\n      ],\n      restaurantCategoryListings: [\n        {\n          picture: null,\n          category: {\n            id: '280a5533-c9d0-48e8-8cad-b8c651a53d86',\n            name: '음식점',\n            icons: {\n              on: {\n                sizes: {\n                  large: {\n                    url: null,\n                  },\n                  small: {\n                    url:\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/650ce7bd-0ef7-4ffc-9816-7aa5dd729108-1487926580.png',\n                  },\n                },\n              },\n              off: {\n                sizes: {\n                  large: {\n                    url: null,\n                  },\n                  small: {\n                    url:\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/20b2e3de-2208-416c-9fb2-8a37f3719699-1487926560.png',\n                  },\n                },\n              },\n            },\n          },\n          description: null,\n        },\n        {\n          picture: null,\n          category: {\n            id: '55530454-0f37-4d35-a476-5d5100d2b449',\n            name: '카페/디저트',\n            icons: {\n              on: {\n                sizes: {\n                  large: {\n                    url: null,\n                  },\n                  small: {\n                    url:\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/d0f2cbaa-bedd-4571-8273-6e5f852410da-1487926543.png',\n                  },\n                },\n              },\n              off: {\n                sizes: {\n                  large: {\n                    url: null,\n                  },\n                  small: {\n                    url:\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/57b156c4-8644-4622-8984-7dbfe528fafe-1487926526.png',\n                  },\n                },\n              },\n            },\n          },\n          description: null,\n        },\n        {\n          picture: null,\n          category: {\n            id: 'b60013ce-5fd8-4e10-a309-0e50f47ed66e',\n            name: '술집/바',\n            icons: {\n              on: {\n                sizes: {\n                  large: {\n                    url: null,\n                  },\n                  small: {\n                    url:\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/f441338d-47df-4f6d-bc74-04c575736489-1487926612.png',\n                  },\n                },\n              },\n              off: {\n                sizes: {\n                  large: {\n                    url: null,\n                  },\n                  small: {\n                    url:\n                      'https://triple-cms-development.s3-ap-northeast-1.amazonaws.com/icons/small_image/546a044a-b80e-430b-87a3-814c491b6189-1487926594.png',\n                  },\n                },\n              },\n            },\n          },\n          description: null,\n        },\n      ],\n    },\n    nameOverride: null,\n  },\n]\n/* eslint-enable */\n\nstoriesOf('TripleDocument | TripleDocument', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).add('도시', () => (\n  <Regions value={{ regions: REGIONS }} />\n))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/triple-document\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport TripleDocument, { ELEMENTS } from '@titicaca/triple-document'\\n\\nimport SAMPLE from '../__mocks__/triple-document.sample.json'\\n\\nconst {\\n  heading1: Heading1,\\n  heading2: Heading2,\\n  heading3: Heading3,\\n  heading4: Heading4,\\n  text: Text,\\n  hr1: HR1,\\n  hr2: HR2,\\n  hr3: HR3,\\n  hr4: HR4,\\n  hr5: HR5,\\n  hr6: HR6,\\n  note: Note,\\n  video: Video,\\n} = ELEMENTS\\n\\n// storybook의 jsxDecoration에는 Object를 표현하는 기능이 없어 Proxy를 호출하게 해두었습니다.\\nconst Proxy = ({ sample }) => <TripleDocument>{sample}</TripleDocument>\\n\\nstoriesOf('TripleDocument | TripleDocument', module)\\n  .add('샘플', () => <Proxy sample={SAMPLE} />)\\n  .add('텍스트', () => (\\n    <>\\n      <Heading1 value={{ emphasize: true, text: '제목0: bold 21 #2987F0' }} />\\n      <Heading1 value={{ text: '제목1: bold 21' }} />\\n      <Heading1\\n        value={{\\n          text: '제목1: bold 21',\\n          headline: '보조: bold 13 #2987F0',\\n        }}\\n      />\\n      <Heading2 value={{ text: '제목2: medium 19' }} />\\n      <Heading3 value={{ text: '제목3: bold 16' }} />\\n      <Heading4 value={{ text: '제목4: bold 16 #2987F0' }} />\\n      <Text value={{ text: '텍스트: medium 16 80%' }} />\\n      <Text bold value={{ text: '강조 텍스트: bold 16 100%' }} alpha={1} />\\n    </>\\n  ))\\n  .add('구분선', () => (\\n    <>\\n      <Text value={{ text: '구분선1' }} />\\n      <HR1 />\\n      <Text value={{ text: '구분선2' }} />\\n      <HR2 />\\n      <Text value={{ text: '구분선3' }} />\\n      <HR3 />\\n      <Text value={{ text: '구분선4' }} />\\n      <HR4 />\\n      <Text value={{ text: '구분선5' }} />\\n      <HR5 />\\n      <Text value={{ text: '구분선6' }} />\\n      <HR6 />\\n    </>\\n  ))\\n  .add('노트', () => (\\n    <Note\\n      value={{\\n        body:\\n          '목적지로 바로 가지 않고, 중간 지점에서 잠시 머무는 단기 체류를 뜻한다. 보통 경유 시간인 3-4시간 정도가 아니라 24시간 이상을 뜻하기 때문에 관광과 숙박이 가능한 것이 특징. 일부 항공사는 스탑오버시 무료 관광을 제공하니 참고할것!',\\n        title: '잠깐! 스탑오버(Stopover)란?',\\n      }}\\n    />\\n  ))\\n  .add('비디오', () => (\\n    <Video\\n      value={{\\n        provider: 'youtube',\\n        identifier: 'hYIe4VrfHoA',\\n      }}\\n    />\\n  ))\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"tripledocument-tripledocument--비디오\":{\"startLoc\":{\"col\":7,\"line\":70},\"endLoc\":{\"col\":3,\"line\":77},\"startBody\":{\"col\":14,\"line\":70},\"endBody\":{\"col\":3,\"line\":77}},\"tripledocument-tripledocument--노트\":{\"startLoc\":{\"col\":7,\"line\":61},\"endLoc\":{\"col\":3,\"line\":69},\"startBody\":{\"col\":13,\"line\":61},\"endBody\":{\"col\":3,\"line\":69}},\"tripledocument-tripledocument--구분선\":{\"startLoc\":{\"col\":7,\"line\":45},\"endLoc\":{\"col\":3,\"line\":60},\"startBody\":{\"col\":14,\"line\":45},\"endBody\":{\"col\":3,\"line\":60}},\"tripledocument-tripledocument--텍스트\":{\"startLoc\":{\"col\":7,\"line\":28},\"endLoc\":{\"col\":3,\"line\":44},\"startBody\":{\"col\":14,\"line\":28},\"endBody\":{\"col\":3,\"line\":44}},\"tripledocument-tripledocument--샘플\":{\"startLoc\":{\"col\":7,\"line\":27},\"endLoc\":{\"col\":44,\"line\":27},\"startBody\":{\"col\":13,\"line\":27},\"endBody\":{\"col\":44,\"line\":27}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/triple-document.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport TripleDocument, { ELEMENTS } from '@titicaca/triple-document'\n\nimport SAMPLE from '../__mocks__/triple-document.sample.json'\n\nconst {\n  heading1: Heading1,\n  heading2: Heading2,\n  heading3: Heading3,\n  heading4: Heading4,\n  text: Text,\n  hr1: HR1,\n  hr2: HR2,\n  hr3: HR3,\n  hr4: HR4,\n  hr5: HR5,\n  hr6: HR6,\n  note: Note,\n  video: Video,\n} = ELEMENTS\n\n// storybook의 jsxDecoration에는 Object를 표현하는 기능이 없어 Proxy를 호출하게 해두었습니다.\nconst Proxy = ({ sample }) => <TripleDocument>{sample}</TripleDocument>\n\nstoriesOf('TripleDocument | TripleDocument', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('샘플', () => <Proxy sample={SAMPLE} />)\n  .add('텍스트', () => (\n    <>\n      <Heading1 value={{ emphasize: true, text: '제목0: bold 21 #2987F0' }} />\n      <Heading1 value={{ text: '제목1: bold 21' }} />\n      <Heading1\n        value={{\n          text: '제목1: bold 21',\n          headline: '보조: bold 13 #2987F0',\n        }}\n      />\n      <Heading2 value={{ text: '제목2: medium 19' }} />\n      <Heading3 value={{ text: '제목3: bold 16' }} />\n      <Heading4 value={{ text: '제목4: bold 16 #2987F0' }} />\n      <Text value={{ text: '텍스트: medium 16 80%' }} />\n      <Text bold value={{ text: '강조 텍스트: bold 16 100%' }} alpha={1} />\n    </>\n  ))\n  .add('구분선', () => (\n    <>\n      <Text value={{ text: '구분선1' }} />\n      <HR1 />\n      <Text value={{ text: '구분선2' }} />\n      <HR2 />\n      <Text value={{ text: '구분선3' }} />\n      <HR3 />\n      <Text value={{ text: '구분선4' }} />\n      <HR4 />\n      <Text value={{ text: '구분선5' }} />\n      <HR5 />\n      <Text value={{ text: '구분선6' }} />\n      <HR6 />\n    </>\n  ))\n  .add('노트', () => (\n    <Note\n      value={{\n        body:\n          '목적지로 바로 가지 않고, 중간 지점에서 잠시 머무는 단기 체류를 뜻한다. 보통 경유 시간인 3-4시간 정도가 아니라 24시간 이상을 뜻하기 때문에 관광과 숙박이 가능한 것이 특징. 일부 항공사는 스탑오버시 무료 관광을 제공하니 참고할것!',\n        title: '잠깐! 스탑오버(Stopover)란?',\n      }}\n    />\n  ))\n  .add('비디오', () => (\n    <Video\n      value={{\n        provider: 'youtube',\n        identifier: 'hYIe4VrfHoA',\n      }}\n    />\n  ))\n","\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/boxersb/workspace/triple-frontend/docs/stories/user-verification\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { VerificationRequest } from '@titicaca/user-verification'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {\\n  title: 'user-verification | VerificationRequest',\\n}\\n\\nexport function ExampleVerificationRequest() {\\n  return <VerificationRequest onCancel={action('onCancel')} />\\n}\\n\\nExampleVerificationRequest.story = {\\n  name: '기본',\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"user-verification-verificationrequest--example-verification-request\":{\"startLoc\":{\"col\":7,\"line\":9},\"endLoc\":{\"col\":1,\"line\":11},\"startBody\":{\"col\":7,\"line\":9},\"endBody\":{\"col\":1,\"line\":11}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/verification-request.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { VerificationRequest } from '@titicaca/user-verification'\nimport { action } from '@storybook/addon-actions'\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React from 'react'\\nimport { VerificationRequest } from '@titicaca/user-verification'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {\\n  title: 'user-verification | VerificationRequest',\\n}\\n\\nexport function ExampleVerificationRequest() {\\n  return <VerificationRequest onCancel={action('onCancel')} />\\n}\\n\\nExampleVerificationRequest.story = {\\n  name: '기본',\\n}\\n\",\"locationsMap\":{\"user-verification-verificationrequest--example-verification-request\":{\"startLoc\":{\"col\":7,\"line\":9},\"endLoc\":{\"col\":1,\"line\":11},\"startBody\":{\"col\":7,\"line\":9},\"endBody\":{\"col\":1,\"line\":11}}}},},\n  title: 'user-verification | VerificationRequest',\n}\n\nexport const ExampleVerificationRequest = addSourceDecorator(function ExampleVerificationRequest() {\n  return <VerificationRequest onCancel={action('onCancel')} />\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nExampleVerificationRequest.story = {\n  name: '기본',\n}\n","/* (ignored) */"],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AAMA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAMA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAGA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAHA;AAWA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAHA;AAWA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAHA;;;;;;;;;;;;;;;;;;;;;;AClKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACteaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AAIA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;AC5KA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AACA;AAGA;AACA;AACA;AADA;AAVA;AAeA;AACA;AAlBA;AAoBA;AACA;AADA;AA1BA;AA+BA;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAKA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AC5NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAWA;AAEA;AAkBA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAQA;AACA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAKA;AAKA;AAKA;AAKA;AAhDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmDA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;ACzKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;ACnlFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;ACrjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAIA;AAAA;AAKA;AACA;AAFA;AAJA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAAA;AACA;AACA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9NA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAHA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAQA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/OA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AACA;AADA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AAEA;AAJA;AAOA;AACA;AACA;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoCA;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqCA;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACplkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAHA;;;;;;;;;;;;;;;;;;;;;;;;ACrxEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAHA;AACA;AAgBA;AAAA;AACA;AADA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAGA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAHA;AAWA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAKA;AACA;AAKA;AACA;AAAA;AAGA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAKA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AACA;AASA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AArBA;AAwBA;AACA;AAFA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAKA;AAKA;AAGA;AACA;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;AACA;AADA;AATA;AALA;AAoBA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;AACA;AADA;AATA;AAcA;AACA;AACA;AAnBA;AAqBA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;;;;;;;;;;;;AC5QA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACraA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AALA;AAQA;AAEA;AACA;AACA;AALA;AAQA;AAEA;AACA;AAEA;AANA;AASA;AAEA;AACA;AACA;AALA;AAQA;AAEA;AACA;AACA;AALA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;;;;;;;;;;;;ACrEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;AAyBA;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;;;;A","sourceRoot":""}