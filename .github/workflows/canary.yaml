name: canary

on:
  issue_comment:
    types: [created]

jobs:
  canary:
    if: github.event.issue.state == 'open' && contains(github.event.comment.html_url, '/pull/') && contains(github.event.comment.body, 'canary publish')
    runs-on: ubuntu-latest
    strategy:
        matrix:
          node-version: [12.x]

    steps:
    - name: Recognize head sha of pull request
      run: |
        curl -v \
          --url https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.issue.number }} \
          -H "Accept: application/vnd.github.sailor-v-preview+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" > pr.json

        PR_SHA=$(cat ./pr.json | jq '.head.sha' | sed 's/\"//g')
        echo ::set-env name=PR_NUMBER::${{ github.event.issue.number }}
        echo ::set-env name=PR_SHA::$PR_SHA
        echo ::set-env name=PR_SHORT_SHA::${PR_SHA:0:7}
        echo ::set-env name=PR_TITLE::$(cat ./pr.json | jq '.title' | sed 's/\"//g')

    - name: Reaction
      run: |
        curl -v \
          --url https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.squirrel-girl-preview+json" \
          -H "Content-Type: application/json" \
          -f --request POST \
          -d "{\"content\":\"+1\"}"
        curl -v \
          --url https://api.github.com/repos/${{ github.repository }}/issues/${{ env.PR_NUMBER }}/comments \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/json" \
          -f --request POST \
          -d "{\"body\":\"@${{ github.event.comment.user.login}} I got it! :rocket:\"}"

    - name: Git checkout@v2
      uses: actions/checkout@v2
      with:
        ref: ${{ env.PR_SHA }}

    - name: Notify build start to slack
      uses: rtCamp/action-slack-notify@v2.0.0
      env:
        SLACK_CHANNEL: CMSJHHMA4
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: GHA Notifications
        SLACK_ICON_EMOJI: ':gear:'
        SLACK_COLOR: good
        SLACK_TITLE: Build WORKING
        SLACK_MESSAGE: ${{ env.PR_TITLE }}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'

    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-build-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-

    - name: Build and Test
      run: |
        npm ci
        npm run lint
        npm run bootstrap
        npm run build
        npm test
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Notify build and test success to slack
      if: success()
      uses: rtCamp/action-slack-notify@v2.0.0
      env:
        SLACK_CHANNEL: CMSJHHMA4
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: GHA Notifications
        SLACK_ICON_EMOJI: ':gear:'
        SLACK_COLOR: good
        SLACK_TITLE: ${{ ':tada:' }} Build SUCCESS
        SLACK_MESSAGE: ${{ env.PR_TITLE }}

    - name: Notify build and test fail to slack
      if: failure()
      uses: rtCamp/action-slack-notify@v2.0.0
      env:
        SLACK_CHANNEL: CMSJHHMA4
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: GHA Notifications
        SLACK_ICON_EMOJI: ':gear:'
        SLACK_COLOR: warning
        SLACK_TITLE: ${{ ':x:' }} Build FAIL
        SLACK_MESSAGE: ${{ env.PR_TITLE }}

    - name: Canary Release
      run: |
        git stash
        git fetch --unshallow
        git checkout ${{ env.PR_SHORT_SHA }}

        npx lerna publish --canary --force-publish --yes --preid "pr-${{ env.PR_NUMBER }}"
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}