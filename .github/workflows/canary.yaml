name: canary

on:
  issue_comment:
    types: [created]

jobs:
  canary:
    if: github.event.issue.state == 'open' && contains(github.event.comment.html_url, '/pull/') && (endsWith(github.event.comment.body, 'canary publish') || endsWith(github.event.comment.body, 'canary release'))
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    env:
      SLACK_CHANNEL: '#triple-web-dev-notifications'
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      SLACK_USERNAME: 'Triple Frontend'
      SLACK_ICON_EMOJI: ':triple_new:'
      SLACK_COLOR: gray
      SLACK_FOOTER: 'Triple Frontend'
      SLACK_AUTHOR_NAME: ${{ github.event.sender.login }}
      SLACK_AUTHOR_ICON: '${{ github.event.sender.avatar_url }}'
      SLACK_GITHUB_EVENT_NAME: '${{ github.event_name }}'
      SLACK_GITHUB_REPOSITORY: '${{ github.repository }}'
      SLACK_DETAIL_URL: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Recognize head sha of pull request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools fetch-github-pr ${{ github.event.issue.number }}

          PR_SHA=$(cat ./pr.json | jq -r '.head.sha')
          PR_REF=$(cat ./pr.json | jq -r '.head.ref')
          echo "PR_NUMBER=${{ github.event.issue.number }}" >> GITHUB_ENV
          echo "PR_SHA=$PR_SHA" >> GITHUB_ENV
          echo "PR_REF=$PR_REF" >> GITHUB_ENV
          echo "SLACK_GITHUB_REF=$PR_REF" >> GITHUB_ENV
          echo "PR_SHORT_SHA=${PR_SHA:0:7}" >> GITHUB_ENV
          echo "PR_TITLE=$(cat ./pr.json | jq -r '.title')" >> GITHUB_ENV

      - name: Reaction
        run: |
          curl -v \
            --url https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.squirrel-girl-preview+json" \
            -H "Content-Type: application/json" \
            -f --request POST \
            -d "{\"content\":\"+1\"}"
          curl -v \
            --url https://api.github.com/repos/${{ github.repository }}/issues/${{ env.PR_NUMBER }}/comments \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -f --request POST \
            -d "{\"body\":\"@${{ github.event.sender.login}} I got it! :rocket: \"}"

      - name: Git checkout@v2
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_SHA }}

      - name: Notify build start to slack
        env:
          SLACK_TITLE: ':rocket: Build Started'
          SLACK_TOPIC: '${{ env.PR_TITLE }}'
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-

      - name: Build
        run: |
          npm ci
          npm run lint
          npm run bootstrap
          npm run build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Notify build success to slack
        if: success()
        env:
          SLACK_TITLE: ':tada: Build Succeed'
          SLACK_TOPIC: '${{ env.PR_TITLE }}'
          SLACK_COLOR: good
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify

      - name: Notify build fail to slack
        if: failure()
        env:
          SLACK_TITLE: ':pleading: Build Failed'
          SLACK_TOPIC: '${{ env.PR_TITLE }}'
          SLACK_COLOR: fail
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify

      - name: Preparing canary publish
        run: |
          git stash
          git fetch --unshallow
          git checkout ${{ env.PR_SHORT_SHA }}

          NEXT_VERSION=$(node -e "const [major, minor, patch] = require('./lerna.json').version.split('.');console.log(['v'+major, minor, parseInt(patch, 10) + 1].join('.'))")
          REF_COUNT=$(node -p -e "Math.max(0, parseInt((\"$(git describe --always --long --dirty --match "v*.*.*")\".match(/^(?:.*@)?.*-(\d+)-.*?$/) || ['0', '0'])[1], 10) - 1)")

          echo "CANARY_VERSION=$NEXT_VERSION-pr-${{ env.PR_NUMBER }}.$REF_COUNT" >> GITHUB_ENV

          echo ${{ env.CANARY_VERSION }}

      - name: Notify canary publish start to slack
        env:
          SLACK_TITLE: ':rocket: Canary publish Started'
          SLACK_TOPIC: '${{ env.CANARY_VERSION }}'
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify

      - name: Canary Release
        run: |
          npx lerna publish --canary --force-publish --yes --preid "pr-${{ env.PR_NUMBER }}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Notify canary publish success to slack
        if: success()
        env:
          SLACK_TITLE: ':tada: Canary publish Succeed'
          SLACK_TOPIC: '${{ env.CANARY_VERSION }}'
          SLACK_COLOR: good
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          TAG_NAME="release-canary"

          curl -f --request POST --url https://api.github.com/repos/${{ github.repository }}/git/tags \
            -H 'Authorization: token ${{ secrets.GHA_TOKEN }}' \
            -H 'Content-Type: application/json' \
            -d "{\"tag\":\"${TAG_NAME}\",\"message\":\"`v${{ env.CANARY_VERSION }}`\",\"object\":\"${{ env.PR_SHA }}\",\"type\":\"commit\"}" > tag.json

          TAG_SHA="$(node -p -e 'require(`./tag.json`).sha')"

          curl -s -o /dev/null -I -w "%{http_code}" \
            --url https://api.github.com/repos/${{ github.repository }}/git/refs/tags/${TAG_NAME} \
            -H 'Authorization: token ${{ secrets.GHA_TOKEN }}' > status

          if [[ `cat status` == "200" ]]; then
            curl -f --request PATCH --url https://api.github.com/repos/${{ github.repository }}/git/refs/tags/${TAG_NAME} \
              -H 'Authorization: token ${{ secrets.GHA_TOKEN }}' \
              -H 'Content-Type: application/json' \
              -d "{\"force\":true,\"sha\":\"${TAG_SHA}\"}"
          else
            curl -f --request POST --url https://api.github.com/repos/${{ github.repository }}/git/refs \
              -H 'Authorization: token ${{ secrets.GHA_TOKEN }}' \
              -H 'Content-Type: application/json' \
              -d "{\"ref\":\"refs/tags/${TAG_NAME}\",\"sha\":\"${TAG_SHA}\"}"
          fi
          npx @titicaca/gha-tools notify

      - name: Notify canary publish failure to slack
        if: failure()
        env:
          SLACK_TITLE: ':pleading: Canary publish Failed'
          SLACK_TOPIC: '${{ env.CANARY_VERSION }}'
          SLACK_COLOR: fail
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify
