name: canary-on-publish

on:
  pull_request_review:
    types: [submitted]

jobs:
  canary:
    if: github.event.review.state == 'commented' && contains(github.event.review.body, 'canary publish')
    runs-on: ubuntu-latest
    strategy:
        matrix:
          node-version: [12.x]

    env:
      SLACK_CHANNEL: "#triple-web-dev-notifications"
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      SLACK_USERNAME: "Triple Frontend"
      SLACK_ICON_EMOJI: ":triple_new:"
      SLACK_COLOR: gray
      SLACK_FOOTER: "Triple Frontend"
      SLACK_AUTHOR_NAME: ${{ github.event.sender.login }}
      SLACK_AUTHOR_ICON: "${{ github.event.sender.avatar_url }}"
      SLACK_GITHUB_EVENT_NAME: "${{ github.event_name }}"
      SLACK_GITHUB_REPOSITORY: "${{ github.repository }}"
      SLACK_DETAIL_URL: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

    steps:
      - name: Recognize head sha of pull request
        run: |
          PR_SHA=${{ github.event.pull_request.head.sha }}
          PR_REF=${{ github.event.pull_request.head.ref }}
          echo ::set-env name=PR_NUMBER::${{ github.event.pull_request.number }}
          echo ::set-env name=PR_SHA::$PR_SHA
          echo ::set-env name=PR_REF::$PR_REF
          echo ::set-env name=SLACK_GITHUB_REF::$PR_REF
          echo ::set-env name=PR_SHORT_SHA::${PR_SHA:0:7}
          echo ::set-env name=PR_TITLE::${{ github.event.pull_request.title }}

      - name: Reaction
        run: |
          curl -v \
            --url https://api.github.com/repos/${{ github.repository }}/issues/${{ env.PR_NUMBER }}/comments \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -f --request POST \
            -d "{\"body\":\"@${{ github.event.sender.login}} I got it! :rocket: \"}"

      - name: Git checkout@v2
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_SHA }}

      - name: Notify build start to slack
        env:
          SLACK_TITLE: ":rocket: Build Started"
          SLACK_TOPIC: "${{ env.PR_TITLE }}"
        run: |
          npx @titicaca/gha-tools notify

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-

      - name: Build
        run: |
          npm ci
          npm run lint
          npm run bootstrap
          npm run build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Notify build success to slack
        if: success()
        env:
          SLACK_TITLE: ":tada: Build Succeed"
          SLACK_TOPIC: "${{ env.PR_TITLE }}"
          SLACK_COLOR: good
        run: |
          npx @titicaca/gha-tools notify

      - name: Notify build fail to slack
        if: failure()
        env:
          SLACK_TITLE: ":pleading: Build Failed"
          SLACK_TOPIC: "${{ env.PR_TITLE }}"
          SLACK_COLOR: fail
        run: |
          npx @titicaca/gha-tools notify

      - name: Preparing canary publish
        run: |
          git stash
          git fetch --unshallow
          git checkout ${{ env.PR_SHORT_SHA }}

          NEXT_VERSION=$(node -e "const [major, minor, patch] = require('./lerna.json').version.split('.');console.log(['v'+major, minor, parseInt(patch, 10) + 1].join('.'))")
          REF_COUNT=$(node -p -e "Math.max(0, parseInt((\"$(git describe --always --long --dirty --match "v*.*.*")\".match(/^(?:.*@)?.*-(\d+)-.*?$/) || ['0', '0'])[1], 10) - 1)")
          echo ::set-env name=CANARY_VERSION::$NEXT_VERSION-pr-${{ env.PR_NUMBER }}.$REF_COUNT
          echo ${{ env.CANARY_VERSION }}

      - name: Notify canary publish start to slack
        env:
          SLACK_TITLE: ":rocket: Canary publish Started"
          SLACK_TOPIC: "${{ env.CANARY_VERSION }}"
        run: |
          npx @titicaca/gha-tools notify

      - name: Canary Release
        run: |
          npx lerna publish --canary --force-publish --yes --preid "pr-${{ env.PR_NUMBER }}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Notify canary publish success to slack
        if: success()
        env:
          SLACK_TITLE: ":tada: Canary publish Succeed"
          SLACK_TOPIC: "${{ env.CANARY_VERSION }}"
          SLACK_COLOR: good
        run: |
          npx @titicaca/gha-tools notify

      - name: Notify canary publish success to slack
        if: failure()
        env:
          SLACK_TITLE: ":pleading: Canary publish Failed"
          SLACK_TOPIC: "${{ env.CANARY_VERSION }}"
          SLACK_COLOR: fail
        run: |
          npx @titicaca/gha-tools notify
