name: CD

on:
  push:
    branches-ignore:
      - '**'
    tags:
      - 'release-prod-*'

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2-beta
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'
    - name: Build
      run: |
        npm ci
        npm run bootstrap
        npm run build
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: Release
      run: |
        git stash
        npx lerna publish from-package --yes
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  tag:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2-beta
    - name: Setup Node.js
      uses: actions/setup-node@v1
    - name: Tag with annotation
      run: |
        VERSION="v$(node -p -e 'require(`./lerna.json`).version')"
        curl -f --request POST --url https://api.github.com/repos/${{ github.repository }}/git/tags \
          -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' \
          -H 'Content-Type: application/json' \
          -d "{\"tag\":\"${VERSION}\",\"message\":\"${VERSION}\",\"object\":\"${GITHUB_SHA}\",\"type\":\"commit\"}" > tag.json

        TAG_SHA="$(node -p -e 'require(`./tag.json`).sha')"

        curl -s -o /dev/null -I -w "%{http_code}" \
          --url https://api.github.com/repos/${{ github.repository }}/git/refs/tags/${VERSION} \
          -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' > status

        if [[ `cat status` == "200" ]]; then
          curl -f --request PATCH --url https://api.github.com/repos/${{ github.repository }}/git/refs/tags/${VERSION} \
            -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' \
            -H 'Content-Type: application/json' \
            -d "{\"force\":true,\"sha\":\"${TAG_SHA}\"}"
        else
          curl -f --request POST --url https://api.github.com/repos/${{ github.repository }}/git/refs \
            -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' \
            -H 'Content-Type: application/json' \
            -d "{\"ref\":\"refs/tags/${VERSION}\",\"sha\":\"${TAG_SHA}\"}"
        fi
