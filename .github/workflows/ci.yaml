name: CI
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

env:
  # Node.js
  NODE_VERSION: '16.x'
  NPM_REGISTRY_URL: 'https://registry.npmjs.org'
  SLACK_CHANNEL: '#triple-web-dev-notifications'
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  SLACK_USERNAME: 'Triple Frontend'
  SLACK_ICON_EMOJI: ':triple_new:'
  SLACK_COLOR: gray
  SLACK_FOOTER: 'Triple Frontend'
  SLACK_TOPIC: ${{ github.event.pull_request.title }}
  SLACK_AUTHOR_NAME: ${{ github.event.sender.login }}
  SLACK_AUTHOR_ICON: '${{ github.event.sender.avatar_url }}'
  SLACK_GITHUB_REF: '${{ github.event.pull_request.head.ref }}'
  SLACK_GITHUB_EVENT_NAME: '${{ github.event_name }}'
  SLACK_GITHUB_REPOSITORY: ${{ github.repository }}
  SLACK_DETAIL_URL: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'

jobs:
  check-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.NPM_REGISTRY_URL }}

      - uses: actions/checkout@v2

      - run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}

      - run: npm run sync-deps

      - name: Check working tree clean
        id: check-working-tree
        run: |
          DIFF=$(git diff)
          echo "::set-output name=clean::$([ -z $DIFF ] && echo 'true')"

      - name: Notify checking dependency failure
        if: steps.check-working-tree.outputs.clean != 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}
          SLACK_COLOR: fail
          SLACK_TITLE: ':pleading: Deps check FAILURE'
          SLACK_TOPIC: '의존성 변경이 있습니다. `npm run sync-deps`로 변경을 반영해주세요.'
        run: npx @titicaca/gha-tools notify

      - name: Shutdown workflow
        if: steps.check-working-tree.outputs.clean != 'true'
        run: node -e 'process.exit(1)'

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2-beta

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.NPM_REGISTRY_URL }}

      - name: Notify build start to slack
        env:
          SLACK_TITLE: ':rocket: Build Started'
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-

      - name: Install dependencies
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Build storybook
        run: npm run build:storybook

      - name: Test
        run: npm run test:ci

      - name: Notify build success to slack
        if: success()
        env:
          SLACK_TITLE: ':tada: Build Succeed'
          SLACK_COLOR: success
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify

      - name: Notify build fail to slack
        if: failure()
        env:
          SLACK_TITLE: ':pleading: Build Failed'
          SLACK_COLOR: fail
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify
